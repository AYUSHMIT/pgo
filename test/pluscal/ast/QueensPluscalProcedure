------ MODULE AST -------
EXTENDS TLC
fairness == ""
 
ast == 
[type     |-> "uniprocess", 
 name  |-> "Queens", 
 decls  |-> <<[var |-> "todo", eqOrIn |-> "=", val |-> << "{", "<<", ">>", "}" >>], 
              [var |-> "sols", eqOrIn |-> "=", val |-> << "{", "}" >>], 
              [var |-> "rVal", eqOrIn |-> "=", val |-> << "defaultInitValue" >>]>>,
 defs   |-> <<  >>,
 prcds  |-> <<[name   |-> "PgoAttacks", 
              minusLabels |-> <<>>, plusLabels |-><<>>, proceduresCalled |-><<>>,
               params |-> <<[var |-> "queens", eqOrIn |-> "=", val |-> << "defaultInitValue" >>], 
                            [var |-> "i", eqOrIn |-> "=", val |-> << "defaultInitValue" >>], 
                            [var |-> "j", eqOrIn |-> "=", val |-> << "defaultInitValue" >>]>>,
               decls  |-> <<>>,
               body   |-> <<[label |-> "attlabl",
                             stmts |-> <<[type |-> "assignment",
                                          ass  |-> <<[lhs |-> [var |-> "rVal", sub |-> <<  >>],
                                                      rhs |-> << "\\/", "queens", "[", "i", "]", "=", "queens", "[", "j", "]"
, "\\/", "queens", "[", "i", "]", "-", "queens", "[", "j", "]", "=", "i", "-", "j"
, "\\/", "queens", "[", "j", "]", "-", "queens", "[", "i", "]", "=", "i", "-", "j" >>]>>], 
                                         [type |-> "return", from |-> "PgoAttacks"]>>]>>]>>,
 body  |-> <<[label |-> "nxtQ",
              stmts |-> <<[type    |-> "while", 
                           test    |-> << "todo", "#", "{", "}" >>,
                           labDo   |-> <<>>,
                           unlabDo |-> <<[type   |-> "with", 
                                          var    |-> "queens",
                                          eqOrIn |-> "\\in",
                                          exp    |-> << "todo" >>,
                                          do     |-> <<[type   |-> "with", 
                                                        var    |-> "nxtQ",
                                                        eqOrIn |-> "=",
                                                        exp    |-> << "Len", "(", "queens", ")", "+", "1" >>,
                                                        do     |-> <<[type   |-> "with", 
                                                                      var    |-> "cols",
                                                                      eqOrIn |-> "=",
                                                                      exp    |-> << "{", "c", "\\in", "1", "..", "N", ":", "~", "\\E", "i", "\\in", "1", "..", "Len", "(", "queens", ")", ":"
, "Attacks", "(", "Append", "(", "queens", ",", "c", ")", ",", "i", ",", "nxtQ", ")", "}" >>,
                                                                      do     |-> <<[type   |-> "with", 
                                                                                    var    |-> "exts",
                                                                                    eqOrIn |-> "=",
                                                                                    exp    |-> << "{", "Append", "(", "queens", ",", "c", ")", ":", "c", "\\in", "cols", "}" >>,
                                                                                    do     |-> <<[type    |-> "if", 
                                                                                                  test    |-> << "(", "nxtQ", "=", "N", ")" >>,
                                                                                                  then |-> <<[type |-> "assignment",
                                                                                                              ass  |-> <<[lhs |-> [var |-> "todo", sub |-> <<  >>],
                                                                                                                          rhs |-> << "todo", "\\", "{", "queens", "}" >>]>>], 
                                                                                                             [type |-> "assignment",
                                                                                                              ass  |-> <<[lhs |-> [var |-> "sols", sub |-> <<  >>],
                                                                                                                          rhs |-> << "sols", "\\union", "exts" >>]>>]>>,
                                                                                                  else |-> <<[type |-> "assignment",
                                                                                                              ass  |-> <<[lhs |-> [var |-> "todo", sub |-> <<  >>],
                                                                                                                          rhs |-> << "(", "todo", "\\", "{", "queens", "}", ")", "\\union", "exts" >>]>>]>>]>>]>>]>>]>>]>>]>>]>>]
==========================
