-------------------------------- MODULE raftkvs --------------------------------

\* Raft consensus protocol specification based on the TLA+ spec from
\* https://github.com/ongardie/raft.tla.
\*
\* We used limited buffer sized network channels to improve model checking 
\* perofmance. Also leader election part of Raft is not live by design.
\* These two can cause deadlock, so don't check deadlocks in model checking.
\*
\* Properties are defined based on the presented properties in the original 
\* Raft paper. See figure 3 in https://raft.github.io/raft.pdf.

EXTENDS Naturals, Sequences, TLC, FiniteSets

CONSTANT ExploreFail
CONSTANT Debug

CONSTANT NumServers
CONSTANT NumClients

CONSTANT BufferSize

CONSTANT MaxTerm
CONSTANT MaxCommitIndex

CONSTANT MaxNodeFail

CONSTANT LogConcat
CONSTANT LogPop

CONSTANT LeaderTimeoutReset

RECURSIVE MinAcc(_, _), MaxAcc(_, _)

Min(s) ==
    LET e == CHOOSE e \in s : TRUE
    IN MinAcc(s \ { e }, e)

MinAcc(s, e1) ==
    IF s = {} THEN e1
    ELSE
        LET e2 == CHOOSE e2 \in s : TRUE
        IN MinAcc(s \ { e2 }, IF e2 < e1 THEN e2 ELSE e1)

Max(s) ==
    LET e == CHOOSE e \in s : TRUE
    IN MaxAcc(s \ { e }, e)

MaxAcc(s, e1) ==
    IF s = {} THEN e1
    ELSE
        LET e2 == CHOOSE e2 \in s : TRUE
        IN MaxAcc(s \ { e2 }, IF e2 > e1 THEN e2 ELSE e1)

RECURSIVE FindAgreeIndicesAcc(_, _, _, _, _)

isQuorum(s) == Cardinality(s) * 2 > NumServers
ServerSet   == 1..NumServers

FindAgreeIndices(logLocal, i, matchIndex) ==
    FindAgreeIndicesAcc(logLocal, i, matchIndex, Len(logLocal), {})

FindAgreeIndicesAcc(logLocal, i, matchIndex, index, acc) ==
    IF index = 0 THEN acc
    ELSE
        IF isQuorum({i} \cup {k \in ServerSet : matchIndex[k] >= index})
        THEN acc \cup {index}
        ELSE FindAgreeIndicesAcc(logLocal, i, matchIndex, index - 1, acc)

RECURSIVE ApplyLog(_, _, _, _, _)

Put == "put"
Get == "get"

ApplyLogEntry(xentry, xsm, xsmDomain) ==
    LET cmd == xentry.cmd
    IN IF cmd.type = Put
       THEN <<xsm @@ (cmd.key :> cmd.value), xsmDomain \cup {cmd.key}>>
       ELSE <<xsm, xsmDomain>>

\* applies range [start, end] from the log to the state machine
ApplyLog(xlog, start, end, xsm, xsmDomain) == 
    IF start > end
    THEN <<xsm, xsmDomain>>
    ELSE
        LET result == ApplyLogEntry(xlog[start], xsm, xsmDomain)
        IN ApplyLog(xlog, start+1, end, result[1], result[2])

(********************

--mpcal raftkvs {
    define {
        Follower  == "follower"
        Candidate == "candidate"
        Leader    == "leader"

        RequestVoteRequest    == "rvq"
        RequestVoteResponse   == "rvp"
        AppendEntriesRequest  == "apq"
        AppendEntriesResponse == "app"
        ClientPutRequest      == "cpq"
        ClientPutResponse     == "cpp"
        ClientGetRequest      == "cgq"
        ClientGetResponse     == "cgp"

        Key1   == "key1"
        Key2   == "key2"
        Value1 == "value1"

        LastTerm(xlog) == IF Len(xlog) = 0 THEN 0 ELSE xlog[Len(xlog)].term

        Nil == 0

        ServerRequestVoteSet        == (1*NumServers+1)..(2*NumServers)
        ServerAppendEntriesSet      == (2*NumServers+1)..(3*NumServers)
        ServerAdvanceCommitIndexSet == (3*NumServers+1)..(4*NumServers)
        ServerBecomeLeaderSet       == (4*NumServers+1)..(5*NumServers)

        ServerCrasherSet == IF ExploreFail 
                            THEN (5*NumServers+1)..(5*NumServers+1)
                            ELSE {}

        ClientSet == (6*NumServers+1)..(6*NumServers+NumClients)

        NodeSet   == ServerSet \cup ClientSet

        KeySet == {}
    }

    macro checkFail(selfId, netEnabled) {
        if (ExploreFail) {
            if (\lnot netEnabled[selfId]) {
                await FALSE;
            };
        };
    }

    macro debug(toPrint) {
        if (Debug) {
            print toPrint;
        };
    }

    macro Send(net, dest, fd, m) {
        either {
            net[dest] := m;
        } or {
            await fd[dest];
        };
    }

    macro UpdateTerm(i, m, currentTerm, state, votedFor, leader) {
        if (m.mterm > currentTerm[i]) {
            currentTerm[i] := m.mterm;
            state[i]       := Follower;
            votedFor[i]    := Nil;
            leader[i]      := Nil;
        };
    }

    mapping macro ReliableFIFOLink {
        read {
            assert $variable.enabled;
            await Len($variable.queue) > 0;
            with (readMsg = Head($variable.queue)) {
                $variable := [queue |-> Tail($variable.queue), enabled |-> $variable.enabled];
                yield readMsg;
            };
        }

        write {
            await $variable.enabled;
            await Len($variable.queue) < BufferSize;
            yield [queue |-> Append($variable.queue, $value), enabled |-> $variable.enabled];
        }
    }

    mapping macro NetworkToggle {
        read { yield $variable.enabled; }

        write {
            yield [queue |-> $variable.queue, enabled |-> $value];
        }
    }

    mapping macro PerfectFD {
        read {
            yield $variable;
        }

        write { yield $value; }
    }

    mapping macro NetworkBufferLength {
        read {
            yield Len($variable.queue);
        }

        write {
            assert FALSE;
            yield $value;
        }
    }

    mapping macro InputChannel {
        read {
            await Len($variable) > 0;
            with (res = Head($variable)) {
                $variable := Tail($variable);
                yield res;
            };
        }

        write {
            yield Append($variable, $value);
        }
    }

    mapping macro PersistentLog {
        read {
            yield $variable;
        }

        write {
            if ($value.cmd = LogConcat) {
                yield $variable \o $value.entries;
            } else if ($value.cmd = LogPop) {
                yield SubSeq($variable, 1, Len($variable) - 1);
            };
        }
    }

    archetype AServer(
        srvId,
        ref net[_], ref netLen[_], ref netEnabled[_], ref fd[_],
        ref state[_], ref currentTerm[_],
        ref log[_], ref plog[_],
        ref commitIndex[_], ref nextIndex[_], ref matchIndex[_],
        ref votedFor[_], ref votesResponded[_], ref votesGranted[_],

        \* added by Shayan
        ref leader[_],
        ref sm[_], ref smDomain[_],
        ref leaderTimeout, ref appendEntriesCh
    )
    variables
        idx = 1,
        m;
    {
    serverLoop:
        while (TRUE) {
            checkFail(self, netEnabled);

            m := net[self];
            assert m.mdest = self;
            leaderTimeout := LeaderTimeoutReset;

        handleMsg:
            checkFail(self, netEnabled);

            if (m.mtype = RequestVoteRequest) {
                UpdateTerm(self, m, currentTerm, state, votedFor, leader);

                \* HandleRequestVoteRequest
                with (
                    i = self, j = m.msource,
                    logOK = \/ m.mlastLogTerm > LastTerm(log[i])
                            \/ /\ m.mlastLogTerm = LastTerm(log[i])
                                /\ m.mlastLogIndex >= Len(log[i]),
                    grant = /\ m.mterm = currentTerm[i]
                            /\ logOK
                            /\ votedFor[self] \in {Nil, j}
                ) {
                    assert m.mterm <= currentTerm[i];
                    if (grant) {
                        votedFor[i] := j;
                    };
                    Send(net, j, fd, [
                        mtype        |-> RequestVoteResponse,
                        mterm        |-> currentTerm[i],
                        mvoteGranted |-> grant,
                        msource      |-> i,
                        mdest        |-> j
                    ]);

                    debug(<<"HandleRequestVoteRequest", i, j, currentTerm[i], grant>>);
                };
            } else if (m.mtype = RequestVoteResponse) {
                UpdateTerm(self, m, currentTerm, state, votedFor, leader);

                \* DropStaleResponse
                if (m.mterm < currentTerm[self]) {
                    \* goto serverLoop;
                    skip;
                } else {
                    \* HandleRequestVoteResponse
                    with (i = self, j = m.msource) {
                        assert m.mterm = currentTerm[i];
                        votesResponded[i] := votesResponded[i] \cup {j};
                        if (m.mvoteGranted) {
                            votesGranted[i] := votesGranted[i] \cup {j};
                        }; 
                    };
                };
            } else if (m.mtype = AppendEntriesRequest) {
                UpdateTerm(self, m, currentTerm, state, votedFor, leader);

                leader[self] := m.msource;

                \* HandleAppendEntriesRequest
                with (
                    i = self, j = m.msource,
                    logOK = \/ m.mprevLogIndex = 0
                            \/ /\ m.mprevLogIndex > 0
                                /\ m.mprevLogIndex <= Len(log[i])
                                /\ m.mprevLogTerm = log[i][m.mprevLogIndex].term
                ) {
                    assert m.mterm <= currentTerm[i];

                    \* return to follower state
                    if (
                        /\ m.mterm = currentTerm[i]
                        /\ state[i] = Candidate
                    ) {
                        state[i] := Follower;
                    };

                    \* reject request
                    if (
                        \/ m.mterm < currentTerm[i]
                        \/ /\ m.mterm = currentTerm[i]
                            /\ state[i] = Follower
                            /\ \lnot logOK
                    ) {
                        Send(net, j, fd, [
                            mtype       |-> AppendEntriesResponse,
                            mterm       |-> currentTerm[i],
                            msuccess    |-> FALSE,
                            mmatchIndex |-> 0,
                            msource     |-> i,
                            mdest       |-> j
                        ]);
                    }
                    \* accept request
                    else {
                        assert (
                            /\ m.mterm = currentTerm[i]
                            /\ state[i] = Follower
                            /\ logOK
                        );
                        with (index = m.mprevLogIndex + 1) {
                            \* conflict: remove 1 entry
                            if (
                                /\ m.mentries /= << >>
                                /\ Len(log[i]) >= index
                                /\ log[i][index].term /= m.mentries[1].term
                            ) {
                                \* log[i] := [k \in 1..(Len(log[i])-1) |-> log[i][k]];
                                log[i]  := SubSeq(log[i], 1, Len(log[i]) - 1);
                                plog[i] := [cmd |-> LogPop];
                            };

                            \* no conflict: append entry
                            if (
                                /\ m.mentries /= << >>
                                /\ Len(log[i]) = m.mprevLogIndex
                            ) {
                                \* log[i] := Append(log[i], m.mentries[1]);
                                log[i]  := log[i] \o m.mentries;
                                \* debug(<<"plog concat", i, leader, m.mentries>>);
                                plog[i] := [cmd |-> LogConcat, entries |-> m.mentries];
                            };

                            \* already done with request
                            if (
                                \/ m.mentries = << >>
                                \/ /\ m.mentries /= << >>
                                    /\ Len(log[i]) >= index
                                    /\ log[i][index].term = m.mentries[1].term
                            ) {
                                \* This could make our commitIndex decrease (for
                                \* example if we process an old, duplicated request),
                                \* but that doesn't really affect anything.
                                with (result = ApplyLog(log[i], commitIndex[i]+1, m.mcommitIndex,
                                      sm[i], smDomain[i])) {
                                    sm[i]       := result[1];
                                    smDomain[i] := result[2];
                                };
                                commitIndex[i] := Max({commitIndex[i], m.mcommitIndex});
                                Send(net, j, fd, [
                                    mtype       |-> AppendEntriesResponse,
                                    mterm       |-> currentTerm[i],
                                    msuccess    |-> TRUE,
                                    mmatchIndex |-> m.mprevLogIndex + Len(m.mentries),
                                    msource     |-> i,
                                    mdest       |-> j
                                ]);
                            };
                        };
                    };
                };
            } else if (m.mtype = AppendEntriesResponse) {
                UpdateTerm(self, m, currentTerm, state, votedFor, leader);

                \* DropStaleResponse
                if (m.mterm < currentTerm[self]) {
                    \* goto serverLoop;
                    skip;
                } else {
                    \* HandleAppendEntriesResponse
                    with (i = self, j = m.msource) {
                        assert m.mterm = currentTerm[i];
                        if (m.msuccess) {
                            \* nextIndex[j]  := m.mmatchIndex + 1;
                            nextIndex[i] := [nextIndex[i] EXCEPT ![j] = m.mmatchIndex + 1];
                            \* matchIndex[j] := m.mmatchIndex;
                            matchIndex[i] := [matchIndex[i] EXCEPT ![j] = m.mmatchIndex];
                        } else {
                            nextIndex[i] := [nextIndex[i] EXCEPT ![j] = Max({nextIndex[i][j]-1, 1})];
                            \* nextIndex[j]  := Max({nextIndex[j]-1, 1});
                        };
                    };
                };
            } else if (
                \/ m.mtype = ClientPutRequest
                \/ m.mtype = ClientGetRequest
            ) {
                \* ClientRequest
                if (state[self] = Leader) {
                    with (entry = [term   |-> currentTerm[self],
                                    cmd    |-> m.mcmd,
                                    client |-> m.msource]
                    ) {
                        log[self]  := Append(log[self], entry);
                        plog[self] := [cmd |-> LogConcat, entries |-> <<entry>>];

                        \* commented out for perf optimization
                        \* appendEntriesCh := TRUE;
                    };
                } else {
                    with (
                        i = self, j = m.msource,
                        respType = IF m.mcmd.type = Put
                                    THEN ClientPutResponse
                                    ELSE ClientGetResponse
                    ) {
                        net[j] := [
                            mtype       |-> respType,
                            msuccess    |-> FALSE,
                            mresponse   |-> [
                                idx |-> m.mcmd.idx,
                                key |-> m.mcmd.key
                            ],
                            mleaderHint |-> leader[i],
                            msource     |-> i,
                            mdest       |-> j
                        ];
                    };
                };
            };
        };
    }

    archetype AServerRequestVote(
        srvId,
        ref net[_], ref netLen[_], ref netEnabled[_], ref fd[_],
        ref state[_], ref currentTerm[_],
        ref log[_], ref plog[_],
        ref commitIndex[_], ref nextIndex[_], ref matchIndex[_],
        ref votedFor[_], ref votesResponded[_], ref votesGranted[_],

        \* added by Shayan
        ref leader[_],
        ref sm[_], ref smDomain[_],
        ref leaderTimeout, ref appendEntriesCh
    )
    variable idx = 1;
    {
    serverRequestVoteLoop:
        while (TRUE) {
            checkFail(srvId, netEnabled);

            \* Server times out and starts a new election.
            await state[srvId] \in {Follower, Candidate};
            await (
                /\ netLen[srvId] = 0
                /\ leaderTimeout
            );

            with (i = srvId) {
                state[i]          := Candidate;
                currentTerm[i]    := currentTerm[i] + 1;
                votedFor[i]       := i;
                votesResponded[i] := {i};
                votesGranted[i]   := {i};
                leader[i]         := Nil;

                debug(<<"ServerTimeout", i, currentTerm[i]>>);
            };

            idx := 1;
        requestVoteLoop:
            while (idx <= NumServers) {
                checkFail(srvId, netEnabled);

                \* RequestVote
                if (idx /= srvId) {
                    Send(net, idx, fd, [
                        mtype         |-> RequestVoteRequest,
                        mterm         |-> currentTerm[srvId],
                        mlastLogTerm  |-> LastTerm(log[srvId]),
                        mlastLogIndex |-> Len(log[srvId]),
                        msource       |-> srvId,
                        mdest         |-> idx
                    ]);
                };
                idx := idx + 1;
            };
        }
    }

    archetype AServerAppendEntries(
        srvId,
        ref net[_], ref netLen[_], ref netEnabled[_], ref fd[_],
        ref state[_], ref currentTerm[_],
        ref log[_], ref plog[_],
        ref commitIndex[_], ref nextIndex[_], ref matchIndex[_],
        ref votedFor[_], ref votesResponded[_], ref votesGranted[_],

        \* added by Shayan
        ref leader[_],
        ref sm[_], ref smDomain[_],
        ref leaderTimeout, ref appendEntriesCh
    )
    variable idx;
    {
    serverAppendEntriesLoop:
        while (appendEntriesCh) {
            checkFail(srvId, netEnabled);

            await state[srvId] = Leader;
            idx := 1;

        appendEntriesLoop:
            \* AppendEntries
            while (
                /\ state[srvId] = Leader
                /\ idx <= NumServers
            ) {
                checkFail(srvId, netEnabled);

                if (idx /= srvId) {
                    with (
                        prevLogIndex = nextIndex[srvId][idx] - 1,
                        prevLogTerm  = IF prevLogIndex > 0
                                       THEN log[srvId][prevLogIndex].term
                                       ELSE 0,
                        lastEntry    = Min({Len(log[srvId]), nextIndex[srvId][idx]}),
                        entries      = SubSeq(log[srvId], nextIndex[srvId][idx], lastEntry)
                    ) {
                        Send(net, idx, fd, [
                            mtype         |-> AppendEntriesRequest,
                            mterm         |-> currentTerm[srvId],
                            mprevLogIndex |-> prevLogIndex,
                            mprevLogTerm  |-> prevLogTerm,
                            mentries      |-> entries,
                            mcommitIndex  |-> Min({commitIndex[srvId], lastEntry}),
                            msource       |-> srvId,
                            mdest         |-> idx
                        ]);
                    };
                };
                idx := idx + 1;
            };
        };
    }

    archetype AServerAdvanceCommitIndex(
        srvId,
        ref net[_], ref netLen[_], ref netEnabled[_], ref fd[_],
        ref state[_], ref currentTerm[_],
        ref log[_], ref plog[_],
        ref commitIndex[_], ref nextIndex[_], ref matchIndex[_],
        ref votedFor[_], ref votesResponded[_], ref votesGranted[_],

        \* added by Shayan
        ref leader[_],
        ref sm[_], ref smDomain[_],
        ref leaderTimeout, ref appendEntriesCh
    )
    variable newCommitIndex = 0,
    {
    serverAdvanceCommitIndexLoop:
        while (TRUE) {
            checkFail(srvId, netEnabled);

            await state[srvId] = Leader;

            \* AdvanceCommitIndex
            with (
                i = srvId,

                \* gives a much smaller set than above, proportional to disagreement not log size
                agreeIndexes = FindAgreeIndices(log[i], i, matchIndex[i]),

                nCommitIndex =
                    IF /\ agreeIndexes /= {}
                        /\ log[i][Max(agreeIndexes)].term = currentTerm[i]
                    THEN Max(agreeIndexes)
                    ELSE commitIndex[i]
            ) {
                newCommitIndex := nCommitIndex;
                assert newCommitIndex >= commitIndex[i];
            };

        applyLoop:
            while (commitIndex[srvId] < newCommitIndex) {
                checkFail(srvId, netEnabled);

                commitIndex[srvId] := commitIndex[srvId] + 1;
                with (
                    i = srvId,
                    k = commitIndex[i],
                    entry = log[i][k],
                    cmd   = entry.cmd,
                    respType = IF cmd.type = Put
                                THEN ClientPutResponse
                                ELSE ClientGetResponse
                ) {
                    if (cmd.type = Put) {
                        sm[i]       := sm[i] @@ (cmd.key :> cmd.value); \* allows sm[i] to grow
                        smDomain[i] := smDomain[i] \cup {cmd.key};
                    };
                    with (reqOk = cmd.key \in smDomain[i]) {
                        net[entry.client] := [
                            mtype       |-> respType,
                            msuccess    |-> TRUE,
                            mresponse   |-> [
                                idx   |-> cmd.idx,
                                key   |-> cmd.key,
                                value |-> IF reqOk THEN sm[i][cmd.key] ELSE Nil,
                                ok    |-> reqOk
                            ],
                            mleaderHint |-> i,
                            msource     |-> i,
                            mdest       |-> entry.client
                        ];
                    };
                };
            };
        };
    }

    archetype AServerBecomeLeader(
        srvId,
        ref net[_], ref netLen[_], ref netEnabled[_], ref fd[_],
        ref state[_], ref currentTerm[_],
        ref log[_], ref plog[_],
        ref commitIndex[_], ref nextIndex[_], ref matchIndex[_],
        ref votedFor[_], ref votesResponded[_], ref votesGranted[_],

        \* added by Shayan
        ref leader[_],
        ref sm[_], ref smDomain[_],
        ref leaderTimeout, ref appendEntriesCh
    )
    {
    serverBecomeLeaderLoop:
        while (TRUE) {
            checkFail(srvId, netEnabled);

            \* BecomeLeader
            await (
                /\ state[srvId] = Candidate
                /\ isQuorum(votesGranted[srvId])
            );
            with (i = srvId) {
                state[i]      := Leader;
                nextIndex[i]  := [j \in ServerSet |-> Len(log[i]) + 1];
                matchIndex[i] := [j \in ServerSet |-> 0];
                leader[i]     := i;

                appendEntriesCh := TRUE;
                debug(<<"BecomeLeader", i, currentTerm[i]>>);
            };
        };
    }

    archetype AClient(ref net[_], ref netLen[_], ref fd[_], ref reqCh, ref respCh, ref timeout)
    variables leader = Nil, req, resp, reqIdx = 0;
    {
    clientLoop:
        while (TRUE) {
            req := reqCh;
            reqIdx := reqIdx + 1;

        sndReq:
            if (leader = Nil) {
                with (srv \in ServerSet) {
                    leader := srv;
                };
            };
            if (req.type = Put) {
                Send(net, leader, fd, [
                    mtype   |-> ClientPutRequest,
                    mcmd    |-> [
                        idx   |-> reqIdx,
                        type  |-> Put,
                        key   |-> req.key,
                        value |-> req.value
                    ],
                    msource |-> self,
                    mdest   |-> leader
                ]);
            } else if (req.type = Get) {
                Send(net, leader, fd, [
                    mtype   |-> ClientGetRequest,
                    mcmd    |-> [
                        idx  |-> reqIdx,
                        type |-> Get,
                        key  |-> req.key
                    ],
                    msource |-> self,
                    mdest   |-> leader
                ]);
            };
            debug(<<"ClientSndReq", self, leader, reqIdx, req>>);

        rcvResp:
            either {
                resp := net[self];
                debug(<<"ClientRcvResp", self, leader, reqIdx, resp>>);
                assert resp.mdest = self;

                \* it should be /very likely/ that indexed requests will help us
                \* throw out duplicate server responses.
                \* one edge case I can think of: start, do one req, immediately
                \* stop + restart, immediately get stale response to last req.
                if (resp.mresponse.idx /= reqIdx) {
                    goto rcvResp;
                } else {
                    leader := resp.mleaderHint;
                    assert /\ req.type = Get => resp.mtype = ClientGetResponse
                           /\ req.type = Put => resp.mtype = ClientPutResponse;
                    if (\lnot resp.msuccess) {
                        goto sndReq;
                    } else {
                        assert /\ resp.mresponse.idx = reqIdx
                               /\ resp.mresponse.key = req.key;
                        respCh := resp;
                    };
                };
            } or {
                await \/ /\ fd[leader] 
                         /\ netLen[self] = 0
                      \/ timeout;
                leader := Nil;
                goto sndReq;
            };
        };
    }

    archetype AServerCrasher(srvId, ref netEnabled[_], ref fd[_]) {
    serverCrash:
        netEnabled[srvId] := FALSE;
    fdUpdate:
        fd[srvId] := TRUE;
    block:
        await FALSE;
    }

    variables
        network = [i \in NodeSet |-> [queue |-> << >>, enabled |-> TRUE]];
        fd = [i \in ServerSet |-> FALSE];

        state       = [i \in ServerSet |-> Follower];
        currentTerm = [i \in ServerSet |-> 1];

        commitIndex = [i \in ServerSet |-> 0];
        nextIndex   = [i \in ServerSet |-> [j \in ServerSet |-> 1]];
        matchIndex  = [i \in ServerSet |-> [j \in ServerSet |-> 0]];

        log         = [i \in ServerSet |-> <<>>];
        plog        = [i \in ServerSet |-> <<>>];

        votedFor = [i \in ServerSet |-> Nil];
        votesResponded = [i \in ServerSet |-> {}];
        votesGranted   = [i \in ServerSet |-> {}];

        leader = [i \in ServerSet |-> Nil];

        sm       = [i \in ServerSet |-> [k \in KeySet |-> Nil]];
        smDomain = [i \in ServerSet |-> KeySet];

        leaderTimeout   = TRUE;
        appendEntriesCh = TRUE;

        reqCh  = <<
            [type |-> Put, key |-> Key1, value |-> Value1]
            \* [type |-> Get, key |-> Key2]
            \* [type |-> Get, key |-> Key1]
        >>;
        respCh;

        requestVoteSrvId        = [i \in ServerRequestVoteSet        |-> i - 1*NumServers];
        appendEntriesSrvId      = [i \in ServerAppendEntriesSet      |-> i - 2*NumServers];
        advanceCommitIndexSrvId = [i \in ServerAdvanceCommitIndexSet |-> i - 3*NumServers];
        becomeLeaderSrvId       = [i \in ServerBecomeLeaderSet       |-> i - 4*NumServers];
        crasherSrvId            = [i \in ServerCrasherSet            |-> i - 5*NumServers];

    fair process (s0 \in ServerSet) == instance AServer(
        s0,
        ref network[_], ref network[_], ref network[_], ref fd[_],
        ref state[_], ref currentTerm[_],
        ref log[_], ref plog[_],
        ref commitIndex[_], ref nextIndex[_], ref matchIndex[_],
        ref votedFor[_], ref votesResponded[_], ref votesGranted[_],

        ref leader[_],
        ref sm[_], ref smDomain[_],
        ref leaderTimeout, ref appendEntriesCh
    )
        mapping @2[_] via ReliableFIFOLink
        mapping @3[_] via NetworkBufferLength
        mapping @4[_] via NetworkToggle
        mapping @5[_] via PerfectFD
        mapping @9[_] via PersistentLog;

    fair process (s1 \in ServerRequestVoteSet) == instance AServerRequestVote(
        requestVoteSrvId[s1],
        ref network[_], ref network[_], ref network[_], ref fd[_],
        ref state[_], ref currentTerm[_],
        ref log[_], ref plog[_],
        ref commitIndex[_], ref nextIndex[_], ref matchIndex[_],
        ref votedFor[_], ref votesResponded[_], ref votesGranted[_],

        ref leader[_],
        ref sm[_], ref smDomain[_],
        ref leaderTimeout, ref appendEntriesCh
    )
        mapping @2[_] via ReliableFIFOLink
        mapping @3[_] via NetworkBufferLength
        mapping @4[_] via NetworkToggle
        mapping @5[_] via PerfectFD
        mapping @9[_] via PersistentLog;

    fair process (s2 \in ServerAppendEntriesSet) == instance AServerAppendEntries(
        appendEntriesSrvId[s2],
        ref network[_], ref network[_], ref network[_], ref fd[_],
        ref state[_], ref currentTerm[_],
        ref log[_], ref plog[_],
        ref commitIndex[_], ref nextIndex[_], ref matchIndex[_],
        ref votedFor[_], ref votesResponded[_], ref votesGranted[_],

        ref leader[_],
        ref sm[_], ref smDomain[_],
        ref leaderTimeout, ref appendEntriesCh
    )
        mapping @2[_] via ReliableFIFOLink
        mapping @3[_] via NetworkBufferLength
        mapping @4[_] via NetworkToggle
        mapping @5[_] via PerfectFD
        mapping @9[_] via PersistentLog;

    fair process (s3 \in ServerAdvanceCommitIndexSet) == instance AServerAdvanceCommitIndex(
        advanceCommitIndexSrvId[s3],
        ref network[_], ref network[_], ref network[_], ref fd[_],
        ref state[_], ref currentTerm[_],
        ref log[_], ref plog[_],
        ref commitIndex[_], ref nextIndex[_], ref matchIndex[_],
        ref votedFor[_], ref votesResponded[_], ref votesGranted[_],

        ref leader[_],
        ref sm[_], ref smDomain[_],
        ref leaderTimeout, ref appendEntriesCh
    )
        mapping @2[_] via ReliableFIFOLink
        mapping @3[_] via NetworkBufferLength
        mapping @4[_] via NetworkToggle
        mapping @5[_] via PerfectFD
        mapping @9[_] via PersistentLog;

    fair process (s4 \in ServerBecomeLeaderSet) == instance AServerBecomeLeader(
        becomeLeaderSrvId[s4],
        ref network[_], ref network[_], ref network[_], ref fd[_],
        ref state[_], ref currentTerm[_],
        ref log[_], ref plog[_],
        ref commitIndex[_], ref nextIndex[_], ref matchIndex[_],
        ref votedFor[_], ref votesResponded[_], ref votesGranted[_],

        ref leader[_],
        ref sm[_], ref smDomain[_],
        ref leaderTimeout, ref appendEntriesCh
    )
        mapping @2[_] via ReliableFIFOLink
        mapping @3[_] via NetworkBufferLength
        mapping @4[_] via NetworkToggle
        mapping @5[_] via PerfectFD
        mapping @9[_] via PersistentLog;

    fair process (client \in ClientSet) == instance AClient(
        ref network[_], ref network[_], ref fd[_],
        ref reqCh, ref respCh, FALSE
    )
        mapping @1[_] via ReliableFIFOLink
        mapping @2[_] via NetworkBufferLength
        mapping @3[_] via PerfectFD
        mapping @4    via InputChannel;
    
    fair process (crasher \in ServerCrasherSet) == instance AServerCrasher(
        crasherSrvId[crasher],
        ref network[_], ref fd[_]
    )
        mapping @2[_] via NetworkToggle
        mapping @3[_] via PerfectFD;
}

\* BEGIN PLUSCAL TRANSLATION
--algorithm raftkvs {
  variables network = [i \in NodeSet |-> [queue |-> <<>>, enabled |-> TRUE]]; fd = [i \in ServerSet |-> FALSE]; state = [i \in ServerSet |-> Follower]; currentTerm = [i \in ServerSet |-> 1]; commitIndex = [i \in ServerSet |-> 0]; nextIndex = [i \in ServerSet |-> [j \in ServerSet |-> 1]]; matchIndex = [i \in ServerSet |-> [j \in ServerSet |-> 0]]; log = [i \in ServerSet |-> <<>>]; plog = [i \in ServerSet |-> <<>>]; votedFor = [i \in ServerSet |-> Nil]; votesResponded = [i \in ServerSet |-> {}]; votesGranted = [i \in ServerSet |-> {}]; leader = [i \in ServerSet |-> Nil]; sm = [i \in ServerSet |-> [k \in KeySet |-> Nil]]; smDomain = [i \in ServerSet |-> KeySet]; leaderTimeout = TRUE; appendEntriesCh = TRUE; reqCh = <<[type |-> Put, key |-> Key1, value |-> Value1]>>; respCh; requestVoteSrvId = [i \in ServerRequestVoteSet |-> (i) - ((1) * (NumServers))]; appendEntriesSrvId = [i \in ServerAppendEntriesSet |-> (i) - ((2) * (NumServers))]; advanceCommitIndexSrvId = [i \in ServerAdvanceCommitIndexSet |-> (i) - ((3) * (NumServers))]; becomeLeaderSrvId = [i \in ServerBecomeLeaderSet |-> (i) - ((4) * (NumServers))]; crasherSrvId = [i \in ServerCrasherSet |-> (i) - ((5) * (NumServers))];
  define{
    Follower == "follower"
    Candidate == "candidate"
    Leader == "leader"
    RequestVoteRequest == "rvq"
    RequestVoteResponse == "rvp"
    AppendEntriesRequest == "apq"
    AppendEntriesResponse == "app"
    ClientPutRequest == "cpq"
    ClientPutResponse == "cpp"
    ClientGetRequest == "cgq"
    ClientGetResponse == "cgp"
    Key1 == "key1"
    Key2 == "key2"
    Value1 == "value1"
    LastTerm(xlog) == IF (Len(xlog)) = (0) THEN 0 ELSE ((xlog)[Len(xlog)]).term
    Nil == 0
    ServerRequestVoteSet == (((1) * (NumServers)) + (1)) .. ((2) * (NumServers))
    ServerAppendEntriesSet == (((2) * (NumServers)) + (1)) .. ((3) * (NumServers))
    ServerAdvanceCommitIndexSet == (((3) * (NumServers)) + (1)) .. ((4) * (NumServers))
    ServerBecomeLeaderSet == (((4) * (NumServers)) + (1)) .. ((5) * (NumServers))
    ServerCrasherSet == IF ExploreFail THEN (((5) * (NumServers)) + (1)) .. (((5) * (NumServers)) + (1)) ELSE {}
    ClientSet == (((6) * (NumServers)) + (1)) .. (((6) * (NumServers)) + (NumClients))
    NodeSet == (ServerSet) \union (ClientSet)
    KeySet == {}
  }
  
  fair process (s0 \in ServerSet)
    variables idx = 1; m; srvId = self;
  {
    serverLoop:
      if (TRUE) {
        if (ExploreFail) {
          with (yielded_network12 = ((network)[self]).enabled) {
            if (~ (yielded_network12)) {
              await FALSE;
              assert ((network)[self]).enabled;
              await (Len(((network)[self]).queue)) > (0);
              with (readMsg00 = Head(((network)[self]).queue)) {
                network := [network EXCEPT ![self] = [queue |-> Tail(((network)[self]).queue), enabled |-> ((network)[self]).enabled]];
                with (yielded_network00 = readMsg00) {
                  m := yielded_network00;
                  assert ((m).mdest) = (self);
                  leaderTimeout := LeaderTimeoutReset;
                  goto handleMsg;
                };
              };
            } else {
              assert ((network)[self]).enabled;
              await (Len(((network)[self]).queue)) > (0);
              with (readMsg01 = Head(((network)[self]).queue)) {
                network := [network EXCEPT ![self] = [queue |-> Tail(((network)[self]).queue), enabled |-> ((network)[self]).enabled]];
                with (yielded_network01 = readMsg01) {
                  m := yielded_network01;
                  assert ((m).mdest) = (self);
                  leaderTimeout := LeaderTimeoutReset;
                  goto handleMsg;
                };
              };
            };
          };
        } else {
          assert ((network)[self]).enabled;
          await (Len(((network)[self]).queue)) > (0);
          with (readMsg02 = Head(((network)[self]).queue)) {
            network := [network EXCEPT ![self] = [queue |-> Tail(((network)[self]).queue), enabled |-> ((network)[self]).enabled]];
            with (yielded_network02 = readMsg02) {
              m := yielded_network02;
              assert ((m).mdest) = (self);
              leaderTimeout := LeaderTimeoutReset;
              goto handleMsg;
            };
          };
        };
      } else {
        goto Done;
      };
    handleMsg:
      if (ExploreFail) {
        with (yielded_network13 = ((network)[self]).enabled) {
          if (~ (yielded_network13)) {
            await FALSE;
            if (((m).mtype) = (RequestVoteRequest)) {
              if (((m).mterm) > ((currentTerm)[self])) {
                currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
                state := [state EXCEPT ![self] = Follower];
                with (votedFor3 = [votedFor EXCEPT ![self] = Nil]) {
                  leader := [leader EXCEPT ![self] = Nil];
                  with (
                    i = self, 
                    j = (m).msource, 
                    logOK = (((m).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m).mlastLogIndex) >= (Len((log)[i])))), 
                    grant = ((((m).mterm) = ((currentTerm)[i])) /\ (logOK)) /\ (((votedFor3)[self]) \in ({Nil, j}))
                  ) {
                    assert ((m).mterm) <= ((currentTerm)[i]);
                    if (grant) {
                      votedFor := [votedFor3 EXCEPT ![i] = j];
                      either {
                        with (value00 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                          await ((network)[j]).enabled;
                          await (Len(((network)[j]).queue)) < (BufferSize);
                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value00), enabled |-> ((network)[j]).enabled]];
                          if (Debug) {
                            print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                            goto serverLoop;
                          } else {
                            goto serverLoop;
                          };
                        };
                      } or {
                        with (yielded_fd7 = (fd)[j]) {
                          await yielded_fd7;
                          if (Debug) {
                            print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                            goto serverLoop;
                          } else {
                            goto serverLoop;
                          };
                        };
                      };
                    } else {
                      either {
                        with (value01 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                          await ((network)[j]).enabled;
                          await (Len(((network)[j]).queue)) < (BufferSize);
                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value01), enabled |-> ((network)[j]).enabled]];
                          if (Debug) {
                            print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                            votedFor := votedFor3;
                            goto serverLoop;
                          } else {
                            votedFor := votedFor3;
                            goto serverLoop;
                          };
                        };
                      } or {
                        with (yielded_fd8 = (fd)[j]) {
                          await yielded_fd8;
                          if (Debug) {
                            print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                            votedFor := votedFor3;
                            goto serverLoop;
                          } else {
                            votedFor := votedFor3;
                            goto serverLoop;
                          };
                        };
                      };
                    };
                  };
                };
              } else {
                with (
                  i = self, 
                  j = (m).msource, 
                  logOK = (((m).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m).mlastLogIndex) >= (Len((log)[i])))), 
                  grant = ((((m).mterm) = ((currentTerm)[i])) /\ (logOK)) /\ (((votedFor)[self]) \in ({Nil, j}))
                ) {
                  assert ((m).mterm) <= ((currentTerm)[i]);
                  if (grant) {
                    votedFor := [votedFor EXCEPT ![i] = j];
                    either {
                      with (value02 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                        await ((network)[j]).enabled;
                        await (Len(((network)[j]).queue)) < (BufferSize);
                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value02), enabled |-> ((network)[j]).enabled]];
                        if (Debug) {
                          print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                          goto serverLoop;
                        } else {
                          goto serverLoop;
                        };
                      };
                    } or {
                      with (yielded_fd9 = (fd)[j]) {
                        await yielded_fd9;
                        if (Debug) {
                          print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                          goto serverLoop;
                        } else {
                          goto serverLoop;
                        };
                      };
                    };
                  } else {
                    either {
                      with (value03 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                        await ((network)[j]).enabled;
                        await (Len(((network)[j]).queue)) < (BufferSize);
                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value03), enabled |-> ((network)[j]).enabled]];
                        if (Debug) {
                          print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                          goto serverLoop;
                        } else {
                          goto serverLoop;
                        };
                      };
                    } or {
                      with (yielded_fd10 = (fd)[j]) {
                        await yielded_fd10;
                        if (Debug) {
                          print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                          goto serverLoop;
                        } else {
                          goto serverLoop;
                        };
                      };
                    };
                  };
                };
              };
            } else {
              if (((m).mtype) = (RequestVoteResponse)) {
                if (((m).mterm) > ((currentTerm)[self])) {
                  currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
                  state := [state EXCEPT ![self] = Follower];
                  votedFor := [votedFor EXCEPT ![self] = Nil];
                  leader := [leader EXCEPT ![self] = Nil];
                  if (((m).mterm) < ((currentTerm)[self])) {
                    skip;
                    goto serverLoop;
                  } else {
                    with (
                      i = self, 
                      j = (m).msource
                    ) {
                      assert ((m).mterm) = ((currentTerm)[i]);
                      votesResponded := [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})];
                      if ((m).mvoteGranted) {
                        votesGranted := [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})];
                        goto serverLoop;
                      } else {
                        goto serverLoop;
                      };
                    };
                  };
                } else {
                  if (((m).mterm) < ((currentTerm)[self])) {
                    skip;
                    goto serverLoop;
                  } else {
                    with (
                      i = self, 
                      j = (m).msource
                    ) {
                      assert ((m).mterm) = ((currentTerm)[i]);
                      votesResponded := [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})];
                      if ((m).mvoteGranted) {
                        votesGranted := [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})];
                        goto serverLoop;
                      } else {
                        goto serverLoop;
                      };
                    };
                  };
                };
              } else {
                if (((m).mtype) = (AppendEntriesRequest)) {
                  if (((m).mterm) > ((currentTerm)[self])) {
                    currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
                    with (state3 = [state EXCEPT ![self] = Follower]) {
                      votedFor := [votedFor EXCEPT ![self] = Nil];
                      with (leader3 = [leader EXCEPT ![self] = Nil]) {
                        leader := [leader3 EXCEPT ![self] = (m).msource];
                        with (
                          i = self, 
                          j = (m).msource, 
                          logOK = (((m).mprevLogIndex) = (0)) \/ (((((m).mprevLogIndex) > (0)) /\ (((m).mprevLogIndex) <= (Len((log)[i])))) /\ (((m).mprevLogTerm) = ((((log)[i])[(m).mprevLogIndex]).term)))
                        ) {
                          assert ((m).mterm) <= ((currentTerm)[i]);
                          if ((((m).mterm) = ((currentTerm)[i])) /\ (((state3)[i]) = (Candidate))) {
                            state := [state3 EXCEPT ![i] = Follower];
                            if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                              either {
                                with (value14 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                  await ((network)[j]).enabled;
                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value14), enabled |-> ((network)[j]).enabled]];
                                  goto serverLoop;
                                };
                              } or {
                                with (yielded_fd00 = (fd)[j]) {
                                  await yielded_fd00;
                                  goto serverLoop;
                                };
                              };
                            } else {
                              assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                              with (index = ((m).mprevLogIndex) + (1)) {
                                if (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m).mentries)[1]).term))) {
                                  with (
                                    log12 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))], 
                                    value20 = [cmd |-> LogPop]
                                  ) {
                                    if (((value20).cmd) = (LogConcat)) {
                                      with (plog12 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value20).entries)]) {
                                        if ((((m).mentries) # (<<>>)) /\ ((Len((log12)[i])) = ((m).mprevLogIndex))) {
                                          log := [log12 EXCEPT ![i] = ((log12)[i]) \o ((m).mentries)];
                                          with (value30 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                            if (((value30).cmd) = (LogConcat)) {
                                              plog := [plog12 EXCEPT ![i] = ((plog12)[i]) \o ((value30).entries)];
                                              if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                with (result48 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                  sm := [sm EXCEPT ![i] = (result48)[1]];
                                                  smDomain := [smDomain EXCEPT ![i] = (result48)[2]];
                                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                  either {
                                                    with (value40 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                      await ((network)[j]).enabled;
                                                      await (Len(((network)[j]).queue)) < (BufferSize);
                                                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value40), enabled |-> ((network)[j]).enabled]];
                                                      goto serverLoop;
                                                    };
                                                  } or {
                                                    with (yielded_fd11 = (fd)[j]) {
                                                      await yielded_fd11;
                                                      goto serverLoop;
                                                    };
                                                  };
                                                };
                                              } else {
                                                goto serverLoop;
                                              };
                                            } else {
                                              if (((value30).cmd) = (LogPop)) {
                                                plog := [plog12 EXCEPT ![i] = SubSeq((plog12)[i], 1, (Len((plog12)[i])) - (1))];
                                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                  with (result49 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                    sm := [sm EXCEPT ![i] = (result49)[1]];
                                                    smDomain := [smDomain EXCEPT ![i] = (result49)[2]];
                                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                    either {
                                                      with (value41 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                        await ((network)[j]).enabled;
                                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value41), enabled |-> ((network)[j]).enabled]];
                                                        goto serverLoop;
                                                      };
                                                    } or {
                                                      with (yielded_fd12 = (fd)[j]) {
                                                        await yielded_fd12;
                                                        goto serverLoop;
                                                      };
                                                    };
                                                  };
                                                } else {
                                                  goto serverLoop;
                                                };
                                              } else {
                                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                  with (result50 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                    sm := [sm EXCEPT ![i] = (result50)[1]];
                                                    smDomain := [smDomain EXCEPT ![i] = (result50)[2]];
                                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                    either {
                                                      with (value42 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                        await ((network)[j]).enabled;
                                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value42), enabled |-> ((network)[j]).enabled]];
                                                        plog := plog12;
                                                        goto serverLoop;
                                                      };
                                                    } or {
                                                      with (yielded_fd13 = (fd)[j]) {
                                                        await yielded_fd13;
                                                        plog := plog12;
                                                        goto serverLoop;
                                                      };
                                                    };
                                                  };
                                                } else {
                                                  plog := plog12;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          };
                                        } else {
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log12)[i])) >= (index))) /\ (((((log12)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result51 = ApplyLog((log12)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result51)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result51)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value43 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value43), enabled |-> ((network)[j]).enabled]];
                                                  plog := plog12;
                                                  log := log12;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd14 = (fd)[j]) {
                                                  await yielded_fd14;
                                                  plog := plog12;
                                                  log := log12;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            plog := plog12;
                                            log := log12;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value20).cmd) = (LogPop)) {
                                        with (plog13 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]) {
                                          if ((((m).mentries) # (<<>>)) /\ ((Len((log12)[i])) = ((m).mprevLogIndex))) {
                                            log := [log12 EXCEPT ![i] = ((log12)[i]) \o ((m).mentries)];
                                            with (value31 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                              if (((value31).cmd) = (LogConcat)) {
                                                plog := [plog13 EXCEPT ![i] = ((plog13)[i]) \o ((value31).entries)];
                                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                  with (result52 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                    sm := [sm EXCEPT ![i] = (result52)[1]];
                                                    smDomain := [smDomain EXCEPT ![i] = (result52)[2]];
                                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                    either {
                                                      with (value44 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                        await ((network)[j]).enabled;
                                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value44), enabled |-> ((network)[j]).enabled]];
                                                        goto serverLoop;
                                                      };
                                                    } or {
                                                      with (yielded_fd15 = (fd)[j]) {
                                                        await yielded_fd15;
                                                        goto serverLoop;
                                                      };
                                                    };
                                                  };
                                                } else {
                                                  goto serverLoop;
                                                };
                                              } else {
                                                if (((value31).cmd) = (LogPop)) {
                                                  plog := [plog13 EXCEPT ![i] = SubSeq((plog13)[i], 1, (Len((plog13)[i])) - (1))];
                                                  if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                    with (result53 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                      sm := [sm EXCEPT ![i] = (result53)[1]];
                                                      smDomain := [smDomain EXCEPT ![i] = (result53)[2]];
                                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                      either {
                                                        with (value45 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                          await ((network)[j]).enabled;
                                                          await (Len(((network)[j]).queue)) < (BufferSize);
                                                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value45), enabled |-> ((network)[j]).enabled]];
                                                          goto serverLoop;
                                                        };
                                                      } or {
                                                        with (yielded_fd16 = (fd)[j]) {
                                                          await yielded_fd16;
                                                          goto serverLoop;
                                                        };
                                                      };
                                                    };
                                                  } else {
                                                    goto serverLoop;
                                                  };
                                                } else {
                                                  if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                    with (result54 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                      sm := [sm EXCEPT ![i] = (result54)[1]];
                                                      smDomain := [smDomain EXCEPT ![i] = (result54)[2]];
                                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                      either {
                                                        with (value46 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                          await ((network)[j]).enabled;
                                                          await (Len(((network)[j]).queue)) < (BufferSize);
                                                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value46), enabled |-> ((network)[j]).enabled]];
                                                          plog := plog13;
                                                          goto serverLoop;
                                                        };
                                                      } or {
                                                        with (yielded_fd17 = (fd)[j]) {
                                                          await yielded_fd17;
                                                          plog := plog13;
                                                          goto serverLoop;
                                                        };
                                                      };
                                                    };
                                                  } else {
                                                    plog := plog13;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            };
                                          } else {
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log12)[i])) >= (index))) /\ (((((log12)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result55 = ApplyLog((log12)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result55)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result55)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value47 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value47), enabled |-> ((network)[j]).enabled]];
                                                    plog := plog13;
                                                    log := log12;
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd18 = (fd)[j]) {
                                                    await yielded_fd18;
                                                    plog := plog13;
                                                    log := log12;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              plog := plog13;
                                              log := log12;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if ((((m).mentries) # (<<>>)) /\ ((Len((log12)[i])) = ((m).mprevLogIndex))) {
                                          log := [log12 EXCEPT ![i] = ((log12)[i]) \o ((m).mentries)];
                                          with (value32 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                            if (((value32).cmd) = (LogConcat)) {
                                              plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value32).entries)];
                                              if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                with (result56 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                  sm := [sm EXCEPT ![i] = (result56)[1]];
                                                  smDomain := [smDomain EXCEPT ![i] = (result56)[2]];
                                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                  either {
                                                    with (value48 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                      await ((network)[j]).enabled;
                                                      await (Len(((network)[j]).queue)) < (BufferSize);
                                                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value48), enabled |-> ((network)[j]).enabled]];
                                                      goto serverLoop;
                                                    };
                                                  } or {
                                                    with (yielded_fd19 = (fd)[j]) {
                                                      await yielded_fd19;
                                                      goto serverLoop;
                                                    };
                                                  };
                                                };
                                              } else {
                                                goto serverLoop;
                                              };
                                            } else {
                                              if (((value32).cmd) = (LogPop)) {
                                                plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                  with (result57 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                    sm := [sm EXCEPT ![i] = (result57)[1]];
                                                    smDomain := [smDomain EXCEPT ![i] = (result57)[2]];
                                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                    either {
                                                      with (value49 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                        await ((network)[j]).enabled;
                                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value49), enabled |-> ((network)[j]).enabled]];
                                                        goto serverLoop;
                                                      };
                                                    } or {
                                                      with (yielded_fd110 = (fd)[j]) {
                                                        await yielded_fd110;
                                                        goto serverLoop;
                                                      };
                                                    };
                                                  };
                                                } else {
                                                  goto serverLoop;
                                                };
                                              } else {
                                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                  with (result58 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                    sm := [sm EXCEPT ![i] = (result58)[1]];
                                                    smDomain := [smDomain EXCEPT ![i] = (result58)[2]];
                                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                    either {
                                                      with (value410 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                        await ((network)[j]).enabled;
                                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value410), enabled |-> ((network)[j]).enabled]];
                                                        goto serverLoop;
                                                      };
                                                    } or {
                                                      with (yielded_fd111 = (fd)[j]) {
                                                        await yielded_fd111;
                                                        goto serverLoop;
                                                      };
                                                    };
                                                  };
                                                } else {
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          };
                                        } else {
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log12)[i])) >= (index))) /\ (((((log12)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result59 = ApplyLog((log12)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result59)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result59)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value411 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value411), enabled |-> ((network)[j]).enabled]];
                                                  log := log12;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd112 = (fd)[j]) {
                                                  await yielded_fd112;
                                                  log := log12;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            log := log12;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  if ((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m).mprevLogIndex))) {
                                    log := [log EXCEPT ![i] = ((log)[i]) \o ((m).mentries)];
                                    with (value33 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                      if (((value33).cmd) = (LogConcat)) {
                                        plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value33).entries)];
                                        if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                          with (result60 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result60)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result60)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value412 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Len(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value412), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd113 = (fd)[j]) {
                                                await yielded_fd113;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          goto serverLoop;
                                        };
                                      } else {
                                        if (((value33).cmd) = (LogPop)) {
                                          plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result61 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result61)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result61)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value413 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value413), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd114 = (fd)[j]) {
                                                  await yielded_fd114;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            goto serverLoop;
                                          };
                                        } else {
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result62 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result62)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result62)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value414 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value414), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd115 = (fd)[j]) {
                                                  await yielded_fd115;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  } else {
                                    if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                      with (result63 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result63)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result63)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value415 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Len(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value415), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd116 = (fd)[j]) {
                                            await yielded_fd116;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      goto serverLoop;
                                    };
                                  };
                                };
                              };
                            };
                          } else {
                            if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state3)[i]) = (Follower))) /\ (~ (logOK)))) {
                              either {
                                with (value15 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                  await ((network)[j]).enabled;
                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value15), enabled |-> ((network)[j]).enabled]];
                                  state := state3;
                                  goto serverLoop;
                                };
                              } or {
                                with (yielded_fd01 = (fd)[j]) {
                                  await yielded_fd01;
                                  state := state3;
                                  goto serverLoop;
                                };
                              };
                            } else {
                              assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state3)[i]) = (Follower))) /\ (logOK);
                              with (index = ((m).mprevLogIndex) + (1)) {
                                if (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m).mentries)[1]).term))) {
                                  with (
                                    log13 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))], 
                                    value21 = [cmd |-> LogPop]
                                  ) {
                                    if (((value21).cmd) = (LogConcat)) {
                                      with (plog14 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value21).entries)]) {
                                        if ((((m).mentries) # (<<>>)) /\ ((Len((log13)[i])) = ((m).mprevLogIndex))) {
                                          log := [log13 EXCEPT ![i] = ((log13)[i]) \o ((m).mentries)];
                                          with (value34 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                            if (((value34).cmd) = (LogConcat)) {
                                              plog := [plog14 EXCEPT ![i] = ((plog14)[i]) \o ((value34).entries)];
                                              if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                with (result64 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                  sm := [sm EXCEPT ![i] = (result64)[1]];
                                                  smDomain := [smDomain EXCEPT ![i] = (result64)[2]];
                                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                  either {
                                                    with (value416 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                      await ((network)[j]).enabled;
                                                      await (Len(((network)[j]).queue)) < (BufferSize);
                                                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value416), enabled |-> ((network)[j]).enabled]];
                                                      state := state3;
                                                      goto serverLoop;
                                                    };
                                                  } or {
                                                    with (yielded_fd117 = (fd)[j]) {
                                                      await yielded_fd117;
                                                      state := state3;
                                                      goto serverLoop;
                                                    };
                                                  };
                                                };
                                              } else {
                                                state := state3;
                                                goto serverLoop;
                                              };
                                            } else {
                                              if (((value34).cmd) = (LogPop)) {
                                                plog := [plog14 EXCEPT ![i] = SubSeq((plog14)[i], 1, (Len((plog14)[i])) - (1))];
                                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                  with (result65 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                    sm := [sm EXCEPT ![i] = (result65)[1]];
                                                    smDomain := [smDomain EXCEPT ![i] = (result65)[2]];
                                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                    either {
                                                      with (value417 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                        await ((network)[j]).enabled;
                                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value417), enabled |-> ((network)[j]).enabled]];
                                                        state := state3;
                                                        goto serverLoop;
                                                      };
                                                    } or {
                                                      with (yielded_fd118 = (fd)[j]) {
                                                        await yielded_fd118;
                                                        state := state3;
                                                        goto serverLoop;
                                                      };
                                                    };
                                                  };
                                                } else {
                                                  state := state3;
                                                  goto serverLoop;
                                                };
                                              } else {
                                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                  with (result66 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                    sm := [sm EXCEPT ![i] = (result66)[1]];
                                                    smDomain := [smDomain EXCEPT ![i] = (result66)[2]];
                                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                    either {
                                                      with (value418 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                        await ((network)[j]).enabled;
                                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value418), enabled |-> ((network)[j]).enabled]];
                                                        plog := plog14;
                                                        state := state3;
                                                        goto serverLoop;
                                                      };
                                                    } or {
                                                      with (yielded_fd119 = (fd)[j]) {
                                                        await yielded_fd119;
                                                        plog := plog14;
                                                        state := state3;
                                                        goto serverLoop;
                                                      };
                                                    };
                                                  };
                                                } else {
                                                  plog := plog14;
                                                  state := state3;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          };
                                        } else {
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log13)[i])) >= (index))) /\ (((((log13)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result67 = ApplyLog((log13)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result67)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result67)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value419 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value419), enabled |-> ((network)[j]).enabled]];
                                                  plog := plog14;
                                                  log := log13;
                                                  state := state3;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd120 = (fd)[j]) {
                                                  await yielded_fd120;
                                                  plog := plog14;
                                                  log := log13;
                                                  state := state3;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            plog := plog14;
                                            log := log13;
                                            state := state3;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value21).cmd) = (LogPop)) {
                                        with (plog15 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]) {
                                          if ((((m).mentries) # (<<>>)) /\ ((Len((log13)[i])) = ((m).mprevLogIndex))) {
                                            log := [log13 EXCEPT ![i] = ((log13)[i]) \o ((m).mentries)];
                                            with (value35 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                              if (((value35).cmd) = (LogConcat)) {
                                                plog := [plog15 EXCEPT ![i] = ((plog15)[i]) \o ((value35).entries)];
                                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                  with (result68 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                    sm := [sm EXCEPT ![i] = (result68)[1]];
                                                    smDomain := [smDomain EXCEPT ![i] = (result68)[2]];
                                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                    either {
                                                      with (value420 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                        await ((network)[j]).enabled;
                                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value420), enabled |-> ((network)[j]).enabled]];
                                                        state := state3;
                                                        goto serverLoop;
                                                      };
                                                    } or {
                                                      with (yielded_fd121 = (fd)[j]) {
                                                        await yielded_fd121;
                                                        state := state3;
                                                        goto serverLoop;
                                                      };
                                                    };
                                                  };
                                                } else {
                                                  state := state3;
                                                  goto serverLoop;
                                                };
                                              } else {
                                                if (((value35).cmd) = (LogPop)) {
                                                  plog := [plog15 EXCEPT ![i] = SubSeq((plog15)[i], 1, (Len((plog15)[i])) - (1))];
                                                  if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                    with (result69 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                      sm := [sm EXCEPT ![i] = (result69)[1]];
                                                      smDomain := [smDomain EXCEPT ![i] = (result69)[2]];
                                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                      either {
                                                        with (value421 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                          await ((network)[j]).enabled;
                                                          await (Len(((network)[j]).queue)) < (BufferSize);
                                                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value421), enabled |-> ((network)[j]).enabled]];
                                                          state := state3;
                                                          goto serverLoop;
                                                        };
                                                      } or {
                                                        with (yielded_fd122 = (fd)[j]) {
                                                          await yielded_fd122;
                                                          state := state3;
                                                          goto serverLoop;
                                                        };
                                                      };
                                                    };
                                                  } else {
                                                    state := state3;
                                                    goto serverLoop;
                                                  };
                                                } else {
                                                  if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                    with (result70 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                      sm := [sm EXCEPT ![i] = (result70)[1]];
                                                      smDomain := [smDomain EXCEPT ![i] = (result70)[2]];
                                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                      either {
                                                        with (value422 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                          await ((network)[j]).enabled;
                                                          await (Len(((network)[j]).queue)) < (BufferSize);
                                                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value422), enabled |-> ((network)[j]).enabled]];
                                                          plog := plog15;
                                                          state := state3;
                                                          goto serverLoop;
                                                        };
                                                      } or {
                                                        with (yielded_fd123 = (fd)[j]) {
                                                          await yielded_fd123;
                                                          plog := plog15;
                                                          state := state3;
                                                          goto serverLoop;
                                                        };
                                                      };
                                                    };
                                                  } else {
                                                    plog := plog15;
                                                    state := state3;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            };
                                          } else {
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log13)[i])) >= (index))) /\ (((((log13)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result71 = ApplyLog((log13)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result71)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result71)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value423 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value423), enabled |-> ((network)[j]).enabled]];
                                                    plog := plog15;
                                                    log := log13;
                                                    state := state3;
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd124 = (fd)[j]) {
                                                    await yielded_fd124;
                                                    plog := plog15;
                                                    log := log13;
                                                    state := state3;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              plog := plog15;
                                              log := log13;
                                              state := state3;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if ((((m).mentries) # (<<>>)) /\ ((Len((log13)[i])) = ((m).mprevLogIndex))) {
                                          log := [log13 EXCEPT ![i] = ((log13)[i]) \o ((m).mentries)];
                                          with (value36 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                            if (((value36).cmd) = (LogConcat)) {
                                              plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value36).entries)];
                                              if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                with (result72 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                  sm := [sm EXCEPT ![i] = (result72)[1]];
                                                  smDomain := [smDomain EXCEPT ![i] = (result72)[2]];
                                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                  either {
                                                    with (value424 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                      await ((network)[j]).enabled;
                                                      await (Len(((network)[j]).queue)) < (BufferSize);
                                                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value424), enabled |-> ((network)[j]).enabled]];
                                                      state := state3;
                                                      goto serverLoop;
                                                    };
                                                  } or {
                                                    with (yielded_fd125 = (fd)[j]) {
                                                      await yielded_fd125;
                                                      state := state3;
                                                      goto serverLoop;
                                                    };
                                                  };
                                                };
                                              } else {
                                                state := state3;
                                                goto serverLoop;
                                              };
                                            } else {
                                              if (((value36).cmd) = (LogPop)) {
                                                plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                  with (result73 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                    sm := [sm EXCEPT ![i] = (result73)[1]];
                                                    smDomain := [smDomain EXCEPT ![i] = (result73)[2]];
                                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                    either {
                                                      with (value425 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                        await ((network)[j]).enabled;
                                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value425), enabled |-> ((network)[j]).enabled]];
                                                        state := state3;
                                                        goto serverLoop;
                                                      };
                                                    } or {
                                                      with (yielded_fd126 = (fd)[j]) {
                                                        await yielded_fd126;
                                                        state := state3;
                                                        goto serverLoop;
                                                      };
                                                    };
                                                  };
                                                } else {
                                                  state := state3;
                                                  goto serverLoop;
                                                };
                                              } else {
                                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                  with (result74 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                    sm := [sm EXCEPT ![i] = (result74)[1]];
                                                    smDomain := [smDomain EXCEPT ![i] = (result74)[2]];
                                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                    either {
                                                      with (value426 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                        await ((network)[j]).enabled;
                                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value426), enabled |-> ((network)[j]).enabled]];
                                                        state := state3;
                                                        goto serverLoop;
                                                      };
                                                    } or {
                                                      with (yielded_fd127 = (fd)[j]) {
                                                        await yielded_fd127;
                                                        state := state3;
                                                        goto serverLoop;
                                                      };
                                                    };
                                                  };
                                                } else {
                                                  state := state3;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          };
                                        } else {
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log13)[i])) >= (index))) /\ (((((log13)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result75 = ApplyLog((log13)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result75)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result75)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value427 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value427), enabled |-> ((network)[j]).enabled]];
                                                  log := log13;
                                                  state := state3;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd128 = (fd)[j]) {
                                                  await yielded_fd128;
                                                  log := log13;
                                                  state := state3;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            log := log13;
                                            state := state3;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  if ((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m).mprevLogIndex))) {
                                    log := [log EXCEPT ![i] = ((log)[i]) \o ((m).mentries)];
                                    with (value37 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                      if (((value37).cmd) = (LogConcat)) {
                                        plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value37).entries)];
                                        if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                          with (result76 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result76)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result76)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value428 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Len(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value428), enabled |-> ((network)[j]).enabled]];
                                                state := state3;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd129 = (fd)[j]) {
                                                await yielded_fd129;
                                                state := state3;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          state := state3;
                                          goto serverLoop;
                                        };
                                      } else {
                                        if (((value37).cmd) = (LogPop)) {
                                          plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result77 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result77)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result77)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value429 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value429), enabled |-> ((network)[j]).enabled]];
                                                  state := state3;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd130 = (fd)[j]) {
                                                  await yielded_fd130;
                                                  state := state3;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            state := state3;
                                            goto serverLoop;
                                          };
                                        } else {
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result78 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result78)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result78)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value430 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value430), enabled |-> ((network)[j]).enabled]];
                                                  state := state3;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd131 = (fd)[j]) {
                                                  await yielded_fd131;
                                                  state := state3;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            state := state3;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  } else {
                                    if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                      with (result79 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result79)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result79)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value431 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Len(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value431), enabled |-> ((network)[j]).enabled]];
                                            state := state3;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd132 = (fd)[j]) {
                                            await yielded_fd132;
                                            state := state3;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      state := state3;
                                      goto serverLoop;
                                    };
                                  };
                                };
                              };
                            };
                          };
                        };
                      };
                    };
                  } else {
                    leader := [leader EXCEPT ![self] = (m).msource];
                    with (
                      i = self, 
                      j = (m).msource, 
                      logOK = (((m).mprevLogIndex) = (0)) \/ (((((m).mprevLogIndex) > (0)) /\ (((m).mprevLogIndex) <= (Len((log)[i])))) /\ (((m).mprevLogTerm) = ((((log)[i])[(m).mprevLogIndex]).term)))
                    ) {
                      assert ((m).mterm) <= ((currentTerm)[i]);
                      if ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Candidate))) {
                        state := [state EXCEPT ![i] = Follower];
                        if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                          either {
                            with (value16 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                              await ((network)[j]).enabled;
                              await (Len(((network)[j]).queue)) < (BufferSize);
                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value16), enabled |-> ((network)[j]).enabled]];
                              goto serverLoop;
                            };
                          } or {
                            with (yielded_fd02 = (fd)[j]) {
                              await yielded_fd02;
                              goto serverLoop;
                            };
                          };
                        } else {
                          assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                          with (index = ((m).mprevLogIndex) + (1)) {
                            if (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m).mentries)[1]).term))) {
                              with (
                                log14 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))], 
                                value22 = [cmd |-> LogPop]
                              ) {
                                if (((value22).cmd) = (LogConcat)) {
                                  with (plog16 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value22).entries)]) {
                                    if ((((m).mentries) # (<<>>)) /\ ((Len((log14)[i])) = ((m).mprevLogIndex))) {
                                      log := [log14 EXCEPT ![i] = ((log14)[i]) \o ((m).mentries)];
                                      with (value38 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                        if (((value38).cmd) = (LogConcat)) {
                                          plog := [plog16 EXCEPT ![i] = ((plog16)[i]) \o ((value38).entries)];
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result80 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result80)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result80)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value432 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value432), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd133 = (fd)[j]) {
                                                  await yielded_fd133;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            goto serverLoop;
                                          };
                                        } else {
                                          if (((value38).cmd) = (LogPop)) {
                                            plog := [plog16 EXCEPT ![i] = SubSeq((plog16)[i], 1, (Len((plog16)[i])) - (1))];
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result81 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result81)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result81)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value433 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value433), enabled |-> ((network)[j]).enabled]];
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd134 = (fd)[j]) {
                                                    await yielded_fd134;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              goto serverLoop;
                                            };
                                          } else {
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result82 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result82)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result82)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value434 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value434), enabled |-> ((network)[j]).enabled]];
                                                    plog := plog16;
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd135 = (fd)[j]) {
                                                    await yielded_fd135;
                                                    plog := plog16;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              plog := plog16;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    } else {
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log14)[i])) >= (index))) /\ (((((log14)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result83 = ApplyLog((log14)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result83)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result83)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value435 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value435), enabled |-> ((network)[j]).enabled]];
                                              plog := plog16;
                                              log := log14;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd136 = (fd)[j]) {
                                              await yielded_fd136;
                                              plog := plog16;
                                              log := log14;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        plog := plog16;
                                        log := log14;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  if (((value22).cmd) = (LogPop)) {
                                    with (plog17 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]) {
                                      if ((((m).mentries) # (<<>>)) /\ ((Len((log14)[i])) = ((m).mprevLogIndex))) {
                                        log := [log14 EXCEPT ![i] = ((log14)[i]) \o ((m).mentries)];
                                        with (value39 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                          if (((value39).cmd) = (LogConcat)) {
                                            plog := [plog17 EXCEPT ![i] = ((plog17)[i]) \o ((value39).entries)];
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result84 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result84)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result84)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value436 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value436), enabled |-> ((network)[j]).enabled]];
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd137 = (fd)[j]) {
                                                    await yielded_fd137;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              goto serverLoop;
                                            };
                                          } else {
                                            if (((value39).cmd) = (LogPop)) {
                                              plog := [plog17 EXCEPT ![i] = SubSeq((plog17)[i], 1, (Len((plog17)[i])) - (1))];
                                              if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                with (result85 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                  sm := [sm EXCEPT ![i] = (result85)[1]];
                                                  smDomain := [smDomain EXCEPT ![i] = (result85)[2]];
                                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                  either {
                                                    with (value437 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                      await ((network)[j]).enabled;
                                                      await (Len(((network)[j]).queue)) < (BufferSize);
                                                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value437), enabled |-> ((network)[j]).enabled]];
                                                      goto serverLoop;
                                                    };
                                                  } or {
                                                    with (yielded_fd138 = (fd)[j]) {
                                                      await yielded_fd138;
                                                      goto serverLoop;
                                                    };
                                                  };
                                                };
                                              } else {
                                                goto serverLoop;
                                              };
                                            } else {
                                              if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                with (result86 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                  sm := [sm EXCEPT ![i] = (result86)[1]];
                                                  smDomain := [smDomain EXCEPT ![i] = (result86)[2]];
                                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                  either {
                                                    with (value438 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                      await ((network)[j]).enabled;
                                                      await (Len(((network)[j]).queue)) < (BufferSize);
                                                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value438), enabled |-> ((network)[j]).enabled]];
                                                      plog := plog17;
                                                      goto serverLoop;
                                                    };
                                                  } or {
                                                    with (yielded_fd139 = (fd)[j]) {
                                                      await yielded_fd139;
                                                      plog := plog17;
                                                      goto serverLoop;
                                                    };
                                                  };
                                                };
                                              } else {
                                                plog := plog17;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      } else {
                                        if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log14)[i])) >= (index))) /\ (((((log14)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                          with (result87 = ApplyLog((log14)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result87)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result87)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value439 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Len(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value439), enabled |-> ((network)[j]).enabled]];
                                                plog := plog17;
                                                log := log14;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd140 = (fd)[j]) {
                                                await yielded_fd140;
                                                plog := plog17;
                                                log := log14;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          plog := plog17;
                                          log := log14;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    if ((((m).mentries) # (<<>>)) /\ ((Len((log14)[i])) = ((m).mprevLogIndex))) {
                                      log := [log14 EXCEPT ![i] = ((log14)[i]) \o ((m).mentries)];
                                      with (value310 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                        if (((value310).cmd) = (LogConcat)) {
                                          plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value310).entries)];
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result88 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result88)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result88)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value440 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value440), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd141 = (fd)[j]) {
                                                  await yielded_fd141;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            goto serverLoop;
                                          };
                                        } else {
                                          if (((value310).cmd) = (LogPop)) {
                                            plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result89 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result89)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result89)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value441 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value441), enabled |-> ((network)[j]).enabled]];
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd142 = (fd)[j]) {
                                                    await yielded_fd142;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              goto serverLoop;
                                            };
                                          } else {
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result90 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result90)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result90)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value442 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value442), enabled |-> ((network)[j]).enabled]];
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd143 = (fd)[j]) {
                                                    await yielded_fd143;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    } else {
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log14)[i])) >= (index))) /\ (((((log14)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result91 = ApplyLog((log14)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result91)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result91)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value443 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value443), enabled |-> ((network)[j]).enabled]];
                                              log := log14;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd144 = (fd)[j]) {
                                              await yielded_fd144;
                                              log := log14;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := log14;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                };
                              };
                            } else {
                              if ((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m).mprevLogIndex))) {
                                log := [log EXCEPT ![i] = ((log)[i]) \o ((m).mentries)];
                                with (value311 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                  if (((value311).cmd) = (LogConcat)) {
                                    plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value311).entries)];
                                    if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                      with (result92 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result92)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result92)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value444 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Len(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value444), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd145 = (fd)[j]) {
                                            await yielded_fd145;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      goto serverLoop;
                                    };
                                  } else {
                                    if (((value311).cmd) = (LogPop)) {
                                      plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result93 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result93)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result93)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value445 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value445), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd146 = (fd)[j]) {
                                              await yielded_fd146;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        goto serverLoop;
                                      };
                                    } else {
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result94 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result94)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result94)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value446 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value446), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd147 = (fd)[j]) {
                                              await yielded_fd147;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                };
                              } else {
                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                  with (result95 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                    sm := [sm EXCEPT ![i] = (result95)[1]];
                                    smDomain := [smDomain EXCEPT ![i] = (result95)[2]];
                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                    either {
                                      with (value447 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                        await ((network)[j]).enabled;
                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value447), enabled |-> ((network)[j]).enabled]];
                                        goto serverLoop;
                                      };
                                    } or {
                                      with (yielded_fd148 = (fd)[j]) {
                                        await yielded_fd148;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  goto serverLoop;
                                };
                              };
                            };
                          };
                        };
                      } else {
                        if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                          either {
                            with (value17 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                              await ((network)[j]).enabled;
                              await (Len(((network)[j]).queue)) < (BufferSize);
                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value17), enabled |-> ((network)[j]).enabled]];
                              goto serverLoop;
                            };
                          } or {
                            with (yielded_fd03 = (fd)[j]) {
                              await yielded_fd03;
                              goto serverLoop;
                            };
                          };
                        } else {
                          assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                          with (index = ((m).mprevLogIndex) + (1)) {
                            if (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m).mentries)[1]).term))) {
                              with (
                                log15 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))], 
                                value23 = [cmd |-> LogPop]
                              ) {
                                if (((value23).cmd) = (LogConcat)) {
                                  with (plog18 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value23).entries)]) {
                                    if ((((m).mentries) # (<<>>)) /\ ((Len((log15)[i])) = ((m).mprevLogIndex))) {
                                      log := [log15 EXCEPT ![i] = ((log15)[i]) \o ((m).mentries)];
                                      with (value312 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                        if (((value312).cmd) = (LogConcat)) {
                                          plog := [plog18 EXCEPT ![i] = ((plog18)[i]) \o ((value312).entries)];
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result96 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result96)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result96)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value448 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value448), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd149 = (fd)[j]) {
                                                  await yielded_fd149;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            goto serverLoop;
                                          };
                                        } else {
                                          if (((value312).cmd) = (LogPop)) {
                                            plog := [plog18 EXCEPT ![i] = SubSeq((plog18)[i], 1, (Len((plog18)[i])) - (1))];
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result97 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result97)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result97)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value449 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value449), enabled |-> ((network)[j]).enabled]];
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd150 = (fd)[j]) {
                                                    await yielded_fd150;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              goto serverLoop;
                                            };
                                          } else {
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result98 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result98)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result98)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value450 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value450), enabled |-> ((network)[j]).enabled]];
                                                    plog := plog18;
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd151 = (fd)[j]) {
                                                    await yielded_fd151;
                                                    plog := plog18;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              plog := plog18;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    } else {
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log15)[i])) >= (index))) /\ (((((log15)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result99 = ApplyLog((log15)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result99)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result99)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value451 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value451), enabled |-> ((network)[j]).enabled]];
                                              plog := plog18;
                                              log := log15;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd152 = (fd)[j]) {
                                              await yielded_fd152;
                                              plog := plog18;
                                              log := log15;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        plog := plog18;
                                        log := log15;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  if (((value23).cmd) = (LogPop)) {
                                    with (plog19 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]) {
                                      if ((((m).mentries) # (<<>>)) /\ ((Len((log15)[i])) = ((m).mprevLogIndex))) {
                                        log := [log15 EXCEPT ![i] = ((log15)[i]) \o ((m).mentries)];
                                        with (value313 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                          if (((value313).cmd) = (LogConcat)) {
                                            plog := [plog19 EXCEPT ![i] = ((plog19)[i]) \o ((value313).entries)];
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result100 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result100)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result100)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value452 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value452), enabled |-> ((network)[j]).enabled]];
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd153 = (fd)[j]) {
                                                    await yielded_fd153;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              goto serverLoop;
                                            };
                                          } else {
                                            if (((value313).cmd) = (LogPop)) {
                                              plog := [plog19 EXCEPT ![i] = SubSeq((plog19)[i], 1, (Len((plog19)[i])) - (1))];
                                              if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                with (result101 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                  sm := [sm EXCEPT ![i] = (result101)[1]];
                                                  smDomain := [smDomain EXCEPT ![i] = (result101)[2]];
                                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                  either {
                                                    with (value453 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                      await ((network)[j]).enabled;
                                                      await (Len(((network)[j]).queue)) < (BufferSize);
                                                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value453), enabled |-> ((network)[j]).enabled]];
                                                      goto serverLoop;
                                                    };
                                                  } or {
                                                    with (yielded_fd154 = (fd)[j]) {
                                                      await yielded_fd154;
                                                      goto serverLoop;
                                                    };
                                                  };
                                                };
                                              } else {
                                                goto serverLoop;
                                              };
                                            } else {
                                              if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                with (result102 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                  sm := [sm EXCEPT ![i] = (result102)[1]];
                                                  smDomain := [smDomain EXCEPT ![i] = (result102)[2]];
                                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                  either {
                                                    with (value454 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                      await ((network)[j]).enabled;
                                                      await (Len(((network)[j]).queue)) < (BufferSize);
                                                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value454), enabled |-> ((network)[j]).enabled]];
                                                      plog := plog19;
                                                      goto serverLoop;
                                                    };
                                                  } or {
                                                    with (yielded_fd155 = (fd)[j]) {
                                                      await yielded_fd155;
                                                      plog := plog19;
                                                      goto serverLoop;
                                                    };
                                                  };
                                                };
                                              } else {
                                                plog := plog19;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      } else {
                                        if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log15)[i])) >= (index))) /\ (((((log15)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                          with (result103 = ApplyLog((log15)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result103)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result103)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value455 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Len(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value455), enabled |-> ((network)[j]).enabled]];
                                                plog := plog19;
                                                log := log15;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd156 = (fd)[j]) {
                                                await yielded_fd156;
                                                plog := plog19;
                                                log := log15;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          plog := plog19;
                                          log := log15;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    if ((((m).mentries) # (<<>>)) /\ ((Len((log15)[i])) = ((m).mprevLogIndex))) {
                                      log := [log15 EXCEPT ![i] = ((log15)[i]) \o ((m).mentries)];
                                      with (value314 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                        if (((value314).cmd) = (LogConcat)) {
                                          plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value314).entries)];
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result104 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result104)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result104)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value456 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value456), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd157 = (fd)[j]) {
                                                  await yielded_fd157;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            goto serverLoop;
                                          };
                                        } else {
                                          if (((value314).cmd) = (LogPop)) {
                                            plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result105 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result105)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result105)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value457 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value457), enabled |-> ((network)[j]).enabled]];
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd158 = (fd)[j]) {
                                                    await yielded_fd158;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              goto serverLoop;
                                            };
                                          } else {
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result106 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result106)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result106)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value458 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value458), enabled |-> ((network)[j]).enabled]];
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd159 = (fd)[j]) {
                                                    await yielded_fd159;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    } else {
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log15)[i])) >= (index))) /\ (((((log15)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result107 = ApplyLog((log15)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result107)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result107)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value459 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value459), enabled |-> ((network)[j]).enabled]];
                                              log := log15;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd160 = (fd)[j]) {
                                              await yielded_fd160;
                                              log := log15;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := log15;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                };
                              };
                            } else {
                              if ((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m).mprevLogIndex))) {
                                log := [log EXCEPT ![i] = ((log)[i]) \o ((m).mentries)];
                                with (value315 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                  if (((value315).cmd) = (LogConcat)) {
                                    plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value315).entries)];
                                    if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                      with (result108 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result108)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result108)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value460 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Len(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value460), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd161 = (fd)[j]) {
                                            await yielded_fd161;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      goto serverLoop;
                                    };
                                  } else {
                                    if (((value315).cmd) = (LogPop)) {
                                      plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result109 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result109)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result109)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value461 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value461), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd162 = (fd)[j]) {
                                              await yielded_fd162;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        goto serverLoop;
                                      };
                                    } else {
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result110 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result110)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result110)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value462 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value462), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd163 = (fd)[j]) {
                                              await yielded_fd163;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                };
                              } else {
                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                  with (result111 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                    sm := [sm EXCEPT ![i] = (result111)[1]];
                                    smDomain := [smDomain EXCEPT ![i] = (result111)[2]];
                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                    either {
                                      with (value463 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                        await ((network)[j]).enabled;
                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value463), enabled |-> ((network)[j]).enabled]];
                                        goto serverLoop;
                                      };
                                    } or {
                                      with (yielded_fd164 = (fd)[j]) {
                                        await yielded_fd164;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  goto serverLoop;
                                };
                              };
                            };
                          };
                        };
                      };
                    };
                  };
                } else {
                  if (((m).mtype) = (AppendEntriesResponse)) {
                    if (((m).mterm) > ((currentTerm)[self])) {
                      currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
                      state := [state EXCEPT ![self] = Follower];
                      votedFor := [votedFor EXCEPT ![self] = Nil];
                      leader := [leader EXCEPT ![self] = Nil];
                      if (((m).mterm) < ((currentTerm)[self])) {
                        skip;
                        goto serverLoop;
                      } else {
                        with (
                          i = self, 
                          j = (m).msource
                        ) {
                          assert ((m).mterm) = ((currentTerm)[i]);
                          if ((m).msuccess) {
                            nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m).mmatchIndex) + (1)]];
                            matchIndex := [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m).mmatchIndex]];
                            goto serverLoop;
                          } else {
                            nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]];
                            goto serverLoop;
                          };
                        };
                      };
                    } else {
                      if (((m).mterm) < ((currentTerm)[self])) {
                        skip;
                        goto serverLoop;
                      } else {
                        with (
                          i = self, 
                          j = (m).msource
                        ) {
                          assert ((m).mterm) = ((currentTerm)[i]);
                          if ((m).msuccess) {
                            nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m).mmatchIndex) + (1)]];
                            matchIndex := [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m).mmatchIndex]];
                            goto serverLoop;
                          } else {
                            nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]];
                            goto serverLoop;
                          };
                        };
                      };
                    };
                  } else {
                    if ((((m).mtype) = (ClientPutRequest)) \/ (((m).mtype) = (ClientGetRequest))) {
                      if (((state)[self]) = (Leader)) {
                        with (entry = [term |-> (currentTerm)[self], cmd |-> (m).mcmd, client |-> (m).msource]) {
                          log := [log EXCEPT ![self] = Append((log)[self], entry)];
                          with (value50 = [cmd |-> LogConcat, entries |-> <<entry>>]) {
                            if (((value50).cmd) = (LogConcat)) {
                              plog := [plog EXCEPT ![self] = ((plog)[self]) \o ((value50).entries)];
                              goto serverLoop;
                            } else {
                              if (((value50).cmd) = (LogPop)) {
                                plog := [plog EXCEPT ![self] = SubSeq((plog)[self], 1, (Len((plog)[self])) - (1))];
                                goto serverLoop;
                              } else {
                                goto serverLoop;
                              };
                            };
                          };
                        };
                      } else {
                        with (
                          i = self, 
                          j = (m).msource, 
                          respType = IF (((m).mcmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse, 
                          value60 = [mtype |-> respType, msuccess |-> FALSE, mresponse |-> [idx |-> ((m).mcmd).idx, key |-> ((m).mcmd).key], mleaderHint |-> (leader)[i], msource |-> i, mdest |-> j]
                        ) {
                          await ((network)[j]).enabled;
                          await (Len(((network)[j]).queue)) < (BufferSize);
                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value60), enabled |-> ((network)[j]).enabled]];
                          goto serverLoop;
                        };
                      };
                    } else {
                      goto serverLoop;
                    };
                  };
                };
              };
            };
          } else {
            if (((m).mtype) = (RequestVoteRequest)) {
              if (((m).mterm) > ((currentTerm)[self])) {
                currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
                state := [state EXCEPT ![self] = Follower];
                with (votedFor4 = [votedFor EXCEPT ![self] = Nil]) {
                  leader := [leader EXCEPT ![self] = Nil];
                  with (
                    i = self, 
                    j = (m).msource, 
                    logOK = (((m).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m).mlastLogIndex) >= (Len((log)[i])))), 
                    grant = ((((m).mterm) = ((currentTerm)[i])) /\ (logOK)) /\ (((votedFor4)[self]) \in ({Nil, j}))
                  ) {
                    assert ((m).mterm) <= ((currentTerm)[i]);
                    if (grant) {
                      votedFor := [votedFor4 EXCEPT ![i] = j];
                      either {
                        with (value04 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                          await ((network)[j]).enabled;
                          await (Len(((network)[j]).queue)) < (BufferSize);
                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value04), enabled |-> ((network)[j]).enabled]];
                          if (Debug) {
                            print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                            goto serverLoop;
                          } else {
                            goto serverLoop;
                          };
                        };
                      } or {
                        with (yielded_fd20 = (fd)[j]) {
                          await yielded_fd20;
                          if (Debug) {
                            print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                            goto serverLoop;
                          } else {
                            goto serverLoop;
                          };
                        };
                      };
                    } else {
                      either {
                        with (value05 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                          await ((network)[j]).enabled;
                          await (Len(((network)[j]).queue)) < (BufferSize);
                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value05), enabled |-> ((network)[j]).enabled]];
                          if (Debug) {
                            print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                            votedFor := votedFor4;
                            goto serverLoop;
                          } else {
                            votedFor := votedFor4;
                            goto serverLoop;
                          };
                        };
                      } or {
                        with (yielded_fd21 = (fd)[j]) {
                          await yielded_fd21;
                          if (Debug) {
                            print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                            votedFor := votedFor4;
                            goto serverLoop;
                          } else {
                            votedFor := votedFor4;
                            goto serverLoop;
                          };
                        };
                      };
                    };
                  };
                };
              } else {
                with (
                  i = self, 
                  j = (m).msource, 
                  logOK = (((m).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m).mlastLogIndex) >= (Len((log)[i])))), 
                  grant = ((((m).mterm) = ((currentTerm)[i])) /\ (logOK)) /\ (((votedFor)[self]) \in ({Nil, j}))
                ) {
                  assert ((m).mterm) <= ((currentTerm)[i]);
                  if (grant) {
                    votedFor := [votedFor EXCEPT ![i] = j];
                    either {
                      with (value06 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                        await ((network)[j]).enabled;
                        await (Len(((network)[j]).queue)) < (BufferSize);
                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value06), enabled |-> ((network)[j]).enabled]];
                        if (Debug) {
                          print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                          goto serverLoop;
                        } else {
                          goto serverLoop;
                        };
                      };
                    } or {
                      with (yielded_fd22 = (fd)[j]) {
                        await yielded_fd22;
                        if (Debug) {
                          print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                          goto serverLoop;
                        } else {
                          goto serverLoop;
                        };
                      };
                    };
                  } else {
                    either {
                      with (value07 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                        await ((network)[j]).enabled;
                        await (Len(((network)[j]).queue)) < (BufferSize);
                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value07), enabled |-> ((network)[j]).enabled]];
                        if (Debug) {
                          print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                          goto serverLoop;
                        } else {
                          goto serverLoop;
                        };
                      };
                    } or {
                      with (yielded_fd23 = (fd)[j]) {
                        await yielded_fd23;
                        if (Debug) {
                          print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                          goto serverLoop;
                        } else {
                          goto serverLoop;
                        };
                      };
                    };
                  };
                };
              };
            } else {
              if (((m).mtype) = (RequestVoteResponse)) {
                if (((m).mterm) > ((currentTerm)[self])) {
                  currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
                  state := [state EXCEPT ![self] = Follower];
                  votedFor := [votedFor EXCEPT ![self] = Nil];
                  leader := [leader EXCEPT ![self] = Nil];
                  if (((m).mterm) < ((currentTerm)[self])) {
                    skip;
                    goto serverLoop;
                  } else {
                    with (
                      i = self, 
                      j = (m).msource
                    ) {
                      assert ((m).mterm) = ((currentTerm)[i]);
                      votesResponded := [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})];
                      if ((m).mvoteGranted) {
                        votesGranted := [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})];
                        goto serverLoop;
                      } else {
                        goto serverLoop;
                      };
                    };
                  };
                } else {
                  if (((m).mterm) < ((currentTerm)[self])) {
                    skip;
                    goto serverLoop;
                  } else {
                    with (
                      i = self, 
                      j = (m).msource
                    ) {
                      assert ((m).mterm) = ((currentTerm)[i]);
                      votesResponded := [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})];
                      if ((m).mvoteGranted) {
                        votesGranted := [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})];
                        goto serverLoop;
                      } else {
                        goto serverLoop;
                      };
                    };
                  };
                };
              } else {
                if (((m).mtype) = (AppendEntriesRequest)) {
                  if (((m).mterm) > ((currentTerm)[self])) {
                    currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
                    with (state4 = [state EXCEPT ![self] = Follower]) {
                      votedFor := [votedFor EXCEPT ![self] = Nil];
                      with (leader4 = [leader EXCEPT ![self] = Nil]) {
                        leader := [leader4 EXCEPT ![self] = (m).msource];
                        with (
                          i = self, 
                          j = (m).msource, 
                          logOK = (((m).mprevLogIndex) = (0)) \/ (((((m).mprevLogIndex) > (0)) /\ (((m).mprevLogIndex) <= (Len((log)[i])))) /\ (((m).mprevLogTerm) = ((((log)[i])[(m).mprevLogIndex]).term)))
                        ) {
                          assert ((m).mterm) <= ((currentTerm)[i]);
                          if ((((m).mterm) = ((currentTerm)[i])) /\ (((state4)[i]) = (Candidate))) {
                            state := [state4 EXCEPT ![i] = Follower];
                            if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                              either {
                                with (value18 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                  await ((network)[j]).enabled;
                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value18), enabled |-> ((network)[j]).enabled]];
                                  goto serverLoop;
                                };
                              } or {
                                with (yielded_fd04 = (fd)[j]) {
                                  await yielded_fd04;
                                  goto serverLoop;
                                };
                              };
                            } else {
                              assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                              with (index = ((m).mprevLogIndex) + (1)) {
                                if (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m).mentries)[1]).term))) {
                                  with (
                                    log16 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))], 
                                    value24 = [cmd |-> LogPop]
                                  ) {
                                    if (((value24).cmd) = (LogConcat)) {
                                      with (plog20 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value24).entries)]) {
                                        if ((((m).mentries) # (<<>>)) /\ ((Len((log16)[i])) = ((m).mprevLogIndex))) {
                                          log := [log16 EXCEPT ![i] = ((log16)[i]) \o ((m).mentries)];
                                          with (value316 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                            if (((value316).cmd) = (LogConcat)) {
                                              plog := [plog20 EXCEPT ![i] = ((plog20)[i]) \o ((value316).entries)];
                                              if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                with (result112 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                  sm := [sm EXCEPT ![i] = (result112)[1]];
                                                  smDomain := [smDomain EXCEPT ![i] = (result112)[2]];
                                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                  either {
                                                    with (value464 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                      await ((network)[j]).enabled;
                                                      await (Len(((network)[j]).queue)) < (BufferSize);
                                                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value464), enabled |-> ((network)[j]).enabled]];
                                                      goto serverLoop;
                                                    };
                                                  } or {
                                                    with (yielded_fd165 = (fd)[j]) {
                                                      await yielded_fd165;
                                                      goto serverLoop;
                                                    };
                                                  };
                                                };
                                              } else {
                                                goto serverLoop;
                                              };
                                            } else {
                                              if (((value316).cmd) = (LogPop)) {
                                                plog := [plog20 EXCEPT ![i] = SubSeq((plog20)[i], 1, (Len((plog20)[i])) - (1))];
                                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                  with (result113 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                    sm := [sm EXCEPT ![i] = (result113)[1]];
                                                    smDomain := [smDomain EXCEPT ![i] = (result113)[2]];
                                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                    either {
                                                      with (value465 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                        await ((network)[j]).enabled;
                                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value465), enabled |-> ((network)[j]).enabled]];
                                                        goto serverLoop;
                                                      };
                                                    } or {
                                                      with (yielded_fd166 = (fd)[j]) {
                                                        await yielded_fd166;
                                                        goto serverLoop;
                                                      };
                                                    };
                                                  };
                                                } else {
                                                  goto serverLoop;
                                                };
                                              } else {
                                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                  with (result114 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                    sm := [sm EXCEPT ![i] = (result114)[1]];
                                                    smDomain := [smDomain EXCEPT ![i] = (result114)[2]];
                                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                    either {
                                                      with (value466 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                        await ((network)[j]).enabled;
                                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value466), enabled |-> ((network)[j]).enabled]];
                                                        plog := plog20;
                                                        goto serverLoop;
                                                      };
                                                    } or {
                                                      with (yielded_fd167 = (fd)[j]) {
                                                        await yielded_fd167;
                                                        plog := plog20;
                                                        goto serverLoop;
                                                      };
                                                    };
                                                  };
                                                } else {
                                                  plog := plog20;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          };
                                        } else {
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log16)[i])) >= (index))) /\ (((((log16)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result115 = ApplyLog((log16)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result115)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result115)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value467 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value467), enabled |-> ((network)[j]).enabled]];
                                                  plog := plog20;
                                                  log := log16;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd168 = (fd)[j]) {
                                                  await yielded_fd168;
                                                  plog := plog20;
                                                  log := log16;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            plog := plog20;
                                            log := log16;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value24).cmd) = (LogPop)) {
                                        with (plog21 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]) {
                                          if ((((m).mentries) # (<<>>)) /\ ((Len((log16)[i])) = ((m).mprevLogIndex))) {
                                            log := [log16 EXCEPT ![i] = ((log16)[i]) \o ((m).mentries)];
                                            with (value317 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                              if (((value317).cmd) = (LogConcat)) {
                                                plog := [plog21 EXCEPT ![i] = ((plog21)[i]) \o ((value317).entries)];
                                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                  with (result116 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                    sm := [sm EXCEPT ![i] = (result116)[1]];
                                                    smDomain := [smDomain EXCEPT ![i] = (result116)[2]];
                                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                    either {
                                                      with (value468 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                        await ((network)[j]).enabled;
                                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value468), enabled |-> ((network)[j]).enabled]];
                                                        goto serverLoop;
                                                      };
                                                    } or {
                                                      with (yielded_fd169 = (fd)[j]) {
                                                        await yielded_fd169;
                                                        goto serverLoop;
                                                      };
                                                    };
                                                  };
                                                } else {
                                                  goto serverLoop;
                                                };
                                              } else {
                                                if (((value317).cmd) = (LogPop)) {
                                                  plog := [plog21 EXCEPT ![i] = SubSeq((plog21)[i], 1, (Len((plog21)[i])) - (1))];
                                                  if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                    with (result117 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                      sm := [sm EXCEPT ![i] = (result117)[1]];
                                                      smDomain := [smDomain EXCEPT ![i] = (result117)[2]];
                                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                      either {
                                                        with (value469 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                          await ((network)[j]).enabled;
                                                          await (Len(((network)[j]).queue)) < (BufferSize);
                                                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value469), enabled |-> ((network)[j]).enabled]];
                                                          goto serverLoop;
                                                        };
                                                      } or {
                                                        with (yielded_fd170 = (fd)[j]) {
                                                          await yielded_fd170;
                                                          goto serverLoop;
                                                        };
                                                      };
                                                    };
                                                  } else {
                                                    goto serverLoop;
                                                  };
                                                } else {
                                                  if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                    with (result118 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                      sm := [sm EXCEPT ![i] = (result118)[1]];
                                                      smDomain := [smDomain EXCEPT ![i] = (result118)[2]];
                                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                      either {
                                                        with (value470 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                          await ((network)[j]).enabled;
                                                          await (Len(((network)[j]).queue)) < (BufferSize);
                                                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value470), enabled |-> ((network)[j]).enabled]];
                                                          plog := plog21;
                                                          goto serverLoop;
                                                        };
                                                      } or {
                                                        with (yielded_fd171 = (fd)[j]) {
                                                          await yielded_fd171;
                                                          plog := plog21;
                                                          goto serverLoop;
                                                        };
                                                      };
                                                    };
                                                  } else {
                                                    plog := plog21;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            };
                                          } else {
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log16)[i])) >= (index))) /\ (((((log16)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result119 = ApplyLog((log16)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result119)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result119)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value471 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value471), enabled |-> ((network)[j]).enabled]];
                                                    plog := plog21;
                                                    log := log16;
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd172 = (fd)[j]) {
                                                    await yielded_fd172;
                                                    plog := plog21;
                                                    log := log16;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              plog := plog21;
                                              log := log16;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if ((((m).mentries) # (<<>>)) /\ ((Len((log16)[i])) = ((m).mprevLogIndex))) {
                                          log := [log16 EXCEPT ![i] = ((log16)[i]) \o ((m).mentries)];
                                          with (value318 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                            if (((value318).cmd) = (LogConcat)) {
                                              plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value318).entries)];
                                              if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                with (result120 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                  sm := [sm EXCEPT ![i] = (result120)[1]];
                                                  smDomain := [smDomain EXCEPT ![i] = (result120)[2]];
                                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                  either {
                                                    with (value472 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                      await ((network)[j]).enabled;
                                                      await (Len(((network)[j]).queue)) < (BufferSize);
                                                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value472), enabled |-> ((network)[j]).enabled]];
                                                      goto serverLoop;
                                                    };
                                                  } or {
                                                    with (yielded_fd173 = (fd)[j]) {
                                                      await yielded_fd173;
                                                      goto serverLoop;
                                                    };
                                                  };
                                                };
                                              } else {
                                                goto serverLoop;
                                              };
                                            } else {
                                              if (((value318).cmd) = (LogPop)) {
                                                plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                  with (result121 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                    sm := [sm EXCEPT ![i] = (result121)[1]];
                                                    smDomain := [smDomain EXCEPT ![i] = (result121)[2]];
                                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                    either {
                                                      with (value473 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                        await ((network)[j]).enabled;
                                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value473), enabled |-> ((network)[j]).enabled]];
                                                        goto serverLoop;
                                                      };
                                                    } or {
                                                      with (yielded_fd174 = (fd)[j]) {
                                                        await yielded_fd174;
                                                        goto serverLoop;
                                                      };
                                                    };
                                                  };
                                                } else {
                                                  goto serverLoop;
                                                };
                                              } else {
                                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                  with (result122 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                    sm := [sm EXCEPT ![i] = (result122)[1]];
                                                    smDomain := [smDomain EXCEPT ![i] = (result122)[2]];
                                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                    either {
                                                      with (value474 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                        await ((network)[j]).enabled;
                                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value474), enabled |-> ((network)[j]).enabled]];
                                                        goto serverLoop;
                                                      };
                                                    } or {
                                                      with (yielded_fd175 = (fd)[j]) {
                                                        await yielded_fd175;
                                                        goto serverLoop;
                                                      };
                                                    };
                                                  };
                                                } else {
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          };
                                        } else {
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log16)[i])) >= (index))) /\ (((((log16)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result123 = ApplyLog((log16)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result123)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result123)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value475 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value475), enabled |-> ((network)[j]).enabled]];
                                                  log := log16;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd176 = (fd)[j]) {
                                                  await yielded_fd176;
                                                  log := log16;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            log := log16;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  if ((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m).mprevLogIndex))) {
                                    log := [log EXCEPT ![i] = ((log)[i]) \o ((m).mentries)];
                                    with (value319 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                      if (((value319).cmd) = (LogConcat)) {
                                        plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value319).entries)];
                                        if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                          with (result124 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result124)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result124)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value476 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Len(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value476), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd177 = (fd)[j]) {
                                                await yielded_fd177;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          goto serverLoop;
                                        };
                                      } else {
                                        if (((value319).cmd) = (LogPop)) {
                                          plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result125 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result125)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result125)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value477 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value477), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd178 = (fd)[j]) {
                                                  await yielded_fd178;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            goto serverLoop;
                                          };
                                        } else {
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result126 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result126)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result126)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value478 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value478), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd179 = (fd)[j]) {
                                                  await yielded_fd179;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  } else {
                                    if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                      with (result127 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result127)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result127)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value479 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Len(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value479), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd180 = (fd)[j]) {
                                            await yielded_fd180;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      goto serverLoop;
                                    };
                                  };
                                };
                              };
                            };
                          } else {
                            if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state4)[i]) = (Follower))) /\ (~ (logOK)))) {
                              either {
                                with (value19 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                  await ((network)[j]).enabled;
                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value19), enabled |-> ((network)[j]).enabled]];
                                  state := state4;
                                  goto serverLoop;
                                };
                              } or {
                                with (yielded_fd05 = (fd)[j]) {
                                  await yielded_fd05;
                                  state := state4;
                                  goto serverLoop;
                                };
                              };
                            } else {
                              assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state4)[i]) = (Follower))) /\ (logOK);
                              with (index = ((m).mprevLogIndex) + (1)) {
                                if (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m).mentries)[1]).term))) {
                                  with (
                                    log17 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))], 
                                    value25 = [cmd |-> LogPop]
                                  ) {
                                    if (((value25).cmd) = (LogConcat)) {
                                      with (plog22 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value25).entries)]) {
                                        if ((((m).mentries) # (<<>>)) /\ ((Len((log17)[i])) = ((m).mprevLogIndex))) {
                                          log := [log17 EXCEPT ![i] = ((log17)[i]) \o ((m).mentries)];
                                          with (value320 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                            if (((value320).cmd) = (LogConcat)) {
                                              plog := [plog22 EXCEPT ![i] = ((plog22)[i]) \o ((value320).entries)];
                                              if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                with (result128 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                  sm := [sm EXCEPT ![i] = (result128)[1]];
                                                  smDomain := [smDomain EXCEPT ![i] = (result128)[2]];
                                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                  either {
                                                    with (value480 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                      await ((network)[j]).enabled;
                                                      await (Len(((network)[j]).queue)) < (BufferSize);
                                                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value480), enabled |-> ((network)[j]).enabled]];
                                                      state := state4;
                                                      goto serverLoop;
                                                    };
                                                  } or {
                                                    with (yielded_fd181 = (fd)[j]) {
                                                      await yielded_fd181;
                                                      state := state4;
                                                      goto serverLoop;
                                                    };
                                                  };
                                                };
                                              } else {
                                                state := state4;
                                                goto serverLoop;
                                              };
                                            } else {
                                              if (((value320).cmd) = (LogPop)) {
                                                plog := [plog22 EXCEPT ![i] = SubSeq((plog22)[i], 1, (Len((plog22)[i])) - (1))];
                                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                  with (result129 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                    sm := [sm EXCEPT ![i] = (result129)[1]];
                                                    smDomain := [smDomain EXCEPT ![i] = (result129)[2]];
                                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                    either {
                                                      with (value481 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                        await ((network)[j]).enabled;
                                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value481), enabled |-> ((network)[j]).enabled]];
                                                        state := state4;
                                                        goto serverLoop;
                                                      };
                                                    } or {
                                                      with (yielded_fd182 = (fd)[j]) {
                                                        await yielded_fd182;
                                                        state := state4;
                                                        goto serverLoop;
                                                      };
                                                    };
                                                  };
                                                } else {
                                                  state := state4;
                                                  goto serverLoop;
                                                };
                                              } else {
                                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                  with (result130 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                    sm := [sm EXCEPT ![i] = (result130)[1]];
                                                    smDomain := [smDomain EXCEPT ![i] = (result130)[2]];
                                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                    either {
                                                      with (value482 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                        await ((network)[j]).enabled;
                                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value482), enabled |-> ((network)[j]).enabled]];
                                                        plog := plog22;
                                                        state := state4;
                                                        goto serverLoop;
                                                      };
                                                    } or {
                                                      with (yielded_fd183 = (fd)[j]) {
                                                        await yielded_fd183;
                                                        plog := plog22;
                                                        state := state4;
                                                        goto serverLoop;
                                                      };
                                                    };
                                                  };
                                                } else {
                                                  plog := plog22;
                                                  state := state4;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          };
                                        } else {
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log17)[i])) >= (index))) /\ (((((log17)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result131 = ApplyLog((log17)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result131)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result131)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value483 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value483), enabled |-> ((network)[j]).enabled]];
                                                  plog := plog22;
                                                  log := log17;
                                                  state := state4;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd184 = (fd)[j]) {
                                                  await yielded_fd184;
                                                  plog := plog22;
                                                  log := log17;
                                                  state := state4;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            plog := plog22;
                                            log := log17;
                                            state := state4;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value25).cmd) = (LogPop)) {
                                        with (plog23 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]) {
                                          if ((((m).mentries) # (<<>>)) /\ ((Len((log17)[i])) = ((m).mprevLogIndex))) {
                                            log := [log17 EXCEPT ![i] = ((log17)[i]) \o ((m).mentries)];
                                            with (value321 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                              if (((value321).cmd) = (LogConcat)) {
                                                plog := [plog23 EXCEPT ![i] = ((plog23)[i]) \o ((value321).entries)];
                                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                  with (result132 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                    sm := [sm EXCEPT ![i] = (result132)[1]];
                                                    smDomain := [smDomain EXCEPT ![i] = (result132)[2]];
                                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                    either {
                                                      with (value484 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                        await ((network)[j]).enabled;
                                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value484), enabled |-> ((network)[j]).enabled]];
                                                        state := state4;
                                                        goto serverLoop;
                                                      };
                                                    } or {
                                                      with (yielded_fd185 = (fd)[j]) {
                                                        await yielded_fd185;
                                                        state := state4;
                                                        goto serverLoop;
                                                      };
                                                    };
                                                  };
                                                } else {
                                                  state := state4;
                                                  goto serverLoop;
                                                };
                                              } else {
                                                if (((value321).cmd) = (LogPop)) {
                                                  plog := [plog23 EXCEPT ![i] = SubSeq((plog23)[i], 1, (Len((plog23)[i])) - (1))];
                                                  if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                    with (result133 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                      sm := [sm EXCEPT ![i] = (result133)[1]];
                                                      smDomain := [smDomain EXCEPT ![i] = (result133)[2]];
                                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                      either {
                                                        with (value485 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                          await ((network)[j]).enabled;
                                                          await (Len(((network)[j]).queue)) < (BufferSize);
                                                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value485), enabled |-> ((network)[j]).enabled]];
                                                          state := state4;
                                                          goto serverLoop;
                                                        };
                                                      } or {
                                                        with (yielded_fd186 = (fd)[j]) {
                                                          await yielded_fd186;
                                                          state := state4;
                                                          goto serverLoop;
                                                        };
                                                      };
                                                    };
                                                  } else {
                                                    state := state4;
                                                    goto serverLoop;
                                                  };
                                                } else {
                                                  if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                    with (result134 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                      sm := [sm EXCEPT ![i] = (result134)[1]];
                                                      smDomain := [smDomain EXCEPT ![i] = (result134)[2]];
                                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                      either {
                                                        with (value486 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                          await ((network)[j]).enabled;
                                                          await (Len(((network)[j]).queue)) < (BufferSize);
                                                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value486), enabled |-> ((network)[j]).enabled]];
                                                          plog := plog23;
                                                          state := state4;
                                                          goto serverLoop;
                                                        };
                                                      } or {
                                                        with (yielded_fd187 = (fd)[j]) {
                                                          await yielded_fd187;
                                                          plog := plog23;
                                                          state := state4;
                                                          goto serverLoop;
                                                        };
                                                      };
                                                    };
                                                  } else {
                                                    plog := plog23;
                                                    state := state4;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            };
                                          } else {
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log17)[i])) >= (index))) /\ (((((log17)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result135 = ApplyLog((log17)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result135)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result135)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value487 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value487), enabled |-> ((network)[j]).enabled]];
                                                    plog := plog23;
                                                    log := log17;
                                                    state := state4;
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd188 = (fd)[j]) {
                                                    await yielded_fd188;
                                                    plog := plog23;
                                                    log := log17;
                                                    state := state4;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              plog := plog23;
                                              log := log17;
                                              state := state4;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if ((((m).mentries) # (<<>>)) /\ ((Len((log17)[i])) = ((m).mprevLogIndex))) {
                                          log := [log17 EXCEPT ![i] = ((log17)[i]) \o ((m).mentries)];
                                          with (value322 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                            if (((value322).cmd) = (LogConcat)) {
                                              plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value322).entries)];
                                              if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                with (result136 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                  sm := [sm EXCEPT ![i] = (result136)[1]];
                                                  smDomain := [smDomain EXCEPT ![i] = (result136)[2]];
                                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                  either {
                                                    with (value488 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                      await ((network)[j]).enabled;
                                                      await (Len(((network)[j]).queue)) < (BufferSize);
                                                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value488), enabled |-> ((network)[j]).enabled]];
                                                      state := state4;
                                                      goto serverLoop;
                                                    };
                                                  } or {
                                                    with (yielded_fd189 = (fd)[j]) {
                                                      await yielded_fd189;
                                                      state := state4;
                                                      goto serverLoop;
                                                    };
                                                  };
                                                };
                                              } else {
                                                state := state4;
                                                goto serverLoop;
                                              };
                                            } else {
                                              if (((value322).cmd) = (LogPop)) {
                                                plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                  with (result137 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                    sm := [sm EXCEPT ![i] = (result137)[1]];
                                                    smDomain := [smDomain EXCEPT ![i] = (result137)[2]];
                                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                    either {
                                                      with (value489 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                        await ((network)[j]).enabled;
                                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value489), enabled |-> ((network)[j]).enabled]];
                                                        state := state4;
                                                        goto serverLoop;
                                                      };
                                                    } or {
                                                      with (yielded_fd190 = (fd)[j]) {
                                                        await yielded_fd190;
                                                        state := state4;
                                                        goto serverLoop;
                                                      };
                                                    };
                                                  };
                                                } else {
                                                  state := state4;
                                                  goto serverLoop;
                                                };
                                              } else {
                                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                  with (result138 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                    sm := [sm EXCEPT ![i] = (result138)[1]];
                                                    smDomain := [smDomain EXCEPT ![i] = (result138)[2]];
                                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                    either {
                                                      with (value490 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                        await ((network)[j]).enabled;
                                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value490), enabled |-> ((network)[j]).enabled]];
                                                        state := state4;
                                                        goto serverLoop;
                                                      };
                                                    } or {
                                                      with (yielded_fd191 = (fd)[j]) {
                                                        await yielded_fd191;
                                                        state := state4;
                                                        goto serverLoop;
                                                      };
                                                    };
                                                  };
                                                } else {
                                                  state := state4;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          };
                                        } else {
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log17)[i])) >= (index))) /\ (((((log17)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result139 = ApplyLog((log17)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result139)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result139)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value491 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value491), enabled |-> ((network)[j]).enabled]];
                                                  log := log17;
                                                  state := state4;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd192 = (fd)[j]) {
                                                  await yielded_fd192;
                                                  log := log17;
                                                  state := state4;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            log := log17;
                                            state := state4;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  if ((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m).mprevLogIndex))) {
                                    log := [log EXCEPT ![i] = ((log)[i]) \o ((m).mentries)];
                                    with (value323 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                      if (((value323).cmd) = (LogConcat)) {
                                        plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value323).entries)];
                                        if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                          with (result140 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result140)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result140)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value492 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Len(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value492), enabled |-> ((network)[j]).enabled]];
                                                state := state4;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd193 = (fd)[j]) {
                                                await yielded_fd193;
                                                state := state4;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          state := state4;
                                          goto serverLoop;
                                        };
                                      } else {
                                        if (((value323).cmd) = (LogPop)) {
                                          plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result141 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result141)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result141)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value493 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value493), enabled |-> ((network)[j]).enabled]];
                                                  state := state4;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd194 = (fd)[j]) {
                                                  await yielded_fd194;
                                                  state := state4;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            state := state4;
                                            goto serverLoop;
                                          };
                                        } else {
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result142 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result142)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result142)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value494 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value494), enabled |-> ((network)[j]).enabled]];
                                                  state := state4;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd195 = (fd)[j]) {
                                                  await yielded_fd195;
                                                  state := state4;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            state := state4;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  } else {
                                    if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                      with (result143 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result143)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result143)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value495 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Len(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value495), enabled |-> ((network)[j]).enabled]];
                                            state := state4;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd196 = (fd)[j]) {
                                            await yielded_fd196;
                                            state := state4;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      state := state4;
                                      goto serverLoop;
                                    };
                                  };
                                };
                              };
                            };
                          };
                        };
                      };
                    };
                  } else {
                    leader := [leader EXCEPT ![self] = (m).msource];
                    with (
                      i = self, 
                      j = (m).msource, 
                      logOK = (((m).mprevLogIndex) = (0)) \/ (((((m).mprevLogIndex) > (0)) /\ (((m).mprevLogIndex) <= (Len((log)[i])))) /\ (((m).mprevLogTerm) = ((((log)[i])[(m).mprevLogIndex]).term)))
                    ) {
                      assert ((m).mterm) <= ((currentTerm)[i]);
                      if ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Candidate))) {
                        state := [state EXCEPT ![i] = Follower];
                        if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                          either {
                            with (value110 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                              await ((network)[j]).enabled;
                              await (Len(((network)[j]).queue)) < (BufferSize);
                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value110), enabled |-> ((network)[j]).enabled]];
                              goto serverLoop;
                            };
                          } or {
                            with (yielded_fd06 = (fd)[j]) {
                              await yielded_fd06;
                              goto serverLoop;
                            };
                          };
                        } else {
                          assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                          with (index = ((m).mprevLogIndex) + (1)) {
                            if (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m).mentries)[1]).term))) {
                              with (
                                log18 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))], 
                                value26 = [cmd |-> LogPop]
                              ) {
                                if (((value26).cmd) = (LogConcat)) {
                                  with (plog24 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value26).entries)]) {
                                    if ((((m).mentries) # (<<>>)) /\ ((Len((log18)[i])) = ((m).mprevLogIndex))) {
                                      log := [log18 EXCEPT ![i] = ((log18)[i]) \o ((m).mentries)];
                                      with (value324 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                        if (((value324).cmd) = (LogConcat)) {
                                          plog := [plog24 EXCEPT ![i] = ((plog24)[i]) \o ((value324).entries)];
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result144 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result144)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result144)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value496 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value496), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd197 = (fd)[j]) {
                                                  await yielded_fd197;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            goto serverLoop;
                                          };
                                        } else {
                                          if (((value324).cmd) = (LogPop)) {
                                            plog := [plog24 EXCEPT ![i] = SubSeq((plog24)[i], 1, (Len((plog24)[i])) - (1))];
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result145 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result145)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result145)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value497 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value497), enabled |-> ((network)[j]).enabled]];
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd198 = (fd)[j]) {
                                                    await yielded_fd198;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              goto serverLoop;
                                            };
                                          } else {
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result146 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result146)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result146)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value498 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value498), enabled |-> ((network)[j]).enabled]];
                                                    plog := plog24;
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd199 = (fd)[j]) {
                                                    await yielded_fd199;
                                                    plog := plog24;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              plog := plog24;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    } else {
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log18)[i])) >= (index))) /\ (((((log18)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result147 = ApplyLog((log18)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result147)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result147)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value499 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value499), enabled |-> ((network)[j]).enabled]];
                                              plog := plog24;
                                              log := log18;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1100 = (fd)[j]) {
                                              await yielded_fd1100;
                                              plog := plog24;
                                              log := log18;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        plog := plog24;
                                        log := log18;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  if (((value26).cmd) = (LogPop)) {
                                    with (plog25 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]) {
                                      if ((((m).mentries) # (<<>>)) /\ ((Len((log18)[i])) = ((m).mprevLogIndex))) {
                                        log := [log18 EXCEPT ![i] = ((log18)[i]) \o ((m).mentries)];
                                        with (value325 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                          if (((value325).cmd) = (LogConcat)) {
                                            plog := [plog25 EXCEPT ![i] = ((plog25)[i]) \o ((value325).entries)];
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result148 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result148)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result148)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value4100 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4100), enabled |-> ((network)[j]).enabled]];
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd1101 = (fd)[j]) {
                                                    await yielded_fd1101;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              goto serverLoop;
                                            };
                                          } else {
                                            if (((value325).cmd) = (LogPop)) {
                                              plog := [plog25 EXCEPT ![i] = SubSeq((plog25)[i], 1, (Len((plog25)[i])) - (1))];
                                              if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                with (result149 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                  sm := [sm EXCEPT ![i] = (result149)[1]];
                                                  smDomain := [smDomain EXCEPT ![i] = (result149)[2]];
                                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                  either {
                                                    with (value4101 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                      await ((network)[j]).enabled;
                                                      await (Len(((network)[j]).queue)) < (BufferSize);
                                                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4101), enabled |-> ((network)[j]).enabled]];
                                                      goto serverLoop;
                                                    };
                                                  } or {
                                                    with (yielded_fd1102 = (fd)[j]) {
                                                      await yielded_fd1102;
                                                      goto serverLoop;
                                                    };
                                                  };
                                                };
                                              } else {
                                                goto serverLoop;
                                              };
                                            } else {
                                              if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                with (result150 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                  sm := [sm EXCEPT ![i] = (result150)[1]];
                                                  smDomain := [smDomain EXCEPT ![i] = (result150)[2]];
                                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                  either {
                                                    with (value4102 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                      await ((network)[j]).enabled;
                                                      await (Len(((network)[j]).queue)) < (BufferSize);
                                                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4102), enabled |-> ((network)[j]).enabled]];
                                                      plog := plog25;
                                                      goto serverLoop;
                                                    };
                                                  } or {
                                                    with (yielded_fd1103 = (fd)[j]) {
                                                      await yielded_fd1103;
                                                      plog := plog25;
                                                      goto serverLoop;
                                                    };
                                                  };
                                                };
                                              } else {
                                                plog := plog25;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      } else {
                                        if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log18)[i])) >= (index))) /\ (((((log18)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                          with (result151 = ApplyLog((log18)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result151)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result151)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value4103 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Len(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4103), enabled |-> ((network)[j]).enabled]];
                                                plog := plog25;
                                                log := log18;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1104 = (fd)[j]) {
                                                await yielded_fd1104;
                                                plog := plog25;
                                                log := log18;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          plog := plog25;
                                          log := log18;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    if ((((m).mentries) # (<<>>)) /\ ((Len((log18)[i])) = ((m).mprevLogIndex))) {
                                      log := [log18 EXCEPT ![i] = ((log18)[i]) \o ((m).mentries)];
                                      with (value326 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                        if (((value326).cmd) = (LogConcat)) {
                                          plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value326).entries)];
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result152 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result152)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result152)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value4104 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4104), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd1105 = (fd)[j]) {
                                                  await yielded_fd1105;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            goto serverLoop;
                                          };
                                        } else {
                                          if (((value326).cmd) = (LogPop)) {
                                            plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result153 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result153)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result153)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value4105 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4105), enabled |-> ((network)[j]).enabled]];
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd1106 = (fd)[j]) {
                                                    await yielded_fd1106;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              goto serverLoop;
                                            };
                                          } else {
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result154 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result154)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result154)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value4106 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4106), enabled |-> ((network)[j]).enabled]];
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd1107 = (fd)[j]) {
                                                    await yielded_fd1107;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    } else {
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log18)[i])) >= (index))) /\ (((((log18)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result155 = ApplyLog((log18)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result155)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result155)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value4107 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4107), enabled |-> ((network)[j]).enabled]];
                                              log := log18;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1108 = (fd)[j]) {
                                              await yielded_fd1108;
                                              log := log18;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := log18;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                };
                              };
                            } else {
                              if ((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m).mprevLogIndex))) {
                                log := [log EXCEPT ![i] = ((log)[i]) \o ((m).mentries)];
                                with (value327 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                  if (((value327).cmd) = (LogConcat)) {
                                    plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value327).entries)];
                                    if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                      with (result156 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result156)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result156)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value4108 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Len(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4108), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1109 = (fd)[j]) {
                                            await yielded_fd1109;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      goto serverLoop;
                                    };
                                  } else {
                                    if (((value327).cmd) = (LogPop)) {
                                      plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result157 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result157)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result157)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value4109 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4109), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1110 = (fd)[j]) {
                                              await yielded_fd1110;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        goto serverLoop;
                                      };
                                    } else {
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result158 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result158)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result158)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value4110 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4110), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1111 = (fd)[j]) {
                                              await yielded_fd1111;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                };
                              } else {
                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                  with (result159 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                    sm := [sm EXCEPT ![i] = (result159)[1]];
                                    smDomain := [smDomain EXCEPT ![i] = (result159)[2]];
                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                    either {
                                      with (value4111 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                        await ((network)[j]).enabled;
                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4111), enabled |-> ((network)[j]).enabled]];
                                        goto serverLoop;
                                      };
                                    } or {
                                      with (yielded_fd1112 = (fd)[j]) {
                                        await yielded_fd1112;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  goto serverLoop;
                                };
                              };
                            };
                          };
                        };
                      } else {
                        if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                          either {
                            with (value111 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                              await ((network)[j]).enabled;
                              await (Len(((network)[j]).queue)) < (BufferSize);
                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value111), enabled |-> ((network)[j]).enabled]];
                              goto serverLoop;
                            };
                          } or {
                            with (yielded_fd07 = (fd)[j]) {
                              await yielded_fd07;
                              goto serverLoop;
                            };
                          };
                        } else {
                          assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                          with (index = ((m).mprevLogIndex) + (1)) {
                            if (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m).mentries)[1]).term))) {
                              with (
                                log19 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))], 
                                value27 = [cmd |-> LogPop]
                              ) {
                                if (((value27).cmd) = (LogConcat)) {
                                  with (plog26 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value27).entries)]) {
                                    if ((((m).mentries) # (<<>>)) /\ ((Len((log19)[i])) = ((m).mprevLogIndex))) {
                                      log := [log19 EXCEPT ![i] = ((log19)[i]) \o ((m).mentries)];
                                      with (value328 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                        if (((value328).cmd) = (LogConcat)) {
                                          plog := [plog26 EXCEPT ![i] = ((plog26)[i]) \o ((value328).entries)];
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result160 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result160)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result160)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value4112 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4112), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd1113 = (fd)[j]) {
                                                  await yielded_fd1113;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            goto serverLoop;
                                          };
                                        } else {
                                          if (((value328).cmd) = (LogPop)) {
                                            plog := [plog26 EXCEPT ![i] = SubSeq((plog26)[i], 1, (Len((plog26)[i])) - (1))];
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result161 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result161)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result161)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value4113 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4113), enabled |-> ((network)[j]).enabled]];
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd1114 = (fd)[j]) {
                                                    await yielded_fd1114;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              goto serverLoop;
                                            };
                                          } else {
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result162 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result162)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result162)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value4114 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4114), enabled |-> ((network)[j]).enabled]];
                                                    plog := plog26;
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd1115 = (fd)[j]) {
                                                    await yielded_fd1115;
                                                    plog := plog26;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              plog := plog26;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    } else {
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log19)[i])) >= (index))) /\ (((((log19)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result163 = ApplyLog((log19)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result163)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result163)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value4115 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4115), enabled |-> ((network)[j]).enabled]];
                                              plog := plog26;
                                              log := log19;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1116 = (fd)[j]) {
                                              await yielded_fd1116;
                                              plog := plog26;
                                              log := log19;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        plog := plog26;
                                        log := log19;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  if (((value27).cmd) = (LogPop)) {
                                    with (plog27 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]) {
                                      if ((((m).mentries) # (<<>>)) /\ ((Len((log19)[i])) = ((m).mprevLogIndex))) {
                                        log := [log19 EXCEPT ![i] = ((log19)[i]) \o ((m).mentries)];
                                        with (value329 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                          if (((value329).cmd) = (LogConcat)) {
                                            plog := [plog27 EXCEPT ![i] = ((plog27)[i]) \o ((value329).entries)];
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result164 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result164)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result164)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value4116 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4116), enabled |-> ((network)[j]).enabled]];
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd1117 = (fd)[j]) {
                                                    await yielded_fd1117;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              goto serverLoop;
                                            };
                                          } else {
                                            if (((value329).cmd) = (LogPop)) {
                                              plog := [plog27 EXCEPT ![i] = SubSeq((plog27)[i], 1, (Len((plog27)[i])) - (1))];
                                              if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                with (result165 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                  sm := [sm EXCEPT ![i] = (result165)[1]];
                                                  smDomain := [smDomain EXCEPT ![i] = (result165)[2]];
                                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                  either {
                                                    with (value4117 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                      await ((network)[j]).enabled;
                                                      await (Len(((network)[j]).queue)) < (BufferSize);
                                                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4117), enabled |-> ((network)[j]).enabled]];
                                                      goto serverLoop;
                                                    };
                                                  } or {
                                                    with (yielded_fd1118 = (fd)[j]) {
                                                      await yielded_fd1118;
                                                      goto serverLoop;
                                                    };
                                                  };
                                                };
                                              } else {
                                                goto serverLoop;
                                              };
                                            } else {
                                              if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                with (result166 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                  sm := [sm EXCEPT ![i] = (result166)[1]];
                                                  smDomain := [smDomain EXCEPT ![i] = (result166)[2]];
                                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                  either {
                                                    with (value4118 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                      await ((network)[j]).enabled;
                                                      await (Len(((network)[j]).queue)) < (BufferSize);
                                                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4118), enabled |-> ((network)[j]).enabled]];
                                                      plog := plog27;
                                                      goto serverLoop;
                                                    };
                                                  } or {
                                                    with (yielded_fd1119 = (fd)[j]) {
                                                      await yielded_fd1119;
                                                      plog := plog27;
                                                      goto serverLoop;
                                                    };
                                                  };
                                                };
                                              } else {
                                                plog := plog27;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      } else {
                                        if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log19)[i])) >= (index))) /\ (((((log19)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                          with (result167 = ApplyLog((log19)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result167)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result167)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value4119 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Len(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4119), enabled |-> ((network)[j]).enabled]];
                                                plog := plog27;
                                                log := log19;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1120 = (fd)[j]) {
                                                await yielded_fd1120;
                                                plog := plog27;
                                                log := log19;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          plog := plog27;
                                          log := log19;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    if ((((m).mentries) # (<<>>)) /\ ((Len((log19)[i])) = ((m).mprevLogIndex))) {
                                      log := [log19 EXCEPT ![i] = ((log19)[i]) \o ((m).mentries)];
                                      with (value330 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                        if (((value330).cmd) = (LogConcat)) {
                                          plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value330).entries)];
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result168 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result168)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result168)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value4120 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4120), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd1121 = (fd)[j]) {
                                                  await yielded_fd1121;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            goto serverLoop;
                                          };
                                        } else {
                                          if (((value330).cmd) = (LogPop)) {
                                            plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result169 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result169)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result169)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value4121 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4121), enabled |-> ((network)[j]).enabled]];
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd1122 = (fd)[j]) {
                                                    await yielded_fd1122;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              goto serverLoop;
                                            };
                                          } else {
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result170 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result170)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result170)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value4122 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4122), enabled |-> ((network)[j]).enabled]];
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd1123 = (fd)[j]) {
                                                    await yielded_fd1123;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    } else {
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log19)[i])) >= (index))) /\ (((((log19)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result171 = ApplyLog((log19)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result171)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result171)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value4123 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4123), enabled |-> ((network)[j]).enabled]];
                                              log := log19;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1124 = (fd)[j]) {
                                              await yielded_fd1124;
                                              log := log19;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := log19;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                };
                              };
                            } else {
                              if ((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m).mprevLogIndex))) {
                                log := [log EXCEPT ![i] = ((log)[i]) \o ((m).mentries)];
                                with (value331 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                  if (((value331).cmd) = (LogConcat)) {
                                    plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value331).entries)];
                                    if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                      with (result172 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result172)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result172)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value4124 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Len(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4124), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1125 = (fd)[j]) {
                                            await yielded_fd1125;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      goto serverLoop;
                                    };
                                  } else {
                                    if (((value331).cmd) = (LogPop)) {
                                      plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result173 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result173)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result173)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value4125 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4125), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1126 = (fd)[j]) {
                                              await yielded_fd1126;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        goto serverLoop;
                                      };
                                    } else {
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result174 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result174)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result174)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value4126 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4126), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1127 = (fd)[j]) {
                                              await yielded_fd1127;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                };
                              } else {
                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                  with (result175 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                    sm := [sm EXCEPT ![i] = (result175)[1]];
                                    smDomain := [smDomain EXCEPT ![i] = (result175)[2]];
                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                    either {
                                      with (value4127 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                        await ((network)[j]).enabled;
                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4127), enabled |-> ((network)[j]).enabled]];
                                        goto serverLoop;
                                      };
                                    } or {
                                      with (yielded_fd1128 = (fd)[j]) {
                                        await yielded_fd1128;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  goto serverLoop;
                                };
                              };
                            };
                          };
                        };
                      };
                    };
                  };
                } else {
                  if (((m).mtype) = (AppendEntriesResponse)) {
                    if (((m).mterm) > ((currentTerm)[self])) {
                      currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
                      state := [state EXCEPT ![self] = Follower];
                      votedFor := [votedFor EXCEPT ![self] = Nil];
                      leader := [leader EXCEPT ![self] = Nil];
                      if (((m).mterm) < ((currentTerm)[self])) {
                        skip;
                        goto serverLoop;
                      } else {
                        with (
                          i = self, 
                          j = (m).msource
                        ) {
                          assert ((m).mterm) = ((currentTerm)[i]);
                          if ((m).msuccess) {
                            nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m).mmatchIndex) + (1)]];
                            matchIndex := [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m).mmatchIndex]];
                            goto serverLoop;
                          } else {
                            nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]];
                            goto serverLoop;
                          };
                        };
                      };
                    } else {
                      if (((m).mterm) < ((currentTerm)[self])) {
                        skip;
                        goto serverLoop;
                      } else {
                        with (
                          i = self, 
                          j = (m).msource
                        ) {
                          assert ((m).mterm) = ((currentTerm)[i]);
                          if ((m).msuccess) {
                            nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m).mmatchIndex) + (1)]];
                            matchIndex := [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m).mmatchIndex]];
                            goto serverLoop;
                          } else {
                            nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]];
                            goto serverLoop;
                          };
                        };
                      };
                    };
                  } else {
                    if ((((m).mtype) = (ClientPutRequest)) \/ (((m).mtype) = (ClientGetRequest))) {
                      if (((state)[self]) = (Leader)) {
                        with (entry = [term |-> (currentTerm)[self], cmd |-> (m).mcmd, client |-> (m).msource]) {
                          log := [log EXCEPT ![self] = Append((log)[self], entry)];
                          with (value51 = [cmd |-> LogConcat, entries |-> <<entry>>]) {
                            if (((value51).cmd) = (LogConcat)) {
                              plog := [plog EXCEPT ![self] = ((plog)[self]) \o ((value51).entries)];
                              goto serverLoop;
                            } else {
                              if (((value51).cmd) = (LogPop)) {
                                plog := [plog EXCEPT ![self] = SubSeq((plog)[self], 1, (Len((plog)[self])) - (1))];
                                goto serverLoop;
                              } else {
                                goto serverLoop;
                              };
                            };
                          };
                        };
                      } else {
                        with (
                          i = self, 
                          j = (m).msource, 
                          respType = IF (((m).mcmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse, 
                          value61 = [mtype |-> respType, msuccess |-> FALSE, mresponse |-> [idx |-> ((m).mcmd).idx, key |-> ((m).mcmd).key], mleaderHint |-> (leader)[i], msource |-> i, mdest |-> j]
                        ) {
                          await ((network)[j]).enabled;
                          await (Len(((network)[j]).queue)) < (BufferSize);
                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value61), enabled |-> ((network)[j]).enabled]];
                          goto serverLoop;
                        };
                      };
                    } else {
                      goto serverLoop;
                    };
                  };
                };
              };
            };
          };
        };
      } else {
        if (((m).mtype) = (RequestVoteRequest)) {
          if (((m).mterm) > ((currentTerm)[self])) {
            currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
            state := [state EXCEPT ![self] = Follower];
            with (votedFor5 = [votedFor EXCEPT ![self] = Nil]) {
              leader := [leader EXCEPT ![self] = Nil];
              with (
                i = self, 
                j = (m).msource, 
                logOK = (((m).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m).mlastLogIndex) >= (Len((log)[i])))), 
                grant = ((((m).mterm) = ((currentTerm)[i])) /\ (logOK)) /\ (((votedFor5)[self]) \in ({Nil, j}))
              ) {
                assert ((m).mterm) <= ((currentTerm)[i]);
                if (grant) {
                  votedFor := [votedFor5 EXCEPT ![i] = j];
                  either {
                    with (value08 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                      await ((network)[j]).enabled;
                      await (Len(((network)[j]).queue)) < (BufferSize);
                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value08), enabled |-> ((network)[j]).enabled]];
                      if (Debug) {
                        print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                        goto serverLoop;
                      } else {
                        goto serverLoop;
                      };
                    };
                  } or {
                    with (yielded_fd24 = (fd)[j]) {
                      await yielded_fd24;
                      if (Debug) {
                        print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                        goto serverLoop;
                      } else {
                        goto serverLoop;
                      };
                    };
                  };
                } else {
                  either {
                    with (value09 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                      await ((network)[j]).enabled;
                      await (Len(((network)[j]).queue)) < (BufferSize);
                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value09), enabled |-> ((network)[j]).enabled]];
                      if (Debug) {
                        print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                        votedFor := votedFor5;
                        goto serverLoop;
                      } else {
                        votedFor := votedFor5;
                        goto serverLoop;
                      };
                    };
                  } or {
                    with (yielded_fd25 = (fd)[j]) {
                      await yielded_fd25;
                      if (Debug) {
                        print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                        votedFor := votedFor5;
                        goto serverLoop;
                      } else {
                        votedFor := votedFor5;
                        goto serverLoop;
                      };
                    };
                  };
                };
              };
            };
          } else {
            with (
              i = self, 
              j = (m).msource, 
              logOK = (((m).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m).mlastLogIndex) >= (Len((log)[i])))), 
              grant = ((((m).mterm) = ((currentTerm)[i])) /\ (logOK)) /\ (((votedFor)[self]) \in ({Nil, j}))
            ) {
              assert ((m).mterm) <= ((currentTerm)[i]);
              if (grant) {
                votedFor := [votedFor EXCEPT ![i] = j];
                either {
                  with (value010 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                    await ((network)[j]).enabled;
                    await (Len(((network)[j]).queue)) < (BufferSize);
                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value010), enabled |-> ((network)[j]).enabled]];
                    if (Debug) {
                      print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                      goto serverLoop;
                    } else {
                      goto serverLoop;
                    };
                  };
                } or {
                  with (yielded_fd26 = (fd)[j]) {
                    await yielded_fd26;
                    if (Debug) {
                      print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                      goto serverLoop;
                    } else {
                      goto serverLoop;
                    };
                  };
                };
              } else {
                either {
                  with (value011 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                    await ((network)[j]).enabled;
                    await (Len(((network)[j]).queue)) < (BufferSize);
                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value011), enabled |-> ((network)[j]).enabled]];
                    if (Debug) {
                      print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                      goto serverLoop;
                    } else {
                      goto serverLoop;
                    };
                  };
                } or {
                  with (yielded_fd27 = (fd)[j]) {
                    await yielded_fd27;
                    if (Debug) {
                      print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                      goto serverLoop;
                    } else {
                      goto serverLoop;
                    };
                  };
                };
              };
            };
          };
        } else {
          if (((m).mtype) = (RequestVoteResponse)) {
            if (((m).mterm) > ((currentTerm)[self])) {
              currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
              state := [state EXCEPT ![self] = Follower];
              votedFor := [votedFor EXCEPT ![self] = Nil];
              leader := [leader EXCEPT ![self] = Nil];
              if (((m).mterm) < ((currentTerm)[self])) {
                skip;
                goto serverLoop;
              } else {
                with (
                  i = self, 
                  j = (m).msource
                ) {
                  assert ((m).mterm) = ((currentTerm)[i]);
                  votesResponded := [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})];
                  if ((m).mvoteGranted) {
                    votesGranted := [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})];
                    goto serverLoop;
                  } else {
                    goto serverLoop;
                  };
                };
              };
            } else {
              if (((m).mterm) < ((currentTerm)[self])) {
                skip;
                goto serverLoop;
              } else {
                with (
                  i = self, 
                  j = (m).msource
                ) {
                  assert ((m).mterm) = ((currentTerm)[i]);
                  votesResponded := [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})];
                  if ((m).mvoteGranted) {
                    votesGranted := [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})];
                    goto serverLoop;
                  } else {
                    goto serverLoop;
                  };
                };
              };
            };
          } else {
            if (((m).mtype) = (AppendEntriesRequest)) {
              if (((m).mterm) > ((currentTerm)[self])) {
                currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
                with (state5 = [state EXCEPT ![self] = Follower]) {
                  votedFor := [votedFor EXCEPT ![self] = Nil];
                  with (leader5 = [leader EXCEPT ![self] = Nil]) {
                    leader := [leader5 EXCEPT ![self] = (m).msource];
                    with (
                      i = self, 
                      j = (m).msource, 
                      logOK = (((m).mprevLogIndex) = (0)) \/ (((((m).mprevLogIndex) > (0)) /\ (((m).mprevLogIndex) <= (Len((log)[i])))) /\ (((m).mprevLogTerm) = ((((log)[i])[(m).mprevLogIndex]).term)))
                    ) {
                      assert ((m).mterm) <= ((currentTerm)[i]);
                      if ((((m).mterm) = ((currentTerm)[i])) /\ (((state5)[i]) = (Candidate))) {
                        state := [state5 EXCEPT ![i] = Follower];
                        if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                          either {
                            with (value112 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                              await ((network)[j]).enabled;
                              await (Len(((network)[j]).queue)) < (BufferSize);
                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value112), enabled |-> ((network)[j]).enabled]];
                              goto serverLoop;
                            };
                          } or {
                            with (yielded_fd08 = (fd)[j]) {
                              await yielded_fd08;
                              goto serverLoop;
                            };
                          };
                        } else {
                          assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                          with (index = ((m).mprevLogIndex) + (1)) {
                            if (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m).mentries)[1]).term))) {
                              with (
                                log20 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))], 
                                value28 = [cmd |-> LogPop]
                              ) {
                                if (((value28).cmd) = (LogConcat)) {
                                  with (plog28 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value28).entries)]) {
                                    if ((((m).mentries) # (<<>>)) /\ ((Len((log20)[i])) = ((m).mprevLogIndex))) {
                                      log := [log20 EXCEPT ![i] = ((log20)[i]) \o ((m).mentries)];
                                      with (value332 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                        if (((value332).cmd) = (LogConcat)) {
                                          plog := [plog28 EXCEPT ![i] = ((plog28)[i]) \o ((value332).entries)];
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result176 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result176)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result176)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value4128 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4128), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd1129 = (fd)[j]) {
                                                  await yielded_fd1129;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            goto serverLoop;
                                          };
                                        } else {
                                          if (((value332).cmd) = (LogPop)) {
                                            plog := [plog28 EXCEPT ![i] = SubSeq((plog28)[i], 1, (Len((plog28)[i])) - (1))];
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result177 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result177)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result177)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value4129 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4129), enabled |-> ((network)[j]).enabled]];
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd1130 = (fd)[j]) {
                                                    await yielded_fd1130;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              goto serverLoop;
                                            };
                                          } else {
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result178 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result178)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result178)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value4130 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4130), enabled |-> ((network)[j]).enabled]];
                                                    plog := plog28;
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd1131 = (fd)[j]) {
                                                    await yielded_fd1131;
                                                    plog := plog28;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              plog := plog28;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    } else {
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log20)[i])) >= (index))) /\ (((((log20)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result179 = ApplyLog((log20)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result179)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result179)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value4131 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4131), enabled |-> ((network)[j]).enabled]];
                                              plog := plog28;
                                              log := log20;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1132 = (fd)[j]) {
                                              await yielded_fd1132;
                                              plog := plog28;
                                              log := log20;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        plog := plog28;
                                        log := log20;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  if (((value28).cmd) = (LogPop)) {
                                    with (plog29 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]) {
                                      if ((((m).mentries) # (<<>>)) /\ ((Len((log20)[i])) = ((m).mprevLogIndex))) {
                                        log := [log20 EXCEPT ![i] = ((log20)[i]) \o ((m).mentries)];
                                        with (value333 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                          if (((value333).cmd) = (LogConcat)) {
                                            plog := [plog29 EXCEPT ![i] = ((plog29)[i]) \o ((value333).entries)];
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result180 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result180)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result180)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value4132 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4132), enabled |-> ((network)[j]).enabled]];
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd1133 = (fd)[j]) {
                                                    await yielded_fd1133;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              goto serverLoop;
                                            };
                                          } else {
                                            if (((value333).cmd) = (LogPop)) {
                                              plog := [plog29 EXCEPT ![i] = SubSeq((plog29)[i], 1, (Len((plog29)[i])) - (1))];
                                              if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                with (result181 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                  sm := [sm EXCEPT ![i] = (result181)[1]];
                                                  smDomain := [smDomain EXCEPT ![i] = (result181)[2]];
                                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                  either {
                                                    with (value4133 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                      await ((network)[j]).enabled;
                                                      await (Len(((network)[j]).queue)) < (BufferSize);
                                                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4133), enabled |-> ((network)[j]).enabled]];
                                                      goto serverLoop;
                                                    };
                                                  } or {
                                                    with (yielded_fd1134 = (fd)[j]) {
                                                      await yielded_fd1134;
                                                      goto serverLoop;
                                                    };
                                                  };
                                                };
                                              } else {
                                                goto serverLoop;
                                              };
                                            } else {
                                              if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                with (result182 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                  sm := [sm EXCEPT ![i] = (result182)[1]];
                                                  smDomain := [smDomain EXCEPT ![i] = (result182)[2]];
                                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                  either {
                                                    with (value4134 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                      await ((network)[j]).enabled;
                                                      await (Len(((network)[j]).queue)) < (BufferSize);
                                                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4134), enabled |-> ((network)[j]).enabled]];
                                                      plog := plog29;
                                                      goto serverLoop;
                                                    };
                                                  } or {
                                                    with (yielded_fd1135 = (fd)[j]) {
                                                      await yielded_fd1135;
                                                      plog := plog29;
                                                      goto serverLoop;
                                                    };
                                                  };
                                                };
                                              } else {
                                                plog := plog29;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      } else {
                                        if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log20)[i])) >= (index))) /\ (((((log20)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                          with (result183 = ApplyLog((log20)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result183)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result183)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value4135 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Len(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4135), enabled |-> ((network)[j]).enabled]];
                                                plog := plog29;
                                                log := log20;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1136 = (fd)[j]) {
                                                await yielded_fd1136;
                                                plog := plog29;
                                                log := log20;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          plog := plog29;
                                          log := log20;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    if ((((m).mentries) # (<<>>)) /\ ((Len((log20)[i])) = ((m).mprevLogIndex))) {
                                      log := [log20 EXCEPT ![i] = ((log20)[i]) \o ((m).mentries)];
                                      with (value334 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                        if (((value334).cmd) = (LogConcat)) {
                                          plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value334).entries)];
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result184 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result184)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result184)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value4136 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4136), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd1137 = (fd)[j]) {
                                                  await yielded_fd1137;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            goto serverLoop;
                                          };
                                        } else {
                                          if (((value334).cmd) = (LogPop)) {
                                            plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result185 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result185)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result185)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value4137 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4137), enabled |-> ((network)[j]).enabled]];
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd1138 = (fd)[j]) {
                                                    await yielded_fd1138;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              goto serverLoop;
                                            };
                                          } else {
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result186 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result186)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result186)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value4138 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4138), enabled |-> ((network)[j]).enabled]];
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd1139 = (fd)[j]) {
                                                    await yielded_fd1139;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    } else {
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log20)[i])) >= (index))) /\ (((((log20)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result187 = ApplyLog((log20)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result187)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result187)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value4139 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4139), enabled |-> ((network)[j]).enabled]];
                                              log := log20;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1140 = (fd)[j]) {
                                              await yielded_fd1140;
                                              log := log20;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := log20;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                };
                              };
                            } else {
                              if ((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m).mprevLogIndex))) {
                                log := [log EXCEPT ![i] = ((log)[i]) \o ((m).mentries)];
                                with (value335 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                  if (((value335).cmd) = (LogConcat)) {
                                    plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value335).entries)];
                                    if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                      with (result188 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result188)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result188)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value4140 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Len(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4140), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1141 = (fd)[j]) {
                                            await yielded_fd1141;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      goto serverLoop;
                                    };
                                  } else {
                                    if (((value335).cmd) = (LogPop)) {
                                      plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result189 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result189)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result189)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value4141 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4141), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1142 = (fd)[j]) {
                                              await yielded_fd1142;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        goto serverLoop;
                                      };
                                    } else {
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result190 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result190)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result190)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value4142 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4142), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1143 = (fd)[j]) {
                                              await yielded_fd1143;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                };
                              } else {
                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                  with (result191 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                    sm := [sm EXCEPT ![i] = (result191)[1]];
                                    smDomain := [smDomain EXCEPT ![i] = (result191)[2]];
                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                    either {
                                      with (value4143 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                        await ((network)[j]).enabled;
                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4143), enabled |-> ((network)[j]).enabled]];
                                        goto serverLoop;
                                      };
                                    } or {
                                      with (yielded_fd1144 = (fd)[j]) {
                                        await yielded_fd1144;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  goto serverLoop;
                                };
                              };
                            };
                          };
                        };
                      } else {
                        if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state5)[i]) = (Follower))) /\ (~ (logOK)))) {
                          either {
                            with (value113 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                              await ((network)[j]).enabled;
                              await (Len(((network)[j]).queue)) < (BufferSize);
                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value113), enabled |-> ((network)[j]).enabled]];
                              state := state5;
                              goto serverLoop;
                            };
                          } or {
                            with (yielded_fd09 = (fd)[j]) {
                              await yielded_fd09;
                              state := state5;
                              goto serverLoop;
                            };
                          };
                        } else {
                          assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state5)[i]) = (Follower))) /\ (logOK);
                          with (index = ((m).mprevLogIndex) + (1)) {
                            if (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m).mentries)[1]).term))) {
                              with (
                                log21 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))], 
                                value29 = [cmd |-> LogPop]
                              ) {
                                if (((value29).cmd) = (LogConcat)) {
                                  with (plog30 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value29).entries)]) {
                                    if ((((m).mentries) # (<<>>)) /\ ((Len((log21)[i])) = ((m).mprevLogIndex))) {
                                      log := [log21 EXCEPT ![i] = ((log21)[i]) \o ((m).mentries)];
                                      with (value336 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                        if (((value336).cmd) = (LogConcat)) {
                                          plog := [plog30 EXCEPT ![i] = ((plog30)[i]) \o ((value336).entries)];
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result192 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result192)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result192)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value4144 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4144), enabled |-> ((network)[j]).enabled]];
                                                  state := state5;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd1145 = (fd)[j]) {
                                                  await yielded_fd1145;
                                                  state := state5;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            state := state5;
                                            goto serverLoop;
                                          };
                                        } else {
                                          if (((value336).cmd) = (LogPop)) {
                                            plog := [plog30 EXCEPT ![i] = SubSeq((plog30)[i], 1, (Len((plog30)[i])) - (1))];
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result193 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result193)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result193)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value4145 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4145), enabled |-> ((network)[j]).enabled]];
                                                    state := state5;
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd1146 = (fd)[j]) {
                                                    await yielded_fd1146;
                                                    state := state5;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              state := state5;
                                              goto serverLoop;
                                            };
                                          } else {
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result194 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result194)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result194)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value4146 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4146), enabled |-> ((network)[j]).enabled]];
                                                    plog := plog30;
                                                    state := state5;
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd1147 = (fd)[j]) {
                                                    await yielded_fd1147;
                                                    plog := plog30;
                                                    state := state5;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              plog := plog30;
                                              state := state5;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    } else {
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log21)[i])) >= (index))) /\ (((((log21)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result195 = ApplyLog((log21)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result195)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result195)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value4147 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4147), enabled |-> ((network)[j]).enabled]];
                                              plog := plog30;
                                              log := log21;
                                              state := state5;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1148 = (fd)[j]) {
                                              await yielded_fd1148;
                                              plog := plog30;
                                              log := log21;
                                              state := state5;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        plog := plog30;
                                        log := log21;
                                        state := state5;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  if (((value29).cmd) = (LogPop)) {
                                    with (plog31 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]) {
                                      if ((((m).mentries) # (<<>>)) /\ ((Len((log21)[i])) = ((m).mprevLogIndex))) {
                                        log := [log21 EXCEPT ![i] = ((log21)[i]) \o ((m).mentries)];
                                        with (value337 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                          if (((value337).cmd) = (LogConcat)) {
                                            plog := [plog31 EXCEPT ![i] = ((plog31)[i]) \o ((value337).entries)];
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result196 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result196)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result196)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value4148 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4148), enabled |-> ((network)[j]).enabled]];
                                                    state := state5;
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd1149 = (fd)[j]) {
                                                    await yielded_fd1149;
                                                    state := state5;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              state := state5;
                                              goto serverLoop;
                                            };
                                          } else {
                                            if (((value337).cmd) = (LogPop)) {
                                              plog := [plog31 EXCEPT ![i] = SubSeq((plog31)[i], 1, (Len((plog31)[i])) - (1))];
                                              if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                with (result197 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                  sm := [sm EXCEPT ![i] = (result197)[1]];
                                                  smDomain := [smDomain EXCEPT ![i] = (result197)[2]];
                                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                  either {
                                                    with (value4149 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                      await ((network)[j]).enabled;
                                                      await (Len(((network)[j]).queue)) < (BufferSize);
                                                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4149), enabled |-> ((network)[j]).enabled]];
                                                      state := state5;
                                                      goto serverLoop;
                                                    };
                                                  } or {
                                                    with (yielded_fd1150 = (fd)[j]) {
                                                      await yielded_fd1150;
                                                      state := state5;
                                                      goto serverLoop;
                                                    };
                                                  };
                                                };
                                              } else {
                                                state := state5;
                                                goto serverLoop;
                                              };
                                            } else {
                                              if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                                with (result198 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                  sm := [sm EXCEPT ![i] = (result198)[1]];
                                                  smDomain := [smDomain EXCEPT ![i] = (result198)[2]];
                                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                  either {
                                                    with (value4150 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                      await ((network)[j]).enabled;
                                                      await (Len(((network)[j]).queue)) < (BufferSize);
                                                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4150), enabled |-> ((network)[j]).enabled]];
                                                      plog := plog31;
                                                      state := state5;
                                                      goto serverLoop;
                                                    };
                                                  } or {
                                                    with (yielded_fd1151 = (fd)[j]) {
                                                      await yielded_fd1151;
                                                      plog := plog31;
                                                      state := state5;
                                                      goto serverLoop;
                                                    };
                                                  };
                                                };
                                              } else {
                                                plog := plog31;
                                                state := state5;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      } else {
                                        if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log21)[i])) >= (index))) /\ (((((log21)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                          with (result199 = ApplyLog((log21)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result199)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result199)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value4151 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Len(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4151), enabled |-> ((network)[j]).enabled]];
                                                plog := plog31;
                                                log := log21;
                                                state := state5;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1152 = (fd)[j]) {
                                                await yielded_fd1152;
                                                plog := plog31;
                                                log := log21;
                                                state := state5;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          plog := plog31;
                                          log := log21;
                                          state := state5;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    if ((((m).mentries) # (<<>>)) /\ ((Len((log21)[i])) = ((m).mprevLogIndex))) {
                                      log := [log21 EXCEPT ![i] = ((log21)[i]) \o ((m).mentries)];
                                      with (value338 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                        if (((value338).cmd) = (LogConcat)) {
                                          plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value338).entries)];
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result200 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result200)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result200)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value4152 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4152), enabled |-> ((network)[j]).enabled]];
                                                  state := state5;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd1153 = (fd)[j]) {
                                                  await yielded_fd1153;
                                                  state := state5;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            state := state5;
                                            goto serverLoop;
                                          };
                                        } else {
                                          if (((value338).cmd) = (LogPop)) {
                                            plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result201 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result201)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result201)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value4153 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4153), enabled |-> ((network)[j]).enabled]];
                                                    state := state5;
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd1154 = (fd)[j]) {
                                                    await yielded_fd1154;
                                                    state := state5;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              state := state5;
                                              goto serverLoop;
                                            };
                                          } else {
                                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                              with (result202 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                                sm := [sm EXCEPT ![i] = (result202)[1]];
                                                smDomain := [smDomain EXCEPT ![i] = (result202)[2]];
                                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                                either {
                                                  with (value4154 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                    await ((network)[j]).enabled;
                                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4154), enabled |-> ((network)[j]).enabled]];
                                                    state := state5;
                                                    goto serverLoop;
                                                  };
                                                } or {
                                                  with (yielded_fd1155 = (fd)[j]) {
                                                    await yielded_fd1155;
                                                    state := state5;
                                                    goto serverLoop;
                                                  };
                                                };
                                              };
                                            } else {
                                              state := state5;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    } else {
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log21)[i])) >= (index))) /\ (((((log21)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result203 = ApplyLog((log21)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result203)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result203)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value4155 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4155), enabled |-> ((network)[j]).enabled]];
                                              log := log21;
                                              state := state5;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1156 = (fd)[j]) {
                                              await yielded_fd1156;
                                              log := log21;
                                              state := state5;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := log21;
                                        state := state5;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                };
                              };
                            } else {
                              if ((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m).mprevLogIndex))) {
                                log := [log EXCEPT ![i] = ((log)[i]) \o ((m).mentries)];
                                with (value339 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                  if (((value339).cmd) = (LogConcat)) {
                                    plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value339).entries)];
                                    if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                      with (result204 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result204)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result204)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value4156 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Len(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4156), enabled |-> ((network)[j]).enabled]];
                                            state := state5;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1157 = (fd)[j]) {
                                            await yielded_fd1157;
                                            state := state5;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      state := state5;
                                      goto serverLoop;
                                    };
                                  } else {
                                    if (((value339).cmd) = (LogPop)) {
                                      plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result205 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result205)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result205)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value4157 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4157), enabled |-> ((network)[j]).enabled]];
                                              state := state5;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1158 = (fd)[j]) {
                                              await yielded_fd1158;
                                              state := state5;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        state := state5;
                                        goto serverLoop;
                                      };
                                    } else {
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result206 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result206)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result206)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value4158 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4158), enabled |-> ((network)[j]).enabled]];
                                              state := state5;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1159 = (fd)[j]) {
                                              await yielded_fd1159;
                                              state := state5;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        state := state5;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                };
                              } else {
                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                  with (result207 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                    sm := [sm EXCEPT ![i] = (result207)[1]];
                                    smDomain := [smDomain EXCEPT ![i] = (result207)[2]];
                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                    either {
                                      with (value4159 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                        await ((network)[j]).enabled;
                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4159), enabled |-> ((network)[j]).enabled]];
                                        state := state5;
                                        goto serverLoop;
                                      };
                                    } or {
                                      with (yielded_fd1160 = (fd)[j]) {
                                        await yielded_fd1160;
                                        state := state5;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  state := state5;
                                  goto serverLoop;
                                };
                              };
                            };
                          };
                        };
                      };
                    };
                  };
                };
              } else {
                leader := [leader EXCEPT ![self] = (m).msource];
                with (
                  i = self, 
                  j = (m).msource, 
                  logOK = (((m).mprevLogIndex) = (0)) \/ (((((m).mprevLogIndex) > (0)) /\ (((m).mprevLogIndex) <= (Len((log)[i])))) /\ (((m).mprevLogTerm) = ((((log)[i])[(m).mprevLogIndex]).term)))
                ) {
                  assert ((m).mterm) <= ((currentTerm)[i]);
                  if ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Candidate))) {
                    state := [state EXCEPT ![i] = Follower];
                    if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                      either {
                        with (value114 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                          await ((network)[j]).enabled;
                          await (Len(((network)[j]).queue)) < (BufferSize);
                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value114), enabled |-> ((network)[j]).enabled]];
                          goto serverLoop;
                        };
                      } or {
                        with (yielded_fd010 = (fd)[j]) {
                          await yielded_fd010;
                          goto serverLoop;
                        };
                      };
                    } else {
                      assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                      with (index = ((m).mprevLogIndex) + (1)) {
                        if (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m).mentries)[1]).term))) {
                          with (
                            log22 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))], 
                            value210 = [cmd |-> LogPop]
                          ) {
                            if (((value210).cmd) = (LogConcat)) {
                              with (plog32 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value210).entries)]) {
                                if ((((m).mentries) # (<<>>)) /\ ((Len((log22)[i])) = ((m).mprevLogIndex))) {
                                  log := [log22 EXCEPT ![i] = ((log22)[i]) \o ((m).mentries)];
                                  with (value340 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                    if (((value340).cmd) = (LogConcat)) {
                                      plog := [plog32 EXCEPT ![i] = ((plog32)[i]) \o ((value340).entries)];
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result208 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result208)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result208)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value4160 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4160), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1161 = (fd)[j]) {
                                              await yielded_fd1161;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        goto serverLoop;
                                      };
                                    } else {
                                      if (((value340).cmd) = (LogPop)) {
                                        plog := [plog32 EXCEPT ![i] = SubSeq((plog32)[i], 1, (Len((plog32)[i])) - (1))];
                                        if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                          with (result209 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result209)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result209)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value4161 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Len(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4161), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1162 = (fd)[j]) {
                                                await yielded_fd1162;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          goto serverLoop;
                                        };
                                      } else {
                                        if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                          with (result210 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result210)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result210)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value4162 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Len(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4162), enabled |-> ((network)[j]).enabled]];
                                                plog := plog32;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1163 = (fd)[j]) {
                                                await yielded_fd1163;
                                                plog := plog32;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          plog := plog32;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log22)[i])) >= (index))) /\ (((((log22)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                    with (result211 = ApplyLog((log22)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result211)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result211)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value4163 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Len(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4163), enabled |-> ((network)[j]).enabled]];
                                          plog := plog32;
                                          log := log22;
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1164 = (fd)[j]) {
                                          await yielded_fd1164;
                                          plog := plog32;
                                          log := log22;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    plog := plog32;
                                    log := log22;
                                    goto serverLoop;
                                  };
                                };
                              };
                            } else {
                              if (((value210).cmd) = (LogPop)) {
                                with (plog33 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]) {
                                  if ((((m).mentries) # (<<>>)) /\ ((Len((log22)[i])) = ((m).mprevLogIndex))) {
                                    log := [log22 EXCEPT ![i] = ((log22)[i]) \o ((m).mentries)];
                                    with (value341 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                      if (((value341).cmd) = (LogConcat)) {
                                        plog := [plog33 EXCEPT ![i] = ((plog33)[i]) \o ((value341).entries)];
                                        if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                          with (result212 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result212)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result212)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value4164 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Len(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4164), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1165 = (fd)[j]) {
                                                await yielded_fd1165;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          goto serverLoop;
                                        };
                                      } else {
                                        if (((value341).cmd) = (LogPop)) {
                                          plog := [plog33 EXCEPT ![i] = SubSeq((plog33)[i], 1, (Len((plog33)[i])) - (1))];
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result213 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result213)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result213)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value4165 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4165), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd1166 = (fd)[j]) {
                                                  await yielded_fd1166;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            goto serverLoop;
                                          };
                                        } else {
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result214 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result214)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result214)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value4166 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4166), enabled |-> ((network)[j]).enabled]];
                                                  plog := plog33;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd1167 = (fd)[j]) {
                                                  await yielded_fd1167;
                                                  plog := plog33;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            plog := plog33;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  } else {
                                    if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log22)[i])) >= (index))) /\ (((((log22)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                      with (result215 = ApplyLog((log22)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result215)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result215)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value4167 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Len(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4167), enabled |-> ((network)[j]).enabled]];
                                            plog := plog33;
                                            log := log22;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1168 = (fd)[j]) {
                                            await yielded_fd1168;
                                            plog := plog33;
                                            log := log22;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      plog := plog33;
                                      log := log22;
                                      goto serverLoop;
                                    };
                                  };
                                };
                              } else {
                                if ((((m).mentries) # (<<>>)) /\ ((Len((log22)[i])) = ((m).mprevLogIndex))) {
                                  log := [log22 EXCEPT ![i] = ((log22)[i]) \o ((m).mentries)];
                                  with (value342 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                    if (((value342).cmd) = (LogConcat)) {
                                      plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value342).entries)];
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result216 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result216)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result216)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value4168 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4168), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1169 = (fd)[j]) {
                                              await yielded_fd1169;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        goto serverLoop;
                                      };
                                    } else {
                                      if (((value342).cmd) = (LogPop)) {
                                        plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                        if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                          with (result217 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result217)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result217)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value4169 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Len(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4169), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1170 = (fd)[j]) {
                                                await yielded_fd1170;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          goto serverLoop;
                                        };
                                      } else {
                                        if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                          with (result218 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result218)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result218)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value4170 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Len(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4170), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1171 = (fd)[j]) {
                                                await yielded_fd1171;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log22)[i])) >= (index))) /\ (((((log22)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                    with (result219 = ApplyLog((log22)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result219)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result219)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value4171 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Len(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4171), enabled |-> ((network)[j]).enabled]];
                                          log := log22;
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1172 = (fd)[j]) {
                                          await yielded_fd1172;
                                          log := log22;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    log := log22;
                                    goto serverLoop;
                                  };
                                };
                              };
                            };
                          };
                        } else {
                          if ((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m).mprevLogIndex))) {
                            log := [log EXCEPT ![i] = ((log)[i]) \o ((m).mentries)];
                            with (value343 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                              if (((value343).cmd) = (LogConcat)) {
                                plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value343).entries)];
                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                  with (result220 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                    sm := [sm EXCEPT ![i] = (result220)[1]];
                                    smDomain := [smDomain EXCEPT ![i] = (result220)[2]];
                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                    either {
                                      with (value4172 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                        await ((network)[j]).enabled;
                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4172), enabled |-> ((network)[j]).enabled]];
                                        goto serverLoop;
                                      };
                                    } or {
                                      with (yielded_fd1173 = (fd)[j]) {
                                        await yielded_fd1173;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  goto serverLoop;
                                };
                              } else {
                                if (((value343).cmd) = (LogPop)) {
                                  plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                  if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                    with (result221 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result221)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result221)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value4173 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Len(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4173), enabled |-> ((network)[j]).enabled]];
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1174 = (fd)[j]) {
                                          await yielded_fd1174;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    goto serverLoop;
                                  };
                                } else {
                                  if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                    with (result222 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result222)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result222)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value4174 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Len(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4174), enabled |-> ((network)[j]).enabled]];
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1175 = (fd)[j]) {
                                          await yielded_fd1175;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    goto serverLoop;
                                  };
                                };
                              };
                            };
                          } else {
                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                              with (result223 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                sm := [sm EXCEPT ![i] = (result223)[1]];
                                smDomain := [smDomain EXCEPT ![i] = (result223)[2]];
                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                either {
                                  with (value4175 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                    await ((network)[j]).enabled;
                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4175), enabled |-> ((network)[j]).enabled]];
                                    goto serverLoop;
                                  };
                                } or {
                                  with (yielded_fd1176 = (fd)[j]) {
                                    await yielded_fd1176;
                                    goto serverLoop;
                                  };
                                };
                              };
                            } else {
                              goto serverLoop;
                            };
                          };
                        };
                      };
                    };
                  } else {
                    if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                      either {
                        with (value115 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                          await ((network)[j]).enabled;
                          await (Len(((network)[j]).queue)) < (BufferSize);
                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value115), enabled |-> ((network)[j]).enabled]];
                          goto serverLoop;
                        };
                      } or {
                        with (yielded_fd011 = (fd)[j]) {
                          await yielded_fd011;
                          goto serverLoop;
                        };
                      };
                    } else {
                      assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                      with (index = ((m).mprevLogIndex) + (1)) {
                        if (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m).mentries)[1]).term))) {
                          with (
                            log23 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))], 
                            value211 = [cmd |-> LogPop]
                          ) {
                            if (((value211).cmd) = (LogConcat)) {
                              with (plog34 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value211).entries)]) {
                                if ((((m).mentries) # (<<>>)) /\ ((Len((log23)[i])) = ((m).mprevLogIndex))) {
                                  log := [log23 EXCEPT ![i] = ((log23)[i]) \o ((m).mentries)];
                                  with (value344 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                    if (((value344).cmd) = (LogConcat)) {
                                      plog := [plog34 EXCEPT ![i] = ((plog34)[i]) \o ((value344).entries)];
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result224 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result224)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result224)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value4176 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4176), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1177 = (fd)[j]) {
                                              await yielded_fd1177;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        goto serverLoop;
                                      };
                                    } else {
                                      if (((value344).cmd) = (LogPop)) {
                                        plog := [plog34 EXCEPT ![i] = SubSeq((plog34)[i], 1, (Len((plog34)[i])) - (1))];
                                        if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                          with (result225 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result225)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result225)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value4177 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Len(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4177), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1178 = (fd)[j]) {
                                                await yielded_fd1178;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          goto serverLoop;
                                        };
                                      } else {
                                        if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                          with (result226 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result226)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result226)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value4178 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Len(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4178), enabled |-> ((network)[j]).enabled]];
                                                plog := plog34;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1179 = (fd)[j]) {
                                                await yielded_fd1179;
                                                plog := plog34;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          plog := plog34;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log23)[i])) >= (index))) /\ (((((log23)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                    with (result227 = ApplyLog((log23)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result227)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result227)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value4179 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Len(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4179), enabled |-> ((network)[j]).enabled]];
                                          plog := plog34;
                                          log := log23;
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1180 = (fd)[j]) {
                                          await yielded_fd1180;
                                          plog := plog34;
                                          log := log23;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    plog := plog34;
                                    log := log23;
                                    goto serverLoop;
                                  };
                                };
                              };
                            } else {
                              if (((value211).cmd) = (LogPop)) {
                                with (plog35 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]) {
                                  if ((((m).mentries) # (<<>>)) /\ ((Len((log23)[i])) = ((m).mprevLogIndex))) {
                                    log := [log23 EXCEPT ![i] = ((log23)[i]) \o ((m).mentries)];
                                    with (value345 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                      if (((value345).cmd) = (LogConcat)) {
                                        plog := [plog35 EXCEPT ![i] = ((plog35)[i]) \o ((value345).entries)];
                                        if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                          with (result228 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result228)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result228)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value4180 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Len(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4180), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1181 = (fd)[j]) {
                                                await yielded_fd1181;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          goto serverLoop;
                                        };
                                      } else {
                                        if (((value345).cmd) = (LogPop)) {
                                          plog := [plog35 EXCEPT ![i] = SubSeq((plog35)[i], 1, (Len((plog35)[i])) - (1))];
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result229 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result229)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result229)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value4181 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4181), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd1182 = (fd)[j]) {
                                                  await yielded_fd1182;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            goto serverLoop;
                                          };
                                        } else {
                                          if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                            with (result230 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result230)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result230)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value4182 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Len(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4182), enabled |-> ((network)[j]).enabled]];
                                                  plog := plog35;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd1183 = (fd)[j]) {
                                                  await yielded_fd1183;
                                                  plog := plog35;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            plog := plog35;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  } else {
                                    if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log23)[i])) >= (index))) /\ (((((log23)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                      with (result231 = ApplyLog((log23)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result231)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result231)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value4183 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Len(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4183), enabled |-> ((network)[j]).enabled]];
                                            plog := plog35;
                                            log := log23;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1184 = (fd)[j]) {
                                            await yielded_fd1184;
                                            plog := plog35;
                                            log := log23;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      plog := plog35;
                                      log := log23;
                                      goto serverLoop;
                                    };
                                  };
                                };
                              } else {
                                if ((((m).mentries) # (<<>>)) /\ ((Len((log23)[i])) = ((m).mprevLogIndex))) {
                                  log := [log23 EXCEPT ![i] = ((log23)[i]) \o ((m).mentries)];
                                  with (value346 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                                    if (((value346).cmd) = (LogConcat)) {
                                      plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value346).entries)];
                                      if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                        with (result232 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result232)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result232)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value4184 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Len(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4184), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1185 = (fd)[j]) {
                                              await yielded_fd1185;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        goto serverLoop;
                                      };
                                    } else {
                                      if (((value346).cmd) = (LogPop)) {
                                        plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                        if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                          with (result233 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result233)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result233)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value4185 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Len(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4185), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1186 = (fd)[j]) {
                                                await yielded_fd1186;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          goto serverLoop;
                                        };
                                      } else {
                                        if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                          with (result234 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result234)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result234)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value4186 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Len(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4186), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1187 = (fd)[j]) {
                                                await yielded_fd1187;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log23)[i])) >= (index))) /\ (((((log23)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                    with (result235 = ApplyLog((log23)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result235)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result235)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value4187 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Len(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4187), enabled |-> ((network)[j]).enabled]];
                                          log := log23;
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1188 = (fd)[j]) {
                                          await yielded_fd1188;
                                          log := log23;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    log := log23;
                                    goto serverLoop;
                                  };
                                };
                              };
                            };
                          };
                        } else {
                          if ((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m).mprevLogIndex))) {
                            log := [log EXCEPT ![i] = ((log)[i]) \o ((m).mentries)];
                            with (value347 = [cmd |-> LogConcat, entries |-> (m).mentries]) {
                              if (((value347).cmd) = (LogConcat)) {
                                plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value347).entries)];
                                if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                  with (result236 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                    sm := [sm EXCEPT ![i] = (result236)[1]];
                                    smDomain := [smDomain EXCEPT ![i] = (result236)[2]];
                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                    either {
                                      with (value4188 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                        await ((network)[j]).enabled;
                                        await (Len(((network)[j]).queue)) < (BufferSize);
                                        network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4188), enabled |-> ((network)[j]).enabled]];
                                        goto serverLoop;
                                      };
                                    } or {
                                      with (yielded_fd1189 = (fd)[j]) {
                                        await yielded_fd1189;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  goto serverLoop;
                                };
                              } else {
                                if (((value347).cmd) = (LogPop)) {
                                  plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))];
                                  if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                    with (result237 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result237)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result237)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value4189 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Len(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4189), enabled |-> ((network)[j]).enabled]];
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1190 = (fd)[j]) {
                                          await yielded_fd1190;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    goto serverLoop;
                                  };
                                } else {
                                  if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                                    with (result238 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result238)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result238)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value4190 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Len(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4190), enabled |-> ((network)[j]).enabled]];
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1191 = (fd)[j]) {
                                          await yielded_fd1191;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    goto serverLoop;
                                  };
                                };
                              };
                            };
                          } else {
                            if ((((m).mentries) = (<<>>)) \/ (((((m).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m).mentries)[1]).term)))) {
                              with (result239 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                sm := [sm EXCEPT ![i] = (result239)[1]];
                                smDomain := [smDomain EXCEPT ![i] = (result239)[2]];
                                commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                either {
                                  with (value4191 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                    await ((network)[j]).enabled;
                                    await (Len(((network)[j]).queue)) < (BufferSize);
                                    network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4191), enabled |-> ((network)[j]).enabled]];
                                    goto serverLoop;
                                  };
                                } or {
                                  with (yielded_fd1192 = (fd)[j]) {
                                    await yielded_fd1192;
                                    goto serverLoop;
                                  };
                                };
                              };
                            } else {
                              goto serverLoop;
                            };
                          };
                        };
                      };
                    };
                  };
                };
              };
            } else {
              if (((m).mtype) = (AppendEntriesResponse)) {
                if (((m).mterm) > ((currentTerm)[self])) {
                  currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
                  state := [state EXCEPT ![self] = Follower];
                  votedFor := [votedFor EXCEPT ![self] = Nil];
                  leader := [leader EXCEPT ![self] = Nil];
                  if (((m).mterm) < ((currentTerm)[self])) {
                    skip;
                    goto serverLoop;
                  } else {
                    with (
                      i = self, 
                      j = (m).msource
                    ) {
                      assert ((m).mterm) = ((currentTerm)[i]);
                      if ((m).msuccess) {
                        nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m).mmatchIndex) + (1)]];
                        matchIndex := [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m).mmatchIndex]];
                        goto serverLoop;
                      } else {
                        nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]];
                        goto serverLoop;
                      };
                    };
                  };
                } else {
                  if (((m).mterm) < ((currentTerm)[self])) {
                    skip;
                    goto serverLoop;
                  } else {
                    with (
                      i = self, 
                      j = (m).msource
                    ) {
                      assert ((m).mterm) = ((currentTerm)[i]);
                      if ((m).msuccess) {
                        nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m).mmatchIndex) + (1)]];
                        matchIndex := [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m).mmatchIndex]];
                        goto serverLoop;
                      } else {
                        nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]];
                        goto serverLoop;
                      };
                    };
                  };
                };
              } else {
                if ((((m).mtype) = (ClientPutRequest)) \/ (((m).mtype) = (ClientGetRequest))) {
                  if (((state)[self]) = (Leader)) {
                    with (entry = [term |-> (currentTerm)[self], cmd |-> (m).mcmd, client |-> (m).msource]) {
                      log := [log EXCEPT ![self] = Append((log)[self], entry)];
                      with (value52 = [cmd |-> LogConcat, entries |-> <<entry>>]) {
                        if (((value52).cmd) = (LogConcat)) {
                          plog := [plog EXCEPT ![self] = ((plog)[self]) \o ((value52).entries)];
                          goto serverLoop;
                        } else {
                          if (((value52).cmd) = (LogPop)) {
                            plog := [plog EXCEPT ![self] = SubSeq((plog)[self], 1, (Len((plog)[self])) - (1))];
                            goto serverLoop;
                          } else {
                            goto serverLoop;
                          };
                        };
                      };
                    };
                  } else {
                    with (
                      i = self, 
                      j = (m).msource, 
                      respType = IF (((m).mcmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse, 
                      value62 = [mtype |-> respType, msuccess |-> FALSE, mresponse |-> [idx |-> ((m).mcmd).idx, key |-> ((m).mcmd).key], mleaderHint |-> (leader)[i], msource |-> i, mdest |-> j]
                    ) {
                      await ((network)[j]).enabled;
                      await (Len(((network)[j]).queue)) < (BufferSize);
                      network := [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value62), enabled |-> ((network)[j]).enabled]];
                      goto serverLoop;
                    };
                  };
                } else {
                  goto serverLoop;
                };
              };
            };
          };
        };
      };
  }
  
  fair process (s1 \in ServerRequestVoteSet)
    variables idx0 = 1; srvId0 = (requestVoteSrvId)[self];
  {
    serverRequestVoteLoop:
      if (TRUE) {
        if (ExploreFail) {
          with (yielded_network20 = ((network)[srvId0]).enabled) {
            if (~ (yielded_network20)) {
              await FALSE;
              await ((state)[srvId0]) \in ({Follower, Candidate});
              with (yielded_network30 = Len(((network)[srvId0]).queue)) {
                await ((yielded_network30) = (0)) /\ (leaderTimeout);
                with (i3 = srvId0) {
                  state := [state EXCEPT ![i3] = Candidate];
                  currentTerm := [currentTerm EXCEPT ![i3] = ((currentTerm)[i3]) + (1)];
                  votedFor := [votedFor EXCEPT ![i3] = i3];
                  votesResponded := [votesResponded EXCEPT ![i3] = {i3}];
                  votesGranted := [votesGranted EXCEPT ![i3] = {i3}];
                  leader := [leader EXCEPT ![i3] = Nil];
                  if (Debug) {
                    print <<"ServerTimeout", i3, (currentTerm)[i3]>>;
                    idx0 := 1;
                    goto requestVoteLoop;
                  } else {
                    idx0 := 1;
                    goto requestVoteLoop;
                  };
                };
              };
            } else {
              await ((state)[srvId0]) \in ({Follower, Candidate});
              with (yielded_network31 = Len(((network)[srvId0]).queue)) {
                await ((yielded_network31) = (0)) /\ (leaderTimeout);
                with (i4 = srvId0) {
                  state := [state EXCEPT ![i4] = Candidate];
                  currentTerm := [currentTerm EXCEPT ![i4] = ((currentTerm)[i4]) + (1)];
                  votedFor := [votedFor EXCEPT ![i4] = i4];
                  votesResponded := [votesResponded EXCEPT ![i4] = {i4}];
                  votesGranted := [votesGranted EXCEPT ![i4] = {i4}];
                  leader := [leader EXCEPT ![i4] = Nil];
                  if (Debug) {
                    print <<"ServerTimeout", i4, (currentTerm)[i4]>>;
                    idx0 := 1;
                    goto requestVoteLoop;
                  } else {
                    idx0 := 1;
                    goto requestVoteLoop;
                  };
                };
              };
            };
          };
        } else {
          await ((state)[srvId0]) \in ({Follower, Candidate});
          with (yielded_network32 = Len(((network)[srvId0]).queue)) {
            await ((yielded_network32) = (0)) /\ (leaderTimeout);
            with (i5 = srvId0) {
              state := [state EXCEPT ![i5] = Candidate];
              currentTerm := [currentTerm EXCEPT ![i5] = ((currentTerm)[i5]) + (1)];
              votedFor := [votedFor EXCEPT ![i5] = i5];
              votesResponded := [votesResponded EXCEPT ![i5] = {i5}];
              votesGranted := [votesGranted EXCEPT ![i5] = {i5}];
              leader := [leader EXCEPT ![i5] = Nil];
              if (Debug) {
                print <<"ServerTimeout", i5, (currentTerm)[i5]>>;
                idx0 := 1;
                goto requestVoteLoop;
              } else {
                idx0 := 1;
                goto requestVoteLoop;
              };
            };
          };
        };
      } else {
        goto Done;
      };
    requestVoteLoop:
      if ((idx0) <= (NumServers)) {
        if (ExploreFail) {
          with (yielded_network40 = ((network)[srvId0]).enabled) {
            if (~ (yielded_network40)) {
              await FALSE;
              if ((idx0) # (srvId0)) {
                either {
                  with (value70 = [mtype |-> RequestVoteRequest, mterm |-> (currentTerm)[srvId0], mlastLogTerm |-> LastTerm((log)[srvId0]), mlastLogIndex |-> Len((log)[srvId0]), msource |-> srvId0, mdest |-> idx0]) {
                    await ((network)[idx0]).enabled;
                    await (Len(((network)[idx0]).queue)) < (BufferSize);
                    network := [network EXCEPT ![idx0] = [queue |-> Append(((network)[idx0]).queue, value70), enabled |-> ((network)[idx0]).enabled]];
                    idx0 := (idx0) + (1);
                    goto requestVoteLoop;
                  };
                } or {
                  with (yielded_fd28 = (fd)[idx0]) {
                    await yielded_fd28;
                    idx0 := (idx0) + (1);
                    goto requestVoteLoop;
                  };
                };
              } else {
                idx0 := (idx0) + (1);
                goto requestVoteLoop;
              };
            } else {
              if ((idx0) # (srvId0)) {
                either {
                  with (value71 = [mtype |-> RequestVoteRequest, mterm |-> (currentTerm)[srvId0], mlastLogTerm |-> LastTerm((log)[srvId0]), mlastLogIndex |-> Len((log)[srvId0]), msource |-> srvId0, mdest |-> idx0]) {
                    await ((network)[idx0]).enabled;
                    await (Len(((network)[idx0]).queue)) < (BufferSize);
                    network := [network EXCEPT ![idx0] = [queue |-> Append(((network)[idx0]).queue, value71), enabled |-> ((network)[idx0]).enabled]];
                    idx0 := (idx0) + (1);
                    goto requestVoteLoop;
                  };
                } or {
                  with (yielded_fd29 = (fd)[idx0]) {
                    await yielded_fd29;
                    idx0 := (idx0) + (1);
                    goto requestVoteLoop;
                  };
                };
              } else {
                idx0 := (idx0) + (1);
                goto requestVoteLoop;
              };
            };
          };
        } else {
          if ((idx0) # (srvId0)) {
            either {
              with (value72 = [mtype |-> RequestVoteRequest, mterm |-> (currentTerm)[srvId0], mlastLogTerm |-> LastTerm((log)[srvId0]), mlastLogIndex |-> Len((log)[srvId0]), msource |-> srvId0, mdest |-> idx0]) {
                await ((network)[idx0]).enabled;
                await (Len(((network)[idx0]).queue)) < (BufferSize);
                network := [network EXCEPT ![idx0] = [queue |-> Append(((network)[idx0]).queue, value72), enabled |-> ((network)[idx0]).enabled]];
                idx0 := (idx0) + (1);
                goto requestVoteLoop;
              };
            } or {
              with (yielded_fd210 = (fd)[idx0]) {
                await yielded_fd210;
                idx0 := (idx0) + (1);
                goto requestVoteLoop;
              };
            };
          } else {
            idx0 := (idx0) + (1);
            goto requestVoteLoop;
          };
        };
      } else {
        goto serverRequestVoteLoop;
      };
  }
  
  fair process (s2 \in ServerAppendEntriesSet)
    variables idx1; srvId1 = (appendEntriesSrvId)[self];
  {
    serverAppendEntriesLoop:
      if (appendEntriesCh) {
        if (ExploreFail) {
          with (yielded_network50 = ((network)[srvId1]).enabled) {
            if (~ (yielded_network50)) {
              await FALSE;
              await ((state)[srvId1]) = (Leader);
              idx1 := 1;
              goto appendEntriesLoop;
            } else {
              await ((state)[srvId1]) = (Leader);
              idx1 := 1;
              goto appendEntriesLoop;
            };
          };
        } else {
          await ((state)[srvId1]) = (Leader);
          idx1 := 1;
          goto appendEntriesLoop;
        };
      } else {
        goto Done;
      };
    appendEntriesLoop:
      if ((((state)[srvId1]) = (Leader)) /\ ((idx1) <= (NumServers))) {
        if (ExploreFail) {
          with (yielded_network60 = ((network)[srvId1]).enabled) {
            if (~ (yielded_network60)) {
              await FALSE;
              if ((idx1) # (srvId1)) {
                with (
                  prevLogIndex3 = (((nextIndex)[srvId1])[idx1]) - (1), 
                  prevLogTerm3 = IF (prevLogIndex3) > (0) THEN (((log)[srvId1])[prevLogIndex3]).term ELSE 0, 
                  lastEntry3 = Min({Len((log)[srvId1]), ((nextIndex)[srvId1])[idx1]}), 
                  entries3 = SubSeq((log)[srvId1], ((nextIndex)[srvId1])[idx1], lastEntry3)
                ) {
                  either {
                    with (value80 = [mtype |-> AppendEntriesRequest, mterm |-> (currentTerm)[srvId1], mprevLogIndex |-> prevLogIndex3, mprevLogTerm |-> prevLogTerm3, mentries |-> entries3, mcommitIndex |-> Min({(commitIndex)[srvId1], lastEntry3}), msource |-> srvId1, mdest |-> idx1]) {
                      await ((network)[idx1]).enabled;
                      await (Len(((network)[idx1]).queue)) < (BufferSize);
                      network := [network EXCEPT ![idx1] = [queue |-> Append(((network)[idx1]).queue, value80), enabled |-> ((network)[idx1]).enabled]];
                      idx1 := (idx1) + (1);
                      goto appendEntriesLoop;
                    };
                  } or {
                    with (yielded_fd30 = (fd)[idx1]) {
                      await yielded_fd30;
                      idx1 := (idx1) + (1);
                      goto appendEntriesLoop;
                    };
                  };
                };
              } else {
                idx1 := (idx1) + (1);
                goto appendEntriesLoop;
              };
            } else {
              if ((idx1) # (srvId1)) {
                with (
                  prevLogIndex4 = (((nextIndex)[srvId1])[idx1]) - (1), 
                  prevLogTerm4 = IF (prevLogIndex4) > (0) THEN (((log)[srvId1])[prevLogIndex4]).term ELSE 0, 
                  lastEntry4 = Min({Len((log)[srvId1]), ((nextIndex)[srvId1])[idx1]}), 
                  entries4 = SubSeq((log)[srvId1], ((nextIndex)[srvId1])[idx1], lastEntry4)
                ) {
                  either {
                    with (value81 = [mtype |-> AppendEntriesRequest, mterm |-> (currentTerm)[srvId1], mprevLogIndex |-> prevLogIndex4, mprevLogTerm |-> prevLogTerm4, mentries |-> entries4, mcommitIndex |-> Min({(commitIndex)[srvId1], lastEntry4}), msource |-> srvId1, mdest |-> idx1]) {
                      await ((network)[idx1]).enabled;
                      await (Len(((network)[idx1]).queue)) < (BufferSize);
                      network := [network EXCEPT ![idx1] = [queue |-> Append(((network)[idx1]).queue, value81), enabled |-> ((network)[idx1]).enabled]];
                      idx1 := (idx1) + (1);
                      goto appendEntriesLoop;
                    };
                  } or {
                    with (yielded_fd31 = (fd)[idx1]) {
                      await yielded_fd31;
                      idx1 := (idx1) + (1);
                      goto appendEntriesLoop;
                    };
                  };
                };
              } else {
                idx1 := (idx1) + (1);
                goto appendEntriesLoop;
              };
            };
          };
        } else {
          if ((idx1) # (srvId1)) {
            with (
              prevLogIndex5 = (((nextIndex)[srvId1])[idx1]) - (1), 
              prevLogTerm5 = IF (prevLogIndex5) > (0) THEN (((log)[srvId1])[prevLogIndex5]).term ELSE 0, 
              lastEntry5 = Min({Len((log)[srvId1]), ((nextIndex)[srvId1])[idx1]}), 
              entries5 = SubSeq((log)[srvId1], ((nextIndex)[srvId1])[idx1], lastEntry5)
            ) {
              either {
                with (value82 = [mtype |-> AppendEntriesRequest, mterm |-> (currentTerm)[srvId1], mprevLogIndex |-> prevLogIndex5, mprevLogTerm |-> prevLogTerm5, mentries |-> entries5, mcommitIndex |-> Min({(commitIndex)[srvId1], lastEntry5}), msource |-> srvId1, mdest |-> idx1]) {
                  await ((network)[idx1]).enabled;
                  await (Len(((network)[idx1]).queue)) < (BufferSize);
                  network := [network EXCEPT ![idx1] = [queue |-> Append(((network)[idx1]).queue, value82), enabled |-> ((network)[idx1]).enabled]];
                  idx1 := (idx1) + (1);
                  goto appendEntriesLoop;
                };
              } or {
                with (yielded_fd32 = (fd)[idx1]) {
                  await yielded_fd32;
                  idx1 := (idx1) + (1);
                  goto appendEntriesLoop;
                };
              };
            };
          } else {
            idx1 := (idx1) + (1);
            goto appendEntriesLoop;
          };
        };
      } else {
        goto serverAppendEntriesLoop;
      };
  }
  
  fair process (s3 \in ServerAdvanceCommitIndexSet)
    variables newCommitIndex = 0; srvId2 = (advanceCommitIndexSrvId)[self];
  {
    serverAdvanceCommitIndexLoop:
      if (TRUE) {
        if (ExploreFail) {
          with (yielded_network70 = ((network)[srvId2]).enabled) {
            if (~ (yielded_network70)) {
              await FALSE;
              await ((state)[srvId2]) = (Leader);
              with (
                i = srvId2, 
                agreeIndexes = FindAgreeIndices((log)[i], i, (matchIndex)[i]), 
                nCommitIndex = IF ((agreeIndexes) # ({})) /\ (((((log)[i])[Max(agreeIndexes)]).term) = ((currentTerm)[i])) THEN Max(agreeIndexes) ELSE (commitIndex)[i]
              ) {
                newCommitIndex := nCommitIndex;
                assert (newCommitIndex) >= ((commitIndex)[i]);
                goto applyLoop;
              };
            } else {
              await ((state)[srvId2]) = (Leader);
              with (
                i = srvId2, 
                agreeIndexes = FindAgreeIndices((log)[i], i, (matchIndex)[i]), 
                nCommitIndex = IF ((agreeIndexes) # ({})) /\ (((((log)[i])[Max(agreeIndexes)]).term) = ((currentTerm)[i])) THEN Max(agreeIndexes) ELSE (commitIndex)[i]
              ) {
                newCommitIndex := nCommitIndex;
                assert (newCommitIndex) >= ((commitIndex)[i]);
                goto applyLoop;
              };
            };
          };
        } else {
          await ((state)[srvId2]) = (Leader);
          with (
            i = srvId2, 
            agreeIndexes = FindAgreeIndices((log)[i], i, (matchIndex)[i]), 
            nCommitIndex = IF ((agreeIndexes) # ({})) /\ (((((log)[i])[Max(agreeIndexes)]).term) = ((currentTerm)[i])) THEN Max(agreeIndexes) ELSE (commitIndex)[i]
          ) {
            newCommitIndex := nCommitIndex;
            assert (newCommitIndex) >= ((commitIndex)[i]);
            goto applyLoop;
          };
        };
      } else {
        goto Done;
      };
    applyLoop:
      if (((commitIndex)[srvId2]) < (newCommitIndex)) {
        if (ExploreFail) {
          with (yielded_network80 = ((network)[srvId2]).enabled) {
            if (~ (yielded_network80)) {
              await FALSE;
              commitIndex := [commitIndex EXCEPT ![srvId2] = ((commitIndex)[srvId2]) + (1)];
              with (
                i = srvId2, 
                k = (commitIndex)[i], 
                entry = ((log)[i])[k], 
                cmd = (entry).cmd, 
                respType = IF ((cmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse
              ) {
                if (((cmd).type) = (Put)) {
                  sm := [sm EXCEPT ![i] = ((sm)[i]) @@ (((cmd).key) :> ((cmd).value))];
                  smDomain := [smDomain EXCEPT ![i] = ((smDomain)[i]) \union ({(cmd).key})];
                  with (
                    reqOk = ((cmd).key) \in ((smDomain)[i]), 
                    value90 = [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm)[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client]
                  ) {
                    await ((network)[(entry).client]).enabled;
                    await (Len(((network)[(entry).client]).queue)) < (BufferSize);
                    network := [network EXCEPT ![(entry).client] = [queue |-> Append(((network)[(entry).client]).queue, value90), enabled |-> ((network)[(entry).client]).enabled]];
                    goto applyLoop;
                  };
                } else {
                  with (
                    reqOk = ((cmd).key) \in ((smDomain)[i]), 
                    value91 = [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm)[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client]
                  ) {
                    await ((network)[(entry).client]).enabled;
                    await (Len(((network)[(entry).client]).queue)) < (BufferSize);
                    network := [network EXCEPT ![(entry).client] = [queue |-> Append(((network)[(entry).client]).queue, value91), enabled |-> ((network)[(entry).client]).enabled]];
                    goto applyLoop;
                  };
                };
              };
            } else {
              commitIndex := [commitIndex EXCEPT ![srvId2] = ((commitIndex)[srvId2]) + (1)];
              with (
                i = srvId2, 
                k = (commitIndex)[i], 
                entry = ((log)[i])[k], 
                cmd = (entry).cmd, 
                respType = IF ((cmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse
              ) {
                if (((cmd).type) = (Put)) {
                  sm := [sm EXCEPT ![i] = ((sm)[i]) @@ (((cmd).key) :> ((cmd).value))];
                  smDomain := [smDomain EXCEPT ![i] = ((smDomain)[i]) \union ({(cmd).key})];
                  with (
                    reqOk = ((cmd).key) \in ((smDomain)[i]), 
                    value92 = [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm)[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client]
                  ) {
                    await ((network)[(entry).client]).enabled;
                    await (Len(((network)[(entry).client]).queue)) < (BufferSize);
                    network := [network EXCEPT ![(entry).client] = [queue |-> Append(((network)[(entry).client]).queue, value92), enabled |-> ((network)[(entry).client]).enabled]];
                    goto applyLoop;
                  };
                } else {
                  with (
                    reqOk = ((cmd).key) \in ((smDomain)[i]), 
                    value93 = [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm)[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client]
                  ) {
                    await ((network)[(entry).client]).enabled;
                    await (Len(((network)[(entry).client]).queue)) < (BufferSize);
                    network := [network EXCEPT ![(entry).client] = [queue |-> Append(((network)[(entry).client]).queue, value93), enabled |-> ((network)[(entry).client]).enabled]];
                    goto applyLoop;
                  };
                };
              };
            };
          };
        } else {
          commitIndex := [commitIndex EXCEPT ![srvId2] = ((commitIndex)[srvId2]) + (1)];
          with (
            i = srvId2, 
            k = (commitIndex)[i], 
            entry = ((log)[i])[k], 
            cmd = (entry).cmd, 
            respType = IF ((cmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse
          ) {
            if (((cmd).type) = (Put)) {
              sm := [sm EXCEPT ![i] = ((sm)[i]) @@ (((cmd).key) :> ((cmd).value))];
              smDomain := [smDomain EXCEPT ![i] = ((smDomain)[i]) \union ({(cmd).key})];
              with (
                reqOk = ((cmd).key) \in ((smDomain)[i]), 
                value94 = [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm)[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client]
              ) {
                await ((network)[(entry).client]).enabled;
                await (Len(((network)[(entry).client]).queue)) < (BufferSize);
                network := [network EXCEPT ![(entry).client] = [queue |-> Append(((network)[(entry).client]).queue, value94), enabled |-> ((network)[(entry).client]).enabled]];
                goto applyLoop;
              };
            } else {
              with (
                reqOk = ((cmd).key) \in ((smDomain)[i]), 
                value95 = [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm)[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client]
              ) {
                await ((network)[(entry).client]).enabled;
                await (Len(((network)[(entry).client]).queue)) < (BufferSize);
                network := [network EXCEPT ![(entry).client] = [queue |-> Append(((network)[(entry).client]).queue, value95), enabled |-> ((network)[(entry).client]).enabled]];
                goto applyLoop;
              };
            };
          };
        };
      } else {
        goto serverAdvanceCommitIndexLoop;
      };
  }
  
  fair process (s4 \in ServerBecomeLeaderSet)
    variables srvId3 = (becomeLeaderSrvId)[self];
  {
    serverBecomeLeaderLoop:
      if (TRUE) {
        if (ExploreFail) {
          with (yielded_network90 = ((network)[srvId3]).enabled) {
            if (~ (yielded_network90)) {
              await FALSE;
              await (((state)[srvId3]) = (Candidate)) /\ (isQuorum((votesGranted)[srvId3]));
              with (i = srvId3) {
                state := [state EXCEPT ![i] = Leader];
                nextIndex := [nextIndex EXCEPT ![i] = [j \in ServerSet |-> (Len((log)[i])) + (1)]];
                matchIndex := [matchIndex EXCEPT ![i] = [j \in ServerSet |-> 0]];
                leader := [leader EXCEPT ![i] = i];
                appendEntriesCh := TRUE;
                if (Debug) {
                  print <<"BecomeLeader", i, (currentTerm)[i]>>;
                  goto serverBecomeLeaderLoop;
                } else {
                  goto serverBecomeLeaderLoop;
                };
              };
            } else {
              await (((state)[srvId3]) = (Candidate)) /\ (isQuorum((votesGranted)[srvId3]));
              with (i = srvId3) {
                state := [state EXCEPT ![i] = Leader];
                nextIndex := [nextIndex EXCEPT ![i] = [j \in ServerSet |-> (Len((log)[i])) + (1)]];
                matchIndex := [matchIndex EXCEPT ![i] = [j \in ServerSet |-> 0]];
                leader := [leader EXCEPT ![i] = i];
                appendEntriesCh := TRUE;
                if (Debug) {
                  print <<"BecomeLeader", i, (currentTerm)[i]>>;
                  goto serverBecomeLeaderLoop;
                } else {
                  goto serverBecomeLeaderLoop;
                };
              };
            };
          };
        } else {
          await (((state)[srvId3]) = (Candidate)) /\ (isQuorum((votesGranted)[srvId3]));
          with (i = srvId3) {
            state := [state EXCEPT ![i] = Leader];
            nextIndex := [nextIndex EXCEPT ![i] = [j \in ServerSet |-> (Len((log)[i])) + (1)]];
            matchIndex := [matchIndex EXCEPT ![i] = [j \in ServerSet |-> 0]];
            leader := [leader EXCEPT ![i] = i];
            appendEntriesCh := TRUE;
            if (Debug) {
              print <<"BecomeLeader", i, (currentTerm)[i]>>;
              goto serverBecomeLeaderLoop;
            } else {
              goto serverBecomeLeaderLoop;
            };
          };
        };
      } else {
        goto Done;
      };
  }
  
  fair process (client \in ClientSet)
    variables leader0 = Nil; req; resp; reqIdx = 0; timeout = FALSE;
  {
    clientLoop:
      if (TRUE) {
        await (Len(reqCh)) > (0);
        with (res00 = Head(reqCh)) {
          reqCh := Tail(reqCh);
          with (yielded_reqCh0 = res00) {
            req := yielded_reqCh0;
            reqIdx := (reqIdx) + (1);
            goto sndReq;
          };
        };
      } else {
        goto Done;
      };
    sndReq:
      if ((leader0) = (Nil)) {
        with (srv1 \in ServerSet) {
          leader0 := srv1;
          if (((req).type) = (Put)) {
            either {
              with (value100 = [mtype |-> ClientPutRequest, mcmd |-> [idx |-> reqIdx, type |-> Put, key |-> (req).key, value |-> (req).value], msource |-> self, mdest |-> leader0]) {
                await ((network)[leader0]).enabled;
                await (Len(((network)[leader0]).queue)) < (BufferSize);
                network := [network EXCEPT ![leader0] = [queue |-> Append(((network)[leader0]).queue, value100), enabled |-> ((network)[leader0]).enabled]];
                if (Debug) {
                  print <<"ClientSndReq", self, leader0, reqIdx, req>>;
                  goto rcvResp;
                } else {
                  goto rcvResp;
                };
              };
            } or {
              with (yielded_fd40 = (fd)[leader0]) {
                await yielded_fd40;
                if (Debug) {
                  print <<"ClientSndReq", self, leader0, reqIdx, req>>;
                  goto rcvResp;
                } else {
                  goto rcvResp;
                };
              };
            };
          } else {
            if (((req).type) = (Get)) {
              either {
                with (value116 = [mtype |-> ClientGetRequest, mcmd |-> [idx |-> reqIdx, type |-> Get, key |-> (req).key], msource |-> self, mdest |-> leader0]) {
                  await ((network)[leader0]).enabled;
                  await (Len(((network)[leader0]).queue)) < (BufferSize);
                  network := [network EXCEPT ![leader0] = [queue |-> Append(((network)[leader0]).queue, value116), enabled |-> ((network)[leader0]).enabled]];
                  if (Debug) {
                    print <<"ClientSndReq", self, leader0, reqIdx, req>>;
                    goto rcvResp;
                  } else {
                    goto rcvResp;
                  };
                };
              } or {
                with (yielded_fd50 = (fd)[leader0]) {
                  await yielded_fd50;
                  if (Debug) {
                    print <<"ClientSndReq", self, leader0, reqIdx, req>>;
                    goto rcvResp;
                  } else {
                    goto rcvResp;
                  };
                };
              };
            } else {
              if (Debug) {
                print <<"ClientSndReq", self, leader0, reqIdx, req>>;
                goto rcvResp;
              } else {
                goto rcvResp;
              };
            };
          };
        };
      } else {
        if (((req).type) = (Put)) {
          either {
            with (value101 = [mtype |-> ClientPutRequest, mcmd |-> [idx |-> reqIdx, type |-> Put, key |-> (req).key, value |-> (req).value], msource |-> self, mdest |-> leader0]) {
              await ((network)[leader0]).enabled;
              await (Len(((network)[leader0]).queue)) < (BufferSize);
              network := [network EXCEPT ![leader0] = [queue |-> Append(((network)[leader0]).queue, value101), enabled |-> ((network)[leader0]).enabled]];
              if (Debug) {
                print <<"ClientSndReq", self, leader0, reqIdx, req>>;
                goto rcvResp;
              } else {
                goto rcvResp;
              };
            };
          } or {
            with (yielded_fd41 = (fd)[leader0]) {
              await yielded_fd41;
              if (Debug) {
                print <<"ClientSndReq", self, leader0, reqIdx, req>>;
                goto rcvResp;
              } else {
                goto rcvResp;
              };
            };
          };
        } else {
          if (((req).type) = (Get)) {
            either {
              with (value117 = [mtype |-> ClientGetRequest, mcmd |-> [idx |-> reqIdx, type |-> Get, key |-> (req).key], msource |-> self, mdest |-> leader0]) {
                await ((network)[leader0]).enabled;
                await (Len(((network)[leader0]).queue)) < (BufferSize);
                network := [network EXCEPT ![leader0] = [queue |-> Append(((network)[leader0]).queue, value117), enabled |-> ((network)[leader0]).enabled]];
                if (Debug) {
                  print <<"ClientSndReq", self, leader0, reqIdx, req>>;
                  goto rcvResp;
                } else {
                  goto rcvResp;
                };
              };
            } or {
              with (yielded_fd51 = (fd)[leader0]) {
                await yielded_fd51;
                if (Debug) {
                  print <<"ClientSndReq", self, leader0, reqIdx, req>>;
                  goto rcvResp;
                } else {
                  goto rcvResp;
                };
              };
            };
          } else {
            if (Debug) {
              print <<"ClientSndReq", self, leader0, reqIdx, req>>;
              goto rcvResp;
            } else {
              goto rcvResp;
            };
          };
        };
      };
    rcvResp:
      either {
        assert ((network)[self]).enabled;
        await (Len(((network)[self]).queue)) > (0);
        with (readMsg10 = Head(((network)[self]).queue)) {
          network := [network EXCEPT ![self] = [queue |-> Tail(((network)[self]).queue), enabled |-> ((network)[self]).enabled]];
          with (yielded_network100 = readMsg10) {
            resp := yielded_network100;
            if (Debug) {
              print <<"ClientRcvResp", self, leader0, reqIdx, resp>>;
              assert ((resp).mdest) = (self);
              if ((((resp).mresponse).idx) # (reqIdx)) {
                goto rcvResp;
              } else {
                leader0 := (resp).mleaderHint;
                assert ((((req).type) = (Get)) => (((resp).mtype) = (ClientGetResponse))) /\ ((((req).type) = (Put)) => (((resp).mtype) = (ClientPutResponse)));
                if (~ ((resp).msuccess)) {
                  goto sndReq;
                } else {
                  assert ((((resp).mresponse).idx) = (reqIdx)) /\ ((((resp).mresponse).key) = ((req).key));
                  respCh := resp;
                  goto clientLoop;
                };
              };
            } else {
              assert ((resp).mdest) = (self);
              if ((((resp).mresponse).idx) # (reqIdx)) {
                goto rcvResp;
              } else {
                leader0 := (resp).mleaderHint;
                assert ((((req).type) = (Get)) => (((resp).mtype) = (ClientGetResponse))) /\ ((((req).type) = (Put)) => (((resp).mtype) = (ClientPutResponse)));
                if (~ ((resp).msuccess)) {
                  goto sndReq;
                } else {
                  assert ((((resp).mresponse).idx) = (reqIdx)) /\ ((((resp).mresponse).key) = ((req).key));
                  respCh := resp;
                  goto clientLoop;
                };
              };
            };
          };
        };
      } or {
        with (
          yielded_fd60 = (fd)[leader0], 
          yielded_network110 = Len(((network)[self]).queue)
        ) {
          await ((yielded_fd60) /\ ((yielded_network110) = (0))) \/ (timeout);
          leader0 := Nil;
          goto sndReq;
        };
      };
  }
  
  fair process (crasher \in ServerCrasherSet)
    variables srvId4 = (crasherSrvId)[self];
  {
    serverCrash:
      with (value120 = FALSE) {
        network := [network EXCEPT ![srvId4] = [queue |-> ((network)[srvId4]).queue, enabled |-> value120]];
        goto fdUpdate;
      };
    fdUpdate:
      with (value130 = TRUE) {
        fd := [fd EXCEPT ![srvId4] = value130];
        goto block;
      };
    block:
      await FALSE;
      goto Done;
  }
}

\* END PLUSCAL TRANSLATION

********************)
\* BEGIN TRANSLATION (chksum(pcal) = "cd3bbe05" /\ chksum(tla) = "9ef37388") PCal-18049938ece8066a38eb5044080cf45c
CONSTANT defaultInitValue
VARIABLES network, fd, state, currentTerm, commitIndex, nextIndex, matchIndex, 
          log, plog, votedFor, votesResponded, votesGranted, leader, sm, 
          smDomain, leaderTimeout, appendEntriesCh, reqCh, respCh, 
          requestVoteSrvId, appendEntriesSrvId, advanceCommitIndexSrvId, 
          becomeLeaderSrvId, crasherSrvId, pc

(* define statement *)
Follower == "follower"
Candidate == "candidate"
Leader == "leader"
RequestVoteRequest == "rvq"
RequestVoteResponse == "rvp"
AppendEntriesRequest == "apq"
AppendEntriesResponse == "app"
ClientPutRequest == "cpq"
ClientPutResponse == "cpp"
ClientGetRequest == "cgq"
ClientGetResponse == "cgp"
Key1 == "key1"
Key2 == "key2"
Value1 == "value1"
LastTerm(xlog) == IF (Len(xlog)) = (0) THEN 0 ELSE ((xlog)[Len(xlog)]).term
Nil == 0
ServerRequestVoteSet == (((1) * (NumServers)) + (1)) .. ((2) * (NumServers))
ServerAppendEntriesSet == (((2) * (NumServers)) + (1)) .. ((3) * (NumServers))
ServerAdvanceCommitIndexSet == (((3) * (NumServers)) + (1)) .. ((4) * (NumServers))
ServerBecomeLeaderSet == (((4) * (NumServers)) + (1)) .. ((5) * (NumServers))
ServerCrasherSet == IF ExploreFail THEN (((5) * (NumServers)) + (1)) .. (((5) * (NumServers)) + (1)) ELSE {}
ClientSet == (((6) * (NumServers)) + (1)) .. (((6) * (NumServers)) + (NumClients))
NodeSet == (ServerSet) \union (ClientSet)
KeySet == {}

VARIABLES idx, m, srvId, idx0, srvId0, idx1, srvId1, newCommitIndex, srvId2, 
          srvId3, leader0, req, resp, reqIdx, timeout, srvId4

vars == << network, fd, state, currentTerm, commitIndex, nextIndex, 
           matchIndex, log, plog, votedFor, votesResponded, votesGranted, 
           leader, sm, smDomain, leaderTimeout, appendEntriesCh, reqCh, 
           respCh, requestVoteSrvId, appendEntriesSrvId, 
           advanceCommitIndexSrvId, becomeLeaderSrvId, crasherSrvId, pc, idx, 
           m, srvId, idx0, srvId0, idx1, srvId1, newCommitIndex, srvId2, 
           srvId3, leader0, req, resp, reqIdx, timeout, srvId4 >>

ProcSet == (ServerSet) \cup (ServerRequestVoteSet) \cup (ServerAppendEntriesSet) \cup (ServerAdvanceCommitIndexSet) \cup (ServerBecomeLeaderSet) \cup (ClientSet) \cup (ServerCrasherSet)

Init == (* Global variables *)
        /\ network = [i \in NodeSet |-> [queue |-> <<>>, enabled |-> TRUE]]
        /\ fd = [i \in ServerSet |-> FALSE]
        /\ state = [i \in ServerSet |-> Follower]
        /\ currentTerm = [i \in ServerSet |-> 1]
        /\ commitIndex = [i \in ServerSet |-> 0]
        /\ nextIndex = [i \in ServerSet |-> [j \in ServerSet |-> 1]]
        /\ matchIndex = [i \in ServerSet |-> [j \in ServerSet |-> 0]]
        /\ log = [i \in ServerSet |-> <<>>]
        /\ plog = [i \in ServerSet |-> <<>>]
        /\ votedFor = [i \in ServerSet |-> Nil]
        /\ votesResponded = [i \in ServerSet |-> {}]
        /\ votesGranted = [i \in ServerSet |-> {}]
        /\ leader = [i \in ServerSet |-> Nil]
        /\ sm = [i \in ServerSet |-> [k \in KeySet |-> Nil]]
        /\ smDomain = [i \in ServerSet |-> KeySet]
        /\ leaderTimeout = TRUE
        /\ appendEntriesCh = TRUE
        /\ reqCh = <<[type |-> Put, key |-> Key1, value |-> Value1]>>
        /\ respCh = defaultInitValue
        /\ requestVoteSrvId = [i \in ServerRequestVoteSet |-> (i) - ((1) * (NumServers))]
        /\ appendEntriesSrvId = [i \in ServerAppendEntriesSet |-> (i) - ((2) * (NumServers))]
        /\ advanceCommitIndexSrvId = [i \in ServerAdvanceCommitIndexSet |-> (i) - ((3) * (NumServers))]
        /\ becomeLeaderSrvId = [i \in ServerBecomeLeaderSet |-> (i) - ((4) * (NumServers))]
        /\ crasherSrvId = [i \in ServerCrasherSet |-> (i) - ((5) * (NumServers))]
        (* Process s0 *)
        /\ idx = [self \in ServerSet |-> 1]
        /\ m = [self \in ServerSet |-> defaultInitValue]
        /\ srvId = [self \in ServerSet |-> self]
        (* Process s1 *)
        /\ idx0 = [self \in ServerRequestVoteSet |-> 1]
        /\ srvId0 = [self \in ServerRequestVoteSet |-> (requestVoteSrvId)[self]]
        (* Process s2 *)
        /\ idx1 = [self \in ServerAppendEntriesSet |-> defaultInitValue]
        /\ srvId1 = [self \in ServerAppendEntriesSet |-> (appendEntriesSrvId)[self]]
        (* Process s3 *)
        /\ newCommitIndex = [self \in ServerAdvanceCommitIndexSet |-> 0]
        /\ srvId2 = [self \in ServerAdvanceCommitIndexSet |-> (advanceCommitIndexSrvId)[self]]
        (* Process s4 *)
        /\ srvId3 = [self \in ServerBecomeLeaderSet |-> (becomeLeaderSrvId)[self]]
        (* Process client *)
        /\ leader0 = [self \in ClientSet |-> Nil]
        /\ req = [self \in ClientSet |-> defaultInitValue]
        /\ resp = [self \in ClientSet |-> defaultInitValue]
        /\ reqIdx = [self \in ClientSet |-> 0]
        /\ timeout = [self \in ClientSet |-> FALSE]
        (* Process crasher *)
        /\ srvId4 = [self \in ServerCrasherSet |-> (crasherSrvId)[self]]
        /\ pc = [self \in ProcSet |-> CASE self \in ServerSet -> "serverLoop"
                                        [] self \in ServerRequestVoteSet -> "serverRequestVoteLoop"
                                        [] self \in ServerAppendEntriesSet -> "serverAppendEntriesLoop"
                                        [] self \in ServerAdvanceCommitIndexSet -> "serverAdvanceCommitIndexLoop"
                                        [] self \in ServerBecomeLeaderSet -> "serverBecomeLeaderLoop"
                                        [] self \in ClientSet -> "clientLoop"
                                        [] self \in ServerCrasherSet -> "serverCrash"]

serverLoop(self) == /\ pc[self] = "serverLoop"
                    /\ IF TRUE
                          THEN /\ IF ExploreFail
                                     THEN /\ LET yielded_network12 == ((network)[self]).enabled IN
                                               IF ~ (yielded_network12)
                                                  THEN /\ FALSE
                                                       /\ Assert(((network)[self]).enabled, 
                                                                 "Failure of assertion at line 957, column 15.")
                                                       /\ (Len(((network)[self]).queue)) > (0)
                                                       /\ LET readMsg00 == Head(((network)[self]).queue) IN
                                                            /\ network' = [network EXCEPT ![self] = [queue |-> Tail(((network)[self]).queue), enabled |-> ((network)[self]).enabled]]
                                                            /\ LET yielded_network00 == readMsg00 IN
                                                                 /\ m' = [m EXCEPT ![self] = yielded_network00]
                                                                 /\ Assert(((m'[self]).mdest) = (self), 
                                                                           "Failure of assertion at line 963, column 19.")
                                                                 /\ leaderTimeout' = LeaderTimeoutReset
                                                                 /\ pc' = [pc EXCEPT ![self] = "handleMsg"]
                                                  ELSE /\ Assert(((network)[self]).enabled, 
                                                                 "Failure of assertion at line 969, column 15.")
                                                       /\ (Len(((network)[self]).queue)) > (0)
                                                       /\ LET readMsg01 == Head(((network)[self]).queue) IN
                                                            /\ network' = [network EXCEPT ![self] = [queue |-> Tail(((network)[self]).queue), enabled |-> ((network)[self]).enabled]]
                                                            /\ LET yielded_network01 == readMsg01 IN
                                                                 /\ m' = [m EXCEPT ![self] = yielded_network01]
                                                                 /\ Assert(((m'[self]).mdest) = (self), 
                                                                           "Failure of assertion at line 975, column 19.")
                                                                 /\ leaderTimeout' = LeaderTimeoutReset
                                                                 /\ pc' = [pc EXCEPT ![self] = "handleMsg"]
                                     ELSE /\ Assert(((network)[self]).enabled, 
                                                    "Failure of assertion at line 983, column 11.")
                                          /\ (Len(((network)[self]).queue)) > (0)
                                          /\ LET readMsg02 == Head(((network)[self]).queue) IN
                                               /\ network' = [network EXCEPT ![self] = [queue |-> Tail(((network)[self]).queue), enabled |-> ((network)[self]).enabled]]
                                               /\ LET yielded_network02 == readMsg02 IN
                                                    /\ m' = [m EXCEPT ![self] = yielded_network02]
                                                    /\ Assert(((m'[self]).mdest) = (self), 
                                                              "Failure of assertion at line 989, column 15.")
                                                    /\ leaderTimeout' = LeaderTimeoutReset
                                                    /\ pc' = [pc EXCEPT ![self] = "handleMsg"]
                          ELSE /\ pc' = [pc EXCEPT ![self] = "Done"]
                               /\ UNCHANGED << network, leaderTimeout, m >>
                    /\ UNCHANGED << fd, state, currentTerm, commitIndex, 
                                    nextIndex, matchIndex, log, plog, votedFor, 
                                    votesResponded, votesGranted, leader, sm, 
                                    smDomain, appendEntriesCh, reqCh, respCh, 
                                    requestVoteSrvId, appendEntriesSrvId, 
                                    advanceCommitIndexSrvId, becomeLeaderSrvId, 
                                    crasherSrvId, idx, srvId, idx0, srvId0, 
                                    idx1, srvId1, newCommitIndex, srvId2, 
                                    srvId3, leader0, req, resp, reqIdx, 
                                    timeout, srvId4 >>

handleMsg(self) == /\ pc[self] = "handleMsg"
                   /\ IF ExploreFail
                         THEN /\ LET yielded_network13 == ((network)[self]).enabled IN
                                   IF ~ (yielded_network13)
                                      THEN /\ FALSE
                                           /\ IF ((m[self]).mtype) = (RequestVoteRequest)
                                                 THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                            THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                                 /\ state' = [state EXCEPT ![self] = Follower]
                                                                 /\ LET votedFor3 == [votedFor EXCEPT ![self] = Nil] IN
                                                                      /\ leader' = [leader EXCEPT ![self] = Nil]
                                                                      /\ LET i == self IN
                                                                           LET j == (m[self]).msource IN
                                                                             LET logOK == (((m[self]).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m[self]).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m[self]).mlastLogIndex) >= (Len((log)[i])))) IN
                                                                               LET grant == ((((m[self]).mterm) = ((currentTerm')[i])) /\ (logOK)) /\ (((votedFor3)[self]) \in ({Nil, j})) IN
                                                                                 /\ Assert(((m[self]).mterm) <= ((currentTerm')[i]), 
                                                                                           "Failure of assertion at line 1015, column 21.")
                                                                                 /\ IF grant
                                                                                       THEN /\ votedFor' = [votedFor3 EXCEPT ![i] = j]
                                                                                            /\ \/ /\ LET value00 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm')[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                                       /\ ((network)[j]).enabled
                                                                                                       /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value00), enabled |-> ((network)[j]).enabled]]
                                                                                                       /\ IF Debug
                                                                                                             THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                               \/ /\ LET yielded_fd7 == (fd)[j] IN
                                                                                                       /\ yielded_fd7
                                                                                                       /\ IF Debug
                                                                                                             THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                  /\ UNCHANGED network
                                                                                       ELSE /\ \/ /\ LET value01 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm')[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                                       /\ ((network)[j]).enabled
                                                                                                       /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value01), enabled |-> ((network)[j]).enabled]]
                                                                                                       /\ IF Debug
                                                                                                             THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                                  /\ votedFor' = votedFor3
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ votedFor' = votedFor3
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                               \/ /\ LET yielded_fd8 == (fd)[j] IN
                                                                                                       /\ yielded_fd8
                                                                                                       /\ IF Debug
                                                                                                             THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                                  /\ votedFor' = votedFor3
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ votedFor' = votedFor3
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                  /\ UNCHANGED network
                                                            ELSE /\ LET i == self IN
                                                                      LET j == (m[self]).msource IN
                                                                        LET logOK == (((m[self]).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m[self]).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m[self]).mlastLogIndex) >= (Len((log)[i])))) IN
                                                                          LET grant == ((((m[self]).mterm) = ((currentTerm)[i])) /\ (logOK)) /\ (((votedFor)[self]) \in ({Nil, j})) IN
                                                                            /\ Assert(((m[self]).mterm) <= ((currentTerm)[i]), 
                                                                                      "Failure of assertion at line 1079, column 19.")
                                                                            /\ IF grant
                                                                                  THEN /\ votedFor' = [votedFor EXCEPT ![i] = j]
                                                                                       /\ \/ /\ LET value02 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                                  /\ ((network)[j]).enabled
                                                                                                  /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value02), enabled |-> ((network)[j]).enabled]]
                                                                                                  /\ IF Debug
                                                                                                        THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                          \/ /\ LET yielded_fd9 == (fd)[j] IN
                                                                                                  /\ yielded_fd9
                                                                                                  /\ IF Debug
                                                                                                        THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                             /\ UNCHANGED network
                                                                                  ELSE /\ \/ /\ LET value03 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                                  /\ ((network)[j]).enabled
                                                                                                  /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value03), enabled |-> ((network)[j]).enabled]]
                                                                                                  /\ IF Debug
                                                                                                        THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                          \/ /\ LET yielded_fd10 == (fd)[j] IN
                                                                                                  /\ yielded_fd10
                                                                                                  /\ IF Debug
                                                                                                        THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                             /\ UNCHANGED network
                                                                                       /\ UNCHANGED votedFor
                                                                 /\ UNCHANGED << state, 
                                                                                 currentTerm, 
                                                                                 leader >>
                                                      /\ UNCHANGED << commitIndex, 
                                                                      nextIndex, 
                                                                      matchIndex, 
                                                                      log, 
                                                                      plog, 
                                                                      votesResponded, 
                                                                      votesGranted, 
                                                                      sm, 
                                                                      smDomain >>
                                                 ELSE /\ IF ((m[self]).mtype) = (RequestVoteResponse)
                                                            THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                                       THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                                            /\ state' = [state EXCEPT ![self] = Follower]
                                                                            /\ votedFor' = [votedFor EXCEPT ![self] = Nil]
                                                                            /\ leader' = [leader EXCEPT ![self] = Nil]
                                                                            /\ IF ((m[self]).mterm) < ((currentTerm')[self])
                                                                                  THEN /\ TRUE
                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                       /\ UNCHANGED << votesResponded, 
                                                                                                       votesGranted >>
                                                                                  ELSE /\ LET i == self IN
                                                                                            LET j == (m[self]).msource IN
                                                                                              /\ Assert(((m[self]).mterm) = ((currentTerm')[i]), 
                                                                                                        "Failure of assertion at line 1147, column 23.")
                                                                                              /\ votesResponded' = [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})]
                                                                                              /\ IF (m[self]).mvoteGranted
                                                                                                    THEN /\ votesGranted' = [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})]
                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                    ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                         /\ UNCHANGED votesGranted
                                                                       ELSE /\ IF ((m[self]).mterm) < ((currentTerm)[self])
                                                                                  THEN /\ TRUE
                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                       /\ UNCHANGED << votesResponded, 
                                                                                                       votesGranted >>
                                                                                  ELSE /\ LET i == self IN
                                                                                            LET j == (m[self]).msource IN
                                                                                              /\ Assert(((m[self]).mterm) = ((currentTerm)[i]), 
                                                                                                        "Failure of assertion at line 1166, column 23.")
                                                                                              /\ votesResponded' = [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})]
                                                                                              /\ IF (m[self]).mvoteGranted
                                                                                                    THEN /\ votesGranted' = [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})]
                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                    ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                         /\ UNCHANGED votesGranted
                                                                            /\ UNCHANGED << state, 
                                                                                            currentTerm, 
                                                                                            votedFor, 
                                                                                            leader >>
                                                                 /\ UNCHANGED << network, 
                                                                                 commitIndex, 
                                                                                 nextIndex, 
                                                                                 matchIndex, 
                                                                                 log, 
                                                                                 plog, 
                                                                                 sm, 
                                                                                 smDomain >>
                                                            ELSE /\ IF ((m[self]).mtype) = (AppendEntriesRequest)
                                                                       THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                                                  THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                                                       /\ LET state3 == [state EXCEPT ![self] = Follower] IN
                                                                                            /\ votedFor' = [votedFor EXCEPT ![self] = Nil]
                                                                                            /\ LET leader3 == [leader EXCEPT ![self] = Nil] IN
                                                                                                 /\ leader' = [leader3 EXCEPT ![self] = (m[self]).msource]
                                                                                                 /\ LET i == self IN
                                                                                                      LET j == (m[self]).msource IN
                                                                                                        LET logOK == (((m[self]).mprevLogIndex) = (0)) \/ (((((m[self]).mprevLogIndex) > (0)) /\ (((m[self]).mprevLogIndex) <= (Len((log)[i])))) /\ (((m[self]).mprevLogTerm) = ((((log)[i])[(m[self]).mprevLogIndex]).term))) IN
                                                                                                          /\ Assert(((m[self]).mterm) <= ((currentTerm')[i]), 
                                                                                                                    "Failure of assertion at line 1190, column 27.")
                                                                                                          /\ IF (((m[self]).mterm) = ((currentTerm')[i])) /\ (((state3)[i]) = (Candidate))
                                                                                                                THEN /\ state' = [state3 EXCEPT ![i] = Follower]
                                                                                                                     /\ IF (((m[self]).mterm) < ((currentTerm')[i])) \/ (((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state')[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                           THEN /\ \/ /\ LET value14 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                           /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value14), enabled |-> ((network)[j]).enabled]]
                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                   \/ /\ LET yielded_fd00 == (fd)[j] IN
                                                                                                                                           /\ yielded_fd00
                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                      /\ UNCHANGED network
                                                                                                                                /\ UNCHANGED << commitIndex, 
                                                                                                                                                log, 
                                                                                                                                                plog, 
                                                                                                                                                sm, 
                                                                                                                                                smDomain >>
                                                                                                                           ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state')[i]) = (Follower))) /\ (logOK), 
                                                                                                                                          "Failure of assertion at line 1208, column 31.")
                                                                                                                                /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                     IF ((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m[self]).mentries)[1]).term))
                                                                                                                                        THEN /\ LET log12 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))] IN
                                                                                                                                                  LET value20 == [cmd |-> LogPop] IN
                                                                                                                                                    IF ((value20).cmd) = (LogConcat)
                                                                                                                                                       THEN /\ LET plog12 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value20).entries)] IN
                                                                                                                                                                 IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log12)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                    THEN /\ log' = [log12 EXCEPT ![i] = ((log12)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                         /\ LET value30 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                              IF ((value30).cmd) = (LogConcat)
                                                                                                                                                                                 THEN /\ plog' = [plog12 EXCEPT ![i] = ((plog12)[i]) \o ((value30).entries)]
                                                                                                                                                                                      /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                            THEN /\ LET result48 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result48)[1]]
                                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result48)[2]]
                                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                      /\ \/ /\ LET value40 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                                 /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value40), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         \/ /\ LET yielded_fd11 == (fd)[j] IN
                                                                                                                                                                                                                 /\ yielded_fd11
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                                            ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                 /\ UNCHANGED << network, 
                                                                                                                                                                                                                 commitIndex, 
                                                                                                                                                                                                                 sm, 
                                                                                                                                                                                                                 smDomain >>
                                                                                                                                                                                 ELSE /\ IF ((value30).cmd) = (LogPop)
                                                                                                                                                                                            THEN /\ plog' = [plog12 EXCEPT ![i] = SubSeq((plog12)[i], 1, (Len((plog12)[i])) - (1))]
                                                                                                                                                                                                 /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                       THEN /\ LET result49 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result49)[1]]
                                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result49)[2]]
                                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                 /\ \/ /\ LET value41 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                                            /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value41), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                    \/ /\ LET yielded_fd12 == (fd)[j] IN
                                                                                                                                                                                                                            /\ yielded_fd12
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                                       ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED << network, 
                                                                                                                                                                                                                            commitIndex, 
                                                                                                                                                                                                                            sm, 
                                                                                                                                                                                                                            smDomain >>
                                                                                                                                                                                            ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                       THEN /\ LET result50 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result50)[1]]
                                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result50)[2]]
                                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                 /\ \/ /\ LET value42 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                                            /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value42), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                            /\ plog' = plog12
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                    \/ /\ LET yielded_fd13 == (fd)[j] IN
                                                                                                                                                                                                                            /\ yielded_fd13
                                                                                                                                                                                                                            /\ plog' = plog12
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                                       ELSE /\ plog' = plog12
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED << network, 
                                                                                                                                                                                                                            commitIndex, 
                                                                                                                                                                                                                            sm, 
                                                                                                                                                                                                                            smDomain >>
                                                                                                                                                                    ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log12)[i])) >= (index))) /\ (((((log12)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                               THEN /\ LET result51 == ApplyLog((log12)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result51)[1]]
                                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result51)[2]]
                                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                         /\ \/ /\ LET value43 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                                    /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value43), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                    /\ plog' = plog12
                                                                                                                                                                                                    /\ log' = log12
                                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            \/ /\ LET yielded_fd14 == (fd)[j] IN
                                                                                                                                                                                                    /\ yielded_fd14
                                                                                                                                                                                                    /\ plog' = plog12
                                                                                                                                                                                                    /\ log' = log12
                                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                                                               ELSE /\ plog' = plog12
                                                                                                                                                                                    /\ log' = log12
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                    /\ UNCHANGED << network, 
                                                                                                                                                                                                    commitIndex, 
                                                                                                                                                                                                    sm, 
                                                                                                                                                                                                    smDomain >>
                                                                                                                                                       ELSE /\ IF ((value20).cmd) = (LogPop)
                                                                                                                                                                  THEN /\ LET plog13 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))] IN
                                                                                                                                                                            IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log12)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                               THEN /\ log' = [log12 EXCEPT ![i] = ((log12)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                    /\ LET value31 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                                         IF ((value31).cmd) = (LogConcat)
                                                                                                                                                                                            THEN /\ plog' = [plog13 EXCEPT ![i] = ((plog13)[i]) \o ((value31).entries)]
                                                                                                                                                                                                 /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                       THEN /\ LET result52 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result52)[1]]
                                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result52)[2]]
                                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                 /\ \/ /\ LET value44 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                                            /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value44), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                    \/ /\ LET yielded_fd15 == (fd)[j] IN
                                                                                                                                                                                                                            /\ yielded_fd15
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                                       ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED << network, 
                                                                                                                                                                                                                            commitIndex, 
                                                                                                                                                                                                                            sm, 
                                                                                                                                                                                                                            smDomain >>
                                                                                                                                                                                            ELSE /\ IF ((value31).cmd) = (LogPop)
                                                                                                                                                                                                       THEN /\ plog' = [plog13 EXCEPT ![i] = SubSeq((plog13)[i], 1, (Len((plog13)[i])) - (1))]
                                                                                                                                                                                                            /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                                  THEN /\ LET result53 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result53)[1]]
                                                                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result53)[2]]
                                                                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                            /\ \/ /\ LET value45 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                                                                       /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value45), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                               \/ /\ LET yielded_fd16 == (fd)[j] IN
                                                                                                                                                                                                                                       /\ yielded_fd16
                                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                                                                                  ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                       /\ UNCHANGED << network, 
                                                                                                                                                                                                                                       commitIndex, 
                                                                                                                                                                                                                                       sm, 
                                                                                                                                                                                                                                       smDomain >>
                                                                                                                                                                                                       ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                                  THEN /\ LET result54 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result54)[1]]
                                                                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result54)[2]]
                                                                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                            /\ \/ /\ LET value46 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                                                                       /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value46), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                                       /\ plog' = plog13
                                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                               \/ /\ LET yielded_fd17 == (fd)[j] IN
                                                                                                                                                                                                                                       /\ yielded_fd17
                                                                                                                                                                                                                                       /\ plog' = plog13
                                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                                                                                  ELSE /\ plog' = plog13
                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                       /\ UNCHANGED << network, 
                                                                                                                                                                                                                                       commitIndex, 
                                                                                                                                                                                                                                       sm, 
                                                                                                                                                                                                                                       smDomain >>
                                                                                                                                                                               ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log12)[i])) >= (index))) /\ (((((log12)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                          THEN /\ LET result55 == ApplyLog((log12)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result55)[1]]
                                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result55)[2]]
                                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                    /\ \/ /\ LET value47 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                                               /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value47), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                               /\ plog' = plog13
                                                                                                                                                                                                               /\ log' = log12
                                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       \/ /\ LET yielded_fd18 == (fd)[j] IN
                                                                                                                                                                                                               /\ yielded_fd18
                                                                                                                                                                                                               /\ plog' = plog13
                                                                                                                                                                                                               /\ log' = log12
                                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                                                          ELSE /\ plog' = plog13
                                                                                                                                                                                               /\ log' = log12
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               /\ UNCHANGED << network, 
                                                                                                                                                                                                               commitIndex, 
                                                                                                                                                                                                               sm, 
                                                                                                                                                                                                               smDomain >>
                                                                                                                                                                  ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log12)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                             THEN /\ log' = [log12 EXCEPT ![i] = ((log12)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                  /\ LET value32 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                                       IF ((value32).cmd) = (LogConcat)
                                                                                                                                                                                          THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value32).entries)]
                                                                                                                                                                                               /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                     THEN /\ LET result56 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result56)[1]]
                                                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result56)[2]]
                                                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                               /\ \/ /\ LET value48 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                                                          /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value48), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                  \/ /\ LET yielded_fd19 == (fd)[j] IN
                                                                                                                                                                                                                          /\ yielded_fd19
                                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                                                     ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          /\ UNCHANGED << network, 
                                                                                                                                                                                                                          commitIndex, 
                                                                                                                                                                                                                          sm, 
                                                                                                                                                                                                                          smDomain >>
                                                                                                                                                                                          ELSE /\ IF ((value32).cmd) = (LogPop)
                                                                                                                                                                                                     THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                                                          /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                                THEN /\ LET result57 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result57)[1]]
                                                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result57)[2]]
                                                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                          /\ \/ /\ LET value49 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                                                     /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value49), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                             \/ /\ LET yielded_fd110 == (fd)[j] IN
                                                                                                                                                                                                                                     /\ yielded_fd110
                                                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                                                ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     /\ UNCHANGED << network, 
                                                                                                                                                                                                                                     commitIndex, 
                                                                                                                                                                                                                                     sm, 
                                                                                                                                                                                                                                     smDomain >>
                                                                                                                                                                                                     ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                                THEN /\ LET result58 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result58)[1]]
                                                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result58)[2]]
                                                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                          /\ \/ /\ LET value410 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                                                     /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value410), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                             \/ /\ LET yielded_fd111 == (fd)[j] IN
                                                                                                                                                                                                                                     /\ yielded_fd111
                                                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                                                ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     /\ UNCHANGED << network, 
                                                                                                                                                                                                                                     commitIndex, 
                                                                                                                                                                                                                                     sm, 
                                                                                                                                                                                                                                     smDomain >>
                                                                                                                                                                                                          /\ plog' = plog
                                                                                                                                                                             ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log12)[i])) >= (index))) /\ (((((log12)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                        THEN /\ LET result59 == ApplyLog((log12)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result59)[1]]
                                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result59)[2]]
                                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                  /\ \/ /\ LET value411 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                                             /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value411), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                             /\ log' = log12
                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                     \/ /\ LET yielded_fd112 == (fd)[j] IN
                                                                                                                                                                                                             /\ yielded_fd112
                                                                                                                                                                                                             /\ log' = log12
                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                                        ELSE /\ log' = log12
                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             /\ UNCHANGED << network, 
                                                                                                                                                                                                             commitIndex, 
                                                                                                                                                                                                             sm, 
                                                                                                                                                                                                             smDomain >>
                                                                                                                                                                                  /\ plog' = plog
                                                                                                                                        ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                   THEN /\ log' = [log EXCEPT ![i] = ((log)[i]) \o ((m[self]).mentries)]
                                                                                                                                                        /\ LET value33 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                             IF ((value33).cmd) = (LogConcat)
                                                                                                                                                                THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value33).entries)]
                                                                                                                                                                     /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                           THEN /\ LET result60 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                     /\ sm' = [sm EXCEPT ![i] = (result60)[1]]
                                                                                                                                                                                     /\ smDomain' = [smDomain EXCEPT ![i] = (result60)[2]]
                                                                                                                                                                                     /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                     /\ \/ /\ LET value412 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                /\ ((network)[j]).enabled
                                                                                                                                                                                                /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value412), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                        \/ /\ LET yielded_fd113 == (fd)[j] IN
                                                                                                                                                                                                /\ yielded_fd113
                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           /\ UNCHANGED network
                                                                                                                                                                           ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                /\ UNCHANGED << network, 
                                                                                                                                                                                                commitIndex, 
                                                                                                                                                                                                sm, 
                                                                                                                                                                                                smDomain >>
                                                                                                                                                                ELSE /\ IF ((value33).cmd) = (LogPop)
                                                                                                                                                                           THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                                /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                      THEN /\ LET result61 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result61)[1]]
                                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result61)[2]]
                                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                /\ \/ /\ LET value413 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                                           /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value413), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                   \/ /\ LET yielded_fd114 == (fd)[j] IN
                                                                                                                                                                                                           /\ yielded_fd114
                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                                                      ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           /\ UNCHANGED << network, 
                                                                                                                                                                                                           commitIndex, 
                                                                                                                                                                                                           sm, 
                                                                                                                                                                                                           smDomain >>
                                                                                                                                                                           ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                      THEN /\ LET result62 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result62)[1]]
                                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result62)[2]]
                                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                /\ \/ /\ LET value414 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                                           /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value414), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                   \/ /\ LET yielded_fd115 == (fd)[j] IN
                                                                                                                                                                                                           /\ yielded_fd115
                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                                                      ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           /\ UNCHANGED << network, 
                                                                                                                                                                                                           commitIndex, 
                                                                                                                                                                                                           sm, 
                                                                                                                                                                                                           smDomain >>
                                                                                                                                                                                /\ plog' = plog
                                                                                                                                                   ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                              THEN /\ LET result63 == ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result63)[1]]
                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result63)[2]]
                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                        /\ \/ /\ LET value415 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                   /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value415), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                           \/ /\ LET yielded_fd116 == (fd)[j] IN
                                                                                                                                                                                   /\ yielded_fd116
                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                              ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                   /\ UNCHANGED << network, 
                                                                                                                                                                                   commitIndex, 
                                                                                                                                                                                   sm, 
                                                                                                                                                                                   smDomain >>
                                                                                                                                                        /\ UNCHANGED << log, 
                                                                                                                                                                        plog >>
                                                                                                                ELSE /\ IF (((m[self]).mterm) < ((currentTerm')[i])) \/ (((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state3)[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                           THEN /\ \/ /\ LET value15 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                           /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value15), enabled |-> ((network)[j]).enabled]]
                                                                                                                                           /\ state' = state3
                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                   \/ /\ LET yielded_fd01 == (fd)[j] IN
                                                                                                                                           /\ yielded_fd01
                                                                                                                                           /\ state' = state3
                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                      /\ UNCHANGED network
                                                                                                                                /\ UNCHANGED << commitIndex, 
                                                                                                                                                log, 
                                                                                                                                                plog, 
                                                                                                                                                sm, 
                                                                                                                                                smDomain >>
                                                                                                                           ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state3)[i]) = (Follower))) /\ (logOK), 
                                                                                                                                          "Failure of assertion at line 1677, column 31.")
                                                                                                                                /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                     IF ((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m[self]).mentries)[1]).term))
                                                                                                                                        THEN /\ LET log13 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))] IN
                                                                                                                                                  LET value21 == [cmd |-> LogPop] IN
                                                                                                                                                    IF ((value21).cmd) = (LogConcat)
                                                                                                                                                       THEN /\ LET plog14 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value21).entries)] IN
                                                                                                                                                                 IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log13)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                    THEN /\ log' = [log13 EXCEPT ![i] = ((log13)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                         /\ LET value34 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                              IF ((value34).cmd) = (LogConcat)
                                                                                                                                                                                 THEN /\ plog' = [plog14 EXCEPT ![i] = ((plog14)[i]) \o ((value34).entries)]
                                                                                                                                                                                      /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                            THEN /\ LET result64 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result64)[1]]
                                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result64)[2]]
                                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                      /\ \/ /\ LET value416 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                                 /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value416), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                 /\ state' = state3
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         \/ /\ LET yielded_fd117 == (fd)[j] IN
                                                                                                                                                                                                                 /\ yielded_fd117
                                                                                                                                                                                                                 /\ state' = state3
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                                            ELSE /\ state' = state3
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                 /\ UNCHANGED << network, 
                                                                                                                                                                                                                 commitIndex, 
                                                                                                                                                                                                                 sm, 
                                                                                                                                                                                                                 smDomain >>
                                                                                                                                                                                 ELSE /\ IF ((value34).cmd) = (LogPop)
                                                                                                                                                                                            THEN /\ plog' = [plog14 EXCEPT ![i] = SubSeq((plog14)[i], 1, (Len((plog14)[i])) - (1))]
                                                                                                                                                                                                 /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                       THEN /\ LET result65 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result65)[1]]
                                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result65)[2]]
                                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                 /\ \/ /\ LET value417 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                                            /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value417), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                            /\ state' = state3
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                    \/ /\ LET yielded_fd118 == (fd)[j] IN
                                                                                                                                                                                                                            /\ yielded_fd118
                                                                                                                                                                                                                            /\ state' = state3
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                                       ELSE /\ state' = state3
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED << network, 
                                                                                                                                                                                                                            commitIndex, 
                                                                                                                                                                                                                            sm, 
                                                                                                                                                                                                                            smDomain >>
                                                                                                                                                                                            ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                       THEN /\ LET result66 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result66)[1]]
                                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result66)[2]]
                                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                 /\ \/ /\ LET value418 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                                            /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value418), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                            /\ plog' = plog14
                                                                                                                                                                                                                            /\ state' = state3
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                    \/ /\ LET yielded_fd119 == (fd)[j] IN
                                                                                                                                                                                                                            /\ yielded_fd119
                                                                                                                                                                                                                            /\ plog' = plog14
                                                                                                                                                                                                                            /\ state' = state3
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                                       ELSE /\ plog' = plog14
                                                                                                                                                                                                            /\ state' = state3
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED << network, 
                                                                                                                                                                                                                            commitIndex, 
                                                                                                                                                                                                                            sm, 
                                                                                                                                                                                                                            smDomain >>
                                                                                                                                                                    ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log13)[i])) >= (index))) /\ (((((log13)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                               THEN /\ LET result67 == ApplyLog((log13)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result67)[1]]
                                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result67)[2]]
                                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                         /\ \/ /\ LET value419 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                                    /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value419), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                    /\ plog' = plog14
                                                                                                                                                                                                    /\ log' = log13
                                                                                                                                                                                                    /\ state' = state3
                                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            \/ /\ LET yielded_fd120 == (fd)[j] IN
                                                                                                                                                                                                    /\ yielded_fd120
                                                                                                                                                                                                    /\ plog' = plog14
                                                                                                                                                                                                    /\ log' = log13
                                                                                                                                                                                                    /\ state' = state3
                                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                                                               ELSE /\ plog' = plog14
                                                                                                                                                                                    /\ log' = log13
                                                                                                                                                                                    /\ state' = state3
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                    /\ UNCHANGED << network, 
                                                                                                                                                                                                    commitIndex, 
                                                                                                                                                                                                    sm, 
                                                                                                                                                                                                    smDomain >>
                                                                                                                                                       ELSE /\ IF ((value21).cmd) = (LogPop)
                                                                                                                                                                  THEN /\ LET plog15 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))] IN
                                                                                                                                                                            IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log13)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                               THEN /\ log' = [log13 EXCEPT ![i] = ((log13)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                    /\ LET value35 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                                         IF ((value35).cmd) = (LogConcat)
                                                                                                                                                                                            THEN /\ plog' = [plog15 EXCEPT ![i] = ((plog15)[i]) \o ((value35).entries)]
                                                                                                                                                                                                 /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                       THEN /\ LET result68 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result68)[1]]
                                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result68)[2]]
                                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                 /\ \/ /\ LET value420 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                                            /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value420), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                            /\ state' = state3
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                    \/ /\ LET yielded_fd121 == (fd)[j] IN
                                                                                                                                                                                                                            /\ yielded_fd121
                                                                                                                                                                                                                            /\ state' = state3
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                                       ELSE /\ state' = state3
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED << network, 
                                                                                                                                                                                                                            commitIndex, 
                                                                                                                                                                                                                            sm, 
                                                                                                                                                                                                                            smDomain >>
                                                                                                                                                                                            ELSE /\ IF ((value35).cmd) = (LogPop)
                                                                                                                                                                                                       THEN /\ plog' = [plog15 EXCEPT ![i] = SubSeq((plog15)[i], 1, (Len((plog15)[i])) - (1))]
                                                                                                                                                                                                            /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                                  THEN /\ LET result69 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result69)[1]]
                                                                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result69)[2]]
                                                                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                            /\ \/ /\ LET value421 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                                                                       /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value421), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                                       /\ state' = state3
                                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                               \/ /\ LET yielded_fd122 == (fd)[j] IN
                                                                                                                                                                                                                                       /\ yielded_fd122
                                                                                                                                                                                                                                       /\ state' = state3
                                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                                                                                  ELSE /\ state' = state3
                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                       /\ UNCHANGED << network, 
                                                                                                                                                                                                                                       commitIndex, 
                                                                                                                                                                                                                                       sm, 
                                                                                                                                                                                                                                       smDomain >>
                                                                                                                                                                                                       ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                                  THEN /\ LET result70 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result70)[1]]
                                                                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result70)[2]]
                                                                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                            /\ \/ /\ LET value422 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                                                                       /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value422), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                                       /\ plog' = plog15
                                                                                                                                                                                                                                       /\ state' = state3
                                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                               \/ /\ LET yielded_fd123 == (fd)[j] IN
                                                                                                                                                                                                                                       /\ yielded_fd123
                                                                                                                                                                                                                                       /\ plog' = plog15
                                                                                                                                                                                                                                       /\ state' = state3
                                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                                                                                  ELSE /\ plog' = plog15
                                                                                                                                                                                                                       /\ state' = state3
                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                       /\ UNCHANGED << network, 
                                                                                                                                                                                                                                       commitIndex, 
                                                                                                                                                                                                                                       sm, 
                                                                                                                                                                                                                                       smDomain >>
                                                                                                                                                                               ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log13)[i])) >= (index))) /\ (((((log13)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                          THEN /\ LET result71 == ApplyLog((log13)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result71)[1]]
                                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result71)[2]]
                                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                    /\ \/ /\ LET value423 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                                               /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value423), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                               /\ plog' = plog15
                                                                                                                                                                                                               /\ log' = log13
                                                                                                                                                                                                               /\ state' = state3
                                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       \/ /\ LET yielded_fd124 == (fd)[j] IN
                                                                                                                                                                                                               /\ yielded_fd124
                                                                                                                                                                                                               /\ plog' = plog15
                                                                                                                                                                                                               /\ log' = log13
                                                                                                                                                                                                               /\ state' = state3
                                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                                                          ELSE /\ plog' = plog15
                                                                                                                                                                                               /\ log' = log13
                                                                                                                                                                                               /\ state' = state3
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               /\ UNCHANGED << network, 
                                                                                                                                                                                                               commitIndex, 
                                                                                                                                                                                                               sm, 
                                                                                                                                                                                                               smDomain >>
                                                                                                                                                                  ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log13)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                             THEN /\ log' = [log13 EXCEPT ![i] = ((log13)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                  /\ LET value36 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                                       IF ((value36).cmd) = (LogConcat)
                                                                                                                                                                                          THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value36).entries)]
                                                                                                                                                                                               /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                     THEN /\ LET result72 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result72)[1]]
                                                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result72)[2]]
                                                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                               /\ \/ /\ LET value424 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                                                          /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value424), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                          /\ state' = state3
                                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                  \/ /\ LET yielded_fd125 == (fd)[j] IN
                                                                                                                                                                                                                          /\ yielded_fd125
                                                                                                                                                                                                                          /\ state' = state3
                                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                                                     ELSE /\ state' = state3
                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          /\ UNCHANGED << network, 
                                                                                                                                                                                                                          commitIndex, 
                                                                                                                                                                                                                          sm, 
                                                                                                                                                                                                                          smDomain >>
                                                                                                                                                                                          ELSE /\ IF ((value36).cmd) = (LogPop)
                                                                                                                                                                                                     THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                                                          /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                                THEN /\ LET result73 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result73)[1]]
                                                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result73)[2]]
                                                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                          /\ \/ /\ LET value425 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                                                     /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value425), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                                     /\ state' = state3
                                                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                             \/ /\ LET yielded_fd126 == (fd)[j] IN
                                                                                                                                                                                                                                     /\ yielded_fd126
                                                                                                                                                                                                                                     /\ state' = state3
                                                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                                                ELSE /\ state' = state3
                                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     /\ UNCHANGED << network, 
                                                                                                                                                                                                                                     commitIndex, 
                                                                                                                                                                                                                                     sm, 
                                                                                                                                                                                                                                     smDomain >>
                                                                                                                                                                                                     ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                                THEN /\ LET result74 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result74)[1]]
                                                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result74)[2]]
                                                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                          /\ \/ /\ LET value426 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                                                     /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value426), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                                     /\ state' = state3
                                                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                             \/ /\ LET yielded_fd127 == (fd)[j] IN
                                                                                                                                                                                                                                     /\ yielded_fd127
                                                                                                                                                                                                                                     /\ state' = state3
                                                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                                                ELSE /\ state' = state3
                                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     /\ UNCHANGED << network, 
                                                                                                                                                                                                                                     commitIndex, 
                                                                                                                                                                                                                                     sm, 
                                                                                                                                                                                                                                     smDomain >>
                                                                                                                                                                                                          /\ plog' = plog
                                                                                                                                                                             ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log13)[i])) >= (index))) /\ (((((log13)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                        THEN /\ LET result75 == ApplyLog((log13)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result75)[1]]
                                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result75)[2]]
                                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                  /\ \/ /\ LET value427 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                                             /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value427), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                             /\ log' = log13
                                                                                                                                                                                                             /\ state' = state3
                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                     \/ /\ LET yielded_fd128 == (fd)[j] IN
                                                                                                                                                                                                             /\ yielded_fd128
                                                                                                                                                                                                             /\ log' = log13
                                                                                                                                                                                                             /\ state' = state3
                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                                        ELSE /\ log' = log13
                                                                                                                                                                                             /\ state' = state3
                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             /\ UNCHANGED << network, 
                                                                                                                                                                                                             commitIndex, 
                                                                                                                                                                                                             sm, 
                                                                                                                                                                                                             smDomain >>
                                                                                                                                                                                  /\ plog' = plog
                                                                                                                                        ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                   THEN /\ log' = [log EXCEPT ![i] = ((log)[i]) \o ((m[self]).mentries)]
                                                                                                                                                        /\ LET value37 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                             IF ((value37).cmd) = (LogConcat)
                                                                                                                                                                THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value37).entries)]
                                                                                                                                                                     /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                           THEN /\ LET result76 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                     /\ sm' = [sm EXCEPT ![i] = (result76)[1]]
                                                                                                                                                                                     /\ smDomain' = [smDomain EXCEPT ![i] = (result76)[2]]
                                                                                                                                                                                     /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                     /\ \/ /\ LET value428 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                /\ ((network)[j]).enabled
                                                                                                                                                                                                /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value428), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                /\ state' = state3
                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                        \/ /\ LET yielded_fd129 == (fd)[j] IN
                                                                                                                                                                                                /\ yielded_fd129
                                                                                                                                                                                                /\ state' = state3
                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           /\ UNCHANGED network
                                                                                                                                                                           ELSE /\ state' = state3
                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                /\ UNCHANGED << network, 
                                                                                                                                                                                                commitIndex, 
                                                                                                                                                                                                sm, 
                                                                                                                                                                                                smDomain >>
                                                                                                                                                                ELSE /\ IF ((value37).cmd) = (LogPop)
                                                                                                                                                                           THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                                /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                      THEN /\ LET result77 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result77)[1]]
                                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result77)[2]]
                                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                /\ \/ /\ LET value429 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                                           /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value429), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                           /\ state' = state3
                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                   \/ /\ LET yielded_fd130 == (fd)[j] IN
                                                                                                                                                                                                           /\ yielded_fd130
                                                                                                                                                                                                           /\ state' = state3
                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                                                      ELSE /\ state' = state3
                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           /\ UNCHANGED << network, 
                                                                                                                                                                                                           commitIndex, 
                                                                                                                                                                                                           sm, 
                                                                                                                                                                                                           smDomain >>
                                                                                                                                                                           ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                      THEN /\ LET result78 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result78)[1]]
                                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result78)[2]]
                                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                /\ \/ /\ LET value430 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                                           /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value430), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                           /\ state' = state3
                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                   \/ /\ LET yielded_fd131 == (fd)[j] IN
                                                                                                                                                                                                           /\ yielded_fd131
                                                                                                                                                                                                           /\ state' = state3
                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                                                      ELSE /\ state' = state3
                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           /\ UNCHANGED << network, 
                                                                                                                                                                                                           commitIndex, 
                                                                                                                                                                                                           sm, 
                                                                                                                                                                                                           smDomain >>
                                                                                                                                                                                /\ plog' = plog
                                                                                                                                                   ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                              THEN /\ LET result79 == ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result79)[1]]
                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result79)[2]]
                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                        /\ \/ /\ LET value431 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                   /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value431), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                   /\ state' = state3
                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                           \/ /\ LET yielded_fd132 == (fd)[j] IN
                                                                                                                                                                                   /\ yielded_fd132
                                                                                                                                                                                   /\ state' = state3
                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                              ELSE /\ state' = state3
                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                   /\ UNCHANGED << network, 
                                                                                                                                                                                   commitIndex, 
                                                                                                                                                                                   sm, 
                                                                                                                                                                                   smDomain >>
                                                                                                                                                        /\ UNCHANGED << log, 
                                                                                                                                                                        plog >>
                                                                                  ELSE /\ leader' = [leader EXCEPT ![self] = (m[self]).msource]
                                                                                       /\ LET i == self IN
                                                                                            LET j == (m[self]).msource IN
                                                                                              LET logOK == (((m[self]).mprevLogIndex) = (0)) \/ (((((m[self]).mprevLogIndex) > (0)) /\ (((m[self]).mprevLogIndex) <= (Len((log)[i])))) /\ (((m[self]).mprevLogTerm) = ((((log)[i])[(m[self]).mprevLogIndex]).term))) IN
                                                                                                /\ Assert(((m[self]).mterm) <= ((currentTerm)[i]), 
                                                                                                          "Failure of assertion at line 2187, column 23.")
                                                                                                /\ IF (((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Candidate))
                                                                                                      THEN /\ state' = [state EXCEPT ![i] = Follower]
                                                                                                           /\ IF (((m[self]).mterm) < ((currentTerm)[i])) \/ (((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state')[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                 THEN /\ \/ /\ LET value16 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                 /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value16), enabled |-> ((network)[j]).enabled]]
                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                         \/ /\ LET yielded_fd02 == (fd)[j] IN
                                                                                                                                 /\ yielded_fd02
                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                            /\ UNCHANGED network
                                                                                                                      /\ UNCHANGED << commitIndex, 
                                                                                                                                      log, 
                                                                                                                                      plog, 
                                                                                                                                      sm, 
                                                                                                                                      smDomain >>
                                                                                                                 ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state')[i]) = (Follower))) /\ (logOK), 
                                                                                                                                "Failure of assertion at line 2205, column 27.")
                                                                                                                      /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                           IF ((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m[self]).mentries)[1]).term))
                                                                                                                              THEN /\ LET log14 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))] IN
                                                                                                                                        LET value22 == [cmd |-> LogPop] IN
                                                                                                                                          IF ((value22).cmd) = (LogConcat)
                                                                                                                                             THEN /\ LET plog16 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value22).entries)] IN
                                                                                                                                                       IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log14)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                          THEN /\ log' = [log14 EXCEPT ![i] = ((log14)[i]) \o ((m[self]).mentries)]
                                                                                                                                                               /\ LET value38 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                    IF ((value38).cmd) = (LogConcat)
                                                                                                                                                                       THEN /\ plog' = [plog16 EXCEPT ![i] = ((plog16)[i]) \o ((value38).entries)]
                                                                                                                                                                            /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                  THEN /\ LET result80 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result80)[1]]
                                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result80)[2]]
                                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                            /\ \/ /\ LET value432 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                                       /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value432), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               \/ /\ LET yielded_fd133 == (fd)[j] IN
                                                                                                                                                                                                       /\ yielded_fd133
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                                                  ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       /\ UNCHANGED << network, 
                                                                                                                                                                                                       commitIndex, 
                                                                                                                                                                                                       sm, 
                                                                                                                                                                                                       smDomain >>
                                                                                                                                                                       ELSE /\ IF ((value38).cmd) = (LogPop)
                                                                                                                                                                                  THEN /\ plog' = [plog16 EXCEPT ![i] = SubSeq((plog16)[i], 1, (Len((plog16)[i])) - (1))]
                                                                                                                                                                                       /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                             THEN /\ LET result81 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                       /\ sm' = [sm EXCEPT ![i] = (result81)[1]]
                                                                                                                                                                                                       /\ smDomain' = [smDomain EXCEPT ![i] = (result81)[2]]
                                                                                                                                                                                                       /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                       /\ \/ /\ LET value433 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                  /\ ((network)[j]).enabled
                                                                                                                                                                                                                  /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value433), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          \/ /\ LET yielded_fd134 == (fd)[j] IN
                                                                                                                                                                                                                  /\ yielded_fd134
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                             /\ UNCHANGED network
                                                                                                                                                                                             ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED << network, 
                                                                                                                                                                                                                  commitIndex, 
                                                                                                                                                                                                                  sm, 
                                                                                                                                                                                                                  smDomain >>
                                                                                                                                                                                  ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                             THEN /\ LET result82 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                       /\ sm' = [sm EXCEPT ![i] = (result82)[1]]
                                                                                                                                                                                                       /\ smDomain' = [smDomain EXCEPT ![i] = (result82)[2]]
                                                                                                                                                                                                       /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                       /\ \/ /\ LET value434 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                  /\ ((network)[j]).enabled
                                                                                                                                                                                                                  /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value434), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                  /\ plog' = plog16
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          \/ /\ LET yielded_fd135 == (fd)[j] IN
                                                                                                                                                                                                                  /\ yielded_fd135
                                                                                                                                                                                                                  /\ plog' = plog16
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                             /\ UNCHANGED network
                                                                                                                                                                                             ELSE /\ plog' = plog16
                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED << network, 
                                                                                                                                                                                                                  commitIndex, 
                                                                                                                                                                                                                  sm, 
                                                                                                                                                                                                                  smDomain >>
                                                                                                                                                          ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log14)[i])) >= (index))) /\ (((((log14)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                     THEN /\ LET result83 == ApplyLog((log14)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result83)[1]]
                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result83)[2]]
                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                               /\ \/ /\ LET value435 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                          /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value435), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                          /\ plog' = plog16
                                                                                                                                                                                          /\ log' = log14
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                  \/ /\ LET yielded_fd136 == (fd)[j] IN
                                                                                                                                                                                          /\ yielded_fd136
                                                                                                                                                                                          /\ plog' = plog16
                                                                                                                                                                                          /\ log' = log14
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                     ELSE /\ plog' = plog16
                                                                                                                                                                          /\ log' = log14
                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                          /\ UNCHANGED << network, 
                                                                                                                                                                                          commitIndex, 
                                                                                                                                                                                          sm, 
                                                                                                                                                                                          smDomain >>
                                                                                                                                             ELSE /\ IF ((value22).cmd) = (LogPop)
                                                                                                                                                        THEN /\ LET plog17 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))] IN
                                                                                                                                                                  IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log14)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                     THEN /\ log' = [log14 EXCEPT ![i] = ((log14)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                          /\ LET value39 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                               IF ((value39).cmd) = (LogConcat)
                                                                                                                                                                                  THEN /\ plog' = [plog17 EXCEPT ![i] = ((plog17)[i]) \o ((value39).entries)]
                                                                                                                                                                                       /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                             THEN /\ LET result84 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                       /\ sm' = [sm EXCEPT ![i] = (result84)[1]]
                                                                                                                                                                                                       /\ smDomain' = [smDomain EXCEPT ![i] = (result84)[2]]
                                                                                                                                                                                                       /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                       /\ \/ /\ LET value436 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                  /\ ((network)[j]).enabled
                                                                                                                                                                                                                  /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value436), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          \/ /\ LET yielded_fd137 == (fd)[j] IN
                                                                                                                                                                                                                  /\ yielded_fd137
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                             /\ UNCHANGED network
                                                                                                                                                                                             ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED << network, 
                                                                                                                                                                                                                  commitIndex, 
                                                                                                                                                                                                                  sm, 
                                                                                                                                                                                                                  smDomain >>
                                                                                                                                                                                  ELSE /\ IF ((value39).cmd) = (LogPop)
                                                                                                                                                                                             THEN /\ plog' = [plog17 EXCEPT ![i] = SubSeq((plog17)[i], 1, (Len((plog17)[i])) - (1))]
                                                                                                                                                                                                  /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                        THEN /\ LET result85 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result85)[1]]
                                                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result85)[2]]
                                                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                  /\ \/ /\ LET value437 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                                                             /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value437), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     \/ /\ LET yielded_fd138 == (fd)[j] IN
                                                                                                                                                                                                                             /\ yielded_fd138
                                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                             /\ UNCHANGED << network, 
                                                                                                                                                                                                                             commitIndex, 
                                                                                                                                                                                                                             sm, 
                                                                                                                                                                                                                             smDomain >>
                                                                                                                                                                                             ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                        THEN /\ LET result86 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result86)[1]]
                                                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result86)[2]]
                                                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                  /\ \/ /\ LET value438 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                                                             /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value438), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                             /\ plog' = plog17
                                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     \/ /\ LET yielded_fd139 == (fd)[j] IN
                                                                                                                                                                                                                             /\ yielded_fd139
                                                                                                                                                                                                                             /\ plog' = plog17
                                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                                                        ELSE /\ plog' = plog17
                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                             /\ UNCHANGED << network, 
                                                                                                                                                                                                                             commitIndex, 
                                                                                                                                                                                                                             sm, 
                                                                                                                                                                                                                             smDomain >>
                                                                                                                                                                     ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log14)[i])) >= (index))) /\ (((((log14)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                THEN /\ LET result87 == ApplyLog((log14)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result87)[1]]
                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result87)[2]]
                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                          /\ \/ /\ LET value439 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                     /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value439), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                     /\ plog' = plog17
                                                                                                                                                                                                     /\ log' = log14
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             \/ /\ LET yielded_fd140 == (fd)[j] IN
                                                                                                                                                                                                     /\ yielded_fd140
                                                                                                                                                                                                     /\ plog' = plog17
                                                                                                                                                                                                     /\ log' = log14
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                ELSE /\ plog' = plog17
                                                                                                                                                                                     /\ log' = log14
                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED << network, 
                                                                                                                                                                                                     commitIndex, 
                                                                                                                                                                                                     sm, 
                                                                                                                                                                                                     smDomain >>
                                                                                                                                                        ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log14)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                   THEN /\ log' = [log14 EXCEPT ![i] = ((log14)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                        /\ LET value310 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                             IF ((value310).cmd) = (LogConcat)
                                                                                                                                                                                THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value310).entries)]
                                                                                                                                                                                     /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                           THEN /\ LET result88 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                     /\ sm' = [sm EXCEPT ![i] = (result88)[1]]
                                                                                                                                                                                                     /\ smDomain' = [smDomain EXCEPT ![i] = (result88)[2]]
                                                                                                                                                                                                     /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                     /\ \/ /\ LET value440 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                /\ ((network)[j]).enabled
                                                                                                                                                                                                                /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value440), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                        \/ /\ LET yielded_fd141 == (fd)[j] IN
                                                                                                                                                                                                                /\ yielded_fd141
                                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           /\ UNCHANGED network
                                                                                                                                                                                           ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED << network, 
                                                                                                                                                                                                                commitIndex, 
                                                                                                                                                                                                                sm, 
                                                                                                                                                                                                                smDomain >>
                                                                                                                                                                                ELSE /\ IF ((value310).cmd) = (LogPop)
                                                                                                                                                                                           THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                                                /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                      THEN /\ LET result89 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result89)[1]]
                                                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result89)[2]]
                                                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                /\ \/ /\ LET value441 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                                                           /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value441), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                   \/ /\ LET yielded_fd142 == (fd)[j] IN
                                                                                                                                                                                                                           /\ yielded_fd142
                                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                                                                      ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           /\ UNCHANGED << network, 
                                                                                                                                                                                                                           commitIndex, 
                                                                                                                                                                                                                           sm, 
                                                                                                                                                                                                                           smDomain >>
                                                                                                                                                                                           ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                      THEN /\ LET result90 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result90)[1]]
                                                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result90)[2]]
                                                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                /\ \/ /\ LET value442 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                                                           /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value442), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                   \/ /\ LET yielded_fd143 == (fd)[j] IN
                                                                                                                                                                                                                           /\ yielded_fd143
                                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                                                                      ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           /\ UNCHANGED << network, 
                                                                                                                                                                                                                           commitIndex, 
                                                                                                                                                                                                                           sm, 
                                                                                                                                                                                                                           smDomain >>
                                                                                                                                                                                                /\ plog' = plog
                                                                                                                                                                   ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log14)[i])) >= (index))) /\ (((((log14)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                              THEN /\ LET result91 == ApplyLog((log14)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result91)[1]]
                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result91)[2]]
                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                        /\ \/ /\ LET value443 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                   /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value443), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                   /\ log' = log14
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           \/ /\ LET yielded_fd144 == (fd)[j] IN
                                                                                                                                                                                                   /\ yielded_fd144
                                                                                                                                                                                                   /\ log' = log14
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                              ELSE /\ log' = log14
                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   /\ UNCHANGED << network, 
                                                                                                                                                                                                   commitIndex, 
                                                                                                                                                                                                   sm, 
                                                                                                                                                                                                   smDomain >>
                                                                                                                                                                        /\ plog' = plog
                                                                                                                              ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                         THEN /\ log' = [log EXCEPT ![i] = ((log)[i]) \o ((m[self]).mentries)]
                                                                                                                                              /\ LET value311 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                   IF ((value311).cmd) = (LogConcat)
                                                                                                                                                      THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value311).entries)]
                                                                                                                                                           /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                 THEN /\ LET result92 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result92)[1]]
                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result92)[2]]
                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                           /\ \/ /\ LET value444 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                      /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value444), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              \/ /\ LET yielded_fd145 == (fd)[j] IN
                                                                                                                                                                                      /\ yielded_fd145
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                                 ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                      /\ UNCHANGED << network, 
                                                                                                                                                                                      commitIndex, 
                                                                                                                                                                                      sm, 
                                                                                                                                                                                      smDomain >>
                                                                                                                                                      ELSE /\ IF ((value311).cmd) = (LogPop)
                                                                                                                                                                 THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                      /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                            THEN /\ LET result93 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result93)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result93)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value445 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value445), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd146 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd146
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED << network, 
                                                                                                                                                                                                 commitIndex, 
                                                                                                                                                                                                 sm, 
                                                                                                                                                                                                 smDomain >>
                                                                                                                                                                 ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                            THEN /\ LET result94 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result94)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result94)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value446 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value446), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd147 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd147
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED << network, 
                                                                                                                                                                                                 commitIndex, 
                                                                                                                                                                                                 sm, 
                                                                                                                                                                                                 smDomain >>
                                                                                                                                                                      /\ plog' = plog
                                                                                                                                         ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                    THEN /\ LET result95 == ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                              /\ sm' = [sm EXCEPT ![i] = (result95)[1]]
                                                                                                                                                              /\ smDomain' = [smDomain EXCEPT ![i] = (result95)[2]]
                                                                                                                                                              /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                              /\ \/ /\ LET value447 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                         /\ ((network)[j]).enabled
                                                                                                                                                                         /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                         /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value447), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                 \/ /\ LET yielded_fd148 == (fd)[j] IN
                                                                                                                                                                         /\ yielded_fd148
                                                                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                    /\ UNCHANGED network
                                                                                                                                                    ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                         /\ UNCHANGED << network, 
                                                                                                                                                                         commitIndex, 
                                                                                                                                                                         sm, 
                                                                                                                                                                         smDomain >>
                                                                                                                                              /\ UNCHANGED << log, 
                                                                                                                                                              plog >>
                                                                                                      ELSE /\ IF (((m[self]).mterm) < ((currentTerm)[i])) \/ (((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                 THEN /\ \/ /\ LET value17 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                 /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value17), enabled |-> ((network)[j]).enabled]]
                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                         \/ /\ LET yielded_fd03 == (fd)[j] IN
                                                                                                                                 /\ yielded_fd03
                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                            /\ UNCHANGED network
                                                                                                                      /\ UNCHANGED << commitIndex, 
                                                                                                                                      log, 
                                                                                                                                      plog, 
                                                                                                                                      sm, 
                                                                                                                                      smDomain >>
                                                                                                                 ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK), 
                                                                                                                                "Failure of assertion at line 2672, column 27.")
                                                                                                                      /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                           IF ((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m[self]).mentries)[1]).term))
                                                                                                                              THEN /\ LET log15 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))] IN
                                                                                                                                        LET value23 == [cmd |-> LogPop] IN
                                                                                                                                          IF ((value23).cmd) = (LogConcat)
                                                                                                                                             THEN /\ LET plog18 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value23).entries)] IN
                                                                                                                                                       IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log15)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                          THEN /\ log' = [log15 EXCEPT ![i] = ((log15)[i]) \o ((m[self]).mentries)]
                                                                                                                                                               /\ LET value312 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                    IF ((value312).cmd) = (LogConcat)
                                                                                                                                                                       THEN /\ plog' = [plog18 EXCEPT ![i] = ((plog18)[i]) \o ((value312).entries)]
                                                                                                                                                                            /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                  THEN /\ LET result96 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result96)[1]]
                                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result96)[2]]
                                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                            /\ \/ /\ LET value448 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                                       /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value448), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               \/ /\ LET yielded_fd149 == (fd)[j] IN
                                                                                                                                                                                                       /\ yielded_fd149
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                                                  ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       /\ UNCHANGED << network, 
                                                                                                                                                                                                       commitIndex, 
                                                                                                                                                                                                       sm, 
                                                                                                                                                                                                       smDomain >>
                                                                                                                                                                       ELSE /\ IF ((value312).cmd) = (LogPop)
                                                                                                                                                                                  THEN /\ plog' = [plog18 EXCEPT ![i] = SubSeq((plog18)[i], 1, (Len((plog18)[i])) - (1))]
                                                                                                                                                                                       /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                             THEN /\ LET result97 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                       /\ sm' = [sm EXCEPT ![i] = (result97)[1]]
                                                                                                                                                                                                       /\ smDomain' = [smDomain EXCEPT ![i] = (result97)[2]]
                                                                                                                                                                                                       /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                       /\ \/ /\ LET value449 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                  /\ ((network)[j]).enabled
                                                                                                                                                                                                                  /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value449), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          \/ /\ LET yielded_fd150 == (fd)[j] IN
                                                                                                                                                                                                                  /\ yielded_fd150
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                             /\ UNCHANGED network
                                                                                                                                                                                             ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED << network, 
                                                                                                                                                                                                                  commitIndex, 
                                                                                                                                                                                                                  sm, 
                                                                                                                                                                                                                  smDomain >>
                                                                                                                                                                                  ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                             THEN /\ LET result98 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                       /\ sm' = [sm EXCEPT ![i] = (result98)[1]]
                                                                                                                                                                                                       /\ smDomain' = [smDomain EXCEPT ![i] = (result98)[2]]
                                                                                                                                                                                                       /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                       /\ \/ /\ LET value450 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                  /\ ((network)[j]).enabled
                                                                                                                                                                                                                  /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value450), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                  /\ plog' = plog18
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          \/ /\ LET yielded_fd151 == (fd)[j] IN
                                                                                                                                                                                                                  /\ yielded_fd151
                                                                                                                                                                                                                  /\ plog' = plog18
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                             /\ UNCHANGED network
                                                                                                                                                                                             ELSE /\ plog' = plog18
                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED << network, 
                                                                                                                                                                                                                  commitIndex, 
                                                                                                                                                                                                                  sm, 
                                                                                                                                                                                                                  smDomain >>
                                                                                                                                                          ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log15)[i])) >= (index))) /\ (((((log15)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                     THEN /\ LET result99 == ApplyLog((log15)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result99)[1]]
                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result99)[2]]
                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                               /\ \/ /\ LET value451 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                          /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value451), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                          /\ plog' = plog18
                                                                                                                                                                                          /\ log' = log15
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                  \/ /\ LET yielded_fd152 == (fd)[j] IN
                                                                                                                                                                                          /\ yielded_fd152
                                                                                                                                                                                          /\ plog' = plog18
                                                                                                                                                                                          /\ log' = log15
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                     ELSE /\ plog' = plog18
                                                                                                                                                                          /\ log' = log15
                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                          /\ UNCHANGED << network, 
                                                                                                                                                                                          commitIndex, 
                                                                                                                                                                                          sm, 
                                                                                                                                                                                          smDomain >>
                                                                                                                                             ELSE /\ IF ((value23).cmd) = (LogPop)
                                                                                                                                                        THEN /\ LET plog19 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))] IN
                                                                                                                                                                  IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log15)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                     THEN /\ log' = [log15 EXCEPT ![i] = ((log15)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                          /\ LET value313 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                               IF ((value313).cmd) = (LogConcat)
                                                                                                                                                                                  THEN /\ plog' = [plog19 EXCEPT ![i] = ((plog19)[i]) \o ((value313).entries)]
                                                                                                                                                                                       /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                             THEN /\ LET result100 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                       /\ sm' = [sm EXCEPT ![i] = (result100)[1]]
                                                                                                                                                                                                       /\ smDomain' = [smDomain EXCEPT ![i] = (result100)[2]]
                                                                                                                                                                                                       /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                       /\ \/ /\ LET value452 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                  /\ ((network)[j]).enabled
                                                                                                                                                                                                                  /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value452), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          \/ /\ LET yielded_fd153 == (fd)[j] IN
                                                                                                                                                                                                                  /\ yielded_fd153
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                             /\ UNCHANGED network
                                                                                                                                                                                             ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED << network, 
                                                                                                                                                                                                                  commitIndex, 
                                                                                                                                                                                                                  sm, 
                                                                                                                                                                                                                  smDomain >>
                                                                                                                                                                                  ELSE /\ IF ((value313).cmd) = (LogPop)
                                                                                                                                                                                             THEN /\ plog' = [plog19 EXCEPT ![i] = SubSeq((plog19)[i], 1, (Len((plog19)[i])) - (1))]
                                                                                                                                                                                                  /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                        THEN /\ LET result101 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result101)[1]]
                                                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result101)[2]]
                                                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                  /\ \/ /\ LET value453 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                                                             /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value453), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     \/ /\ LET yielded_fd154 == (fd)[j] IN
                                                                                                                                                                                                                             /\ yielded_fd154
                                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                             /\ UNCHANGED << network, 
                                                                                                                                                                                                                             commitIndex, 
                                                                                                                                                                                                                             sm, 
                                                                                                                                                                                                                             smDomain >>
                                                                                                                                                                                             ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                        THEN /\ LET result102 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result102)[1]]
                                                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result102)[2]]
                                                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                  /\ \/ /\ LET value454 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                                                             /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value454), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                             /\ plog' = plog19
                                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     \/ /\ LET yielded_fd155 == (fd)[j] IN
                                                                                                                                                                                                                             /\ yielded_fd155
                                                                                                                                                                                                                             /\ plog' = plog19
                                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                                                        ELSE /\ plog' = plog19
                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                             /\ UNCHANGED << network, 
                                                                                                                                                                                                                             commitIndex, 
                                                                                                                                                                                                                             sm, 
                                                                                                                                                                                                                             smDomain >>
                                                                                                                                                                     ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log15)[i])) >= (index))) /\ (((((log15)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                THEN /\ LET result103 == ApplyLog((log15)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result103)[1]]
                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result103)[2]]
                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                          /\ \/ /\ LET value455 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                     /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value455), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                     /\ plog' = plog19
                                                                                                                                                                                                     /\ log' = log15
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             \/ /\ LET yielded_fd156 == (fd)[j] IN
                                                                                                                                                                                                     /\ yielded_fd156
                                                                                                                                                                                                     /\ plog' = plog19
                                                                                                                                                                                                     /\ log' = log15
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                ELSE /\ plog' = plog19
                                                                                                                                                                                     /\ log' = log15
                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED << network, 
                                                                                                                                                                                                     commitIndex, 
                                                                                                                                                                                                     sm, 
                                                                                                                                                                                                     smDomain >>
                                                                                                                                                        ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log15)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                   THEN /\ log' = [log15 EXCEPT ![i] = ((log15)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                        /\ LET value314 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                             IF ((value314).cmd) = (LogConcat)
                                                                                                                                                                                THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value314).entries)]
                                                                                                                                                                                     /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                           THEN /\ LET result104 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                     /\ sm' = [sm EXCEPT ![i] = (result104)[1]]
                                                                                                                                                                                                     /\ smDomain' = [smDomain EXCEPT ![i] = (result104)[2]]
                                                                                                                                                                                                     /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                     /\ \/ /\ LET value456 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                /\ ((network)[j]).enabled
                                                                                                                                                                                                                /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value456), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                        \/ /\ LET yielded_fd157 == (fd)[j] IN
                                                                                                                                                                                                                /\ yielded_fd157
                                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           /\ UNCHANGED network
                                                                                                                                                                                           ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED << network, 
                                                                                                                                                                                                                commitIndex, 
                                                                                                                                                                                                                sm, 
                                                                                                                                                                                                                smDomain >>
                                                                                                                                                                                ELSE /\ IF ((value314).cmd) = (LogPop)
                                                                                                                                                                                           THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                                                /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                      THEN /\ LET result105 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result105)[1]]
                                                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result105)[2]]
                                                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                /\ \/ /\ LET value457 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                                                           /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value457), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                   \/ /\ LET yielded_fd158 == (fd)[j] IN
                                                                                                                                                                                                                           /\ yielded_fd158
                                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                                                                      ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           /\ UNCHANGED << network, 
                                                                                                                                                                                                                           commitIndex, 
                                                                                                                                                                                                                           sm, 
                                                                                                                                                                                                                           smDomain >>
                                                                                                                                                                                           ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                      THEN /\ LET result106 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result106)[1]]
                                                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result106)[2]]
                                                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                /\ \/ /\ LET value458 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                                                           /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value458), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                   \/ /\ LET yielded_fd159 == (fd)[j] IN
                                                                                                                                                                                                                           /\ yielded_fd159
                                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                                                                      ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           /\ UNCHANGED << network, 
                                                                                                                                                                                                                           commitIndex, 
                                                                                                                                                                                                                           sm, 
                                                                                                                                                                                                                           smDomain >>
                                                                                                                                                                                                /\ plog' = plog
                                                                                                                                                                   ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log15)[i])) >= (index))) /\ (((((log15)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                              THEN /\ LET result107 == ApplyLog((log15)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result107)[1]]
                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result107)[2]]
                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                        /\ \/ /\ LET value459 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                   /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value459), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                   /\ log' = log15
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           \/ /\ LET yielded_fd160 == (fd)[j] IN
                                                                                                                                                                                                   /\ yielded_fd160
                                                                                                                                                                                                   /\ log' = log15
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                              ELSE /\ log' = log15
                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   /\ UNCHANGED << network, 
                                                                                                                                                                                                   commitIndex, 
                                                                                                                                                                                                   sm, 
                                                                                                                                                                                                   smDomain >>
                                                                                                                                                                        /\ plog' = plog
                                                                                                                              ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                         THEN /\ log' = [log EXCEPT ![i] = ((log)[i]) \o ((m[self]).mentries)]
                                                                                                                                              /\ LET value315 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                   IF ((value315).cmd) = (LogConcat)
                                                                                                                                                      THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value315).entries)]
                                                                                                                                                           /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                 THEN /\ LET result108 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result108)[1]]
                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result108)[2]]
                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                           /\ \/ /\ LET value460 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                      /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value460), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              \/ /\ LET yielded_fd161 == (fd)[j] IN
                                                                                                                                                                                      /\ yielded_fd161
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                                 ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                      /\ UNCHANGED << network, 
                                                                                                                                                                                      commitIndex, 
                                                                                                                                                                                      sm, 
                                                                                                                                                                                      smDomain >>
                                                                                                                                                      ELSE /\ IF ((value315).cmd) = (LogPop)
                                                                                                                                                                 THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                      /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                            THEN /\ LET result109 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result109)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result109)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value461 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value461), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd162 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd162
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED << network, 
                                                                                                                                                                                                 commitIndex, 
                                                                                                                                                                                                 sm, 
                                                                                                                                                                                                 smDomain >>
                                                                                                                                                                 ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                            THEN /\ LET result110 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result110)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result110)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value462 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value462), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd163 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd163
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED << network, 
                                                                                                                                                                                                 commitIndex, 
                                                                                                                                                                                                 sm, 
                                                                                                                                                                                                 smDomain >>
                                                                                                                                                                      /\ plog' = plog
                                                                                                                                         ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                    THEN /\ LET result111 == ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                              /\ sm' = [sm EXCEPT ![i] = (result111)[1]]
                                                                                                                                                              /\ smDomain' = [smDomain EXCEPT ![i] = (result111)[2]]
                                                                                                                                                              /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                              /\ \/ /\ LET value463 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                         /\ ((network)[j]).enabled
                                                                                                                                                                         /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                         /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value463), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                 \/ /\ LET yielded_fd164 == (fd)[j] IN
                                                                                                                                                                         /\ yielded_fd164
                                                                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                    /\ UNCHANGED network
                                                                                                                                                    ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                         /\ UNCHANGED << network, 
                                                                                                                                                                         commitIndex, 
                                                                                                                                                                         sm, 
                                                                                                                                                                         smDomain >>
                                                                                                                                              /\ UNCHANGED << log, 
                                                                                                                                                              plog >>
                                                                                                           /\ state' = state
                                                                                       /\ UNCHANGED << currentTerm, 
                                                                                                       votedFor >>
                                                                            /\ UNCHANGED << nextIndex, 
                                                                                            matchIndex >>
                                                                       ELSE /\ IF ((m[self]).mtype) = (AppendEntriesResponse)
                                                                                  THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                                                             THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                                                                  /\ state' = [state EXCEPT ![self] = Follower]
                                                                                                  /\ votedFor' = [votedFor EXCEPT ![self] = Nil]
                                                                                                  /\ leader' = [leader EXCEPT ![self] = Nil]
                                                                                                  /\ IF ((m[self]).mterm) < ((currentTerm')[self])
                                                                                                        THEN /\ TRUE
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             /\ UNCHANGED << nextIndex, 
                                                                                                                             matchIndex >>
                                                                                                        ELSE /\ LET i == self IN
                                                                                                                  LET j == (m[self]).msource IN
                                                                                                                    /\ Assert(((m[self]).mterm) = ((currentTerm')[i]), 
                                                                                                                              "Failure of assertion at line 3141, column 27.")
                                                                                                                    /\ IF (m[self]).msuccess
                                                                                                                          THEN /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m[self]).mmatchIndex) + (1)]]
                                                                                                                               /\ matchIndex' = [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m[self]).mmatchIndex]]
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                          ELSE /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]]
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                               /\ UNCHANGED matchIndex
                                                                                             ELSE /\ IF ((m[self]).mterm) < ((currentTerm)[self])
                                                                                                        THEN /\ TRUE
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             /\ UNCHANGED << nextIndex, 
                                                                                                                             matchIndex >>
                                                                                                        ELSE /\ LET i == self IN
                                                                                                                  LET j == (m[self]).msource IN
                                                                                                                    /\ Assert(((m[self]).mterm) = ((currentTerm)[i]), 
                                                                                                                              "Failure of assertion at line 3161, column 27.")
                                                                                                                    /\ IF (m[self]).msuccess
                                                                                                                          THEN /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m[self]).mmatchIndex) + (1)]]
                                                                                                                               /\ matchIndex' = [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m[self]).mmatchIndex]]
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                          ELSE /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]]
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                               /\ UNCHANGED matchIndex
                                                                                                  /\ UNCHANGED << state, 
                                                                                                                  currentTerm, 
                                                                                                                  votedFor, 
                                                                                                                  leader >>
                                                                                       /\ UNCHANGED << network, 
                                                                                                       log, 
                                                                                                       plog >>
                                                                                  ELSE /\ IF (((m[self]).mtype) = (ClientPutRequest)) \/ (((m[self]).mtype) = (ClientGetRequest))
                                                                                             THEN /\ IF ((state)[self]) = (Leader)
                                                                                                        THEN /\ LET entry == [term |-> (currentTerm)[self], cmd |-> (m[self]).mcmd, client |-> (m[self]).msource] IN
                                                                                                                  /\ log' = [log EXCEPT ![self] = Append((log)[self], entry)]
                                                                                                                  /\ LET value50 == [cmd |-> LogConcat, entries |-> <<entry>>] IN
                                                                                                                       IF ((value50).cmd) = (LogConcat)
                                                                                                                          THEN /\ plog' = [plog EXCEPT ![self] = ((plog)[self]) \o ((value50).entries)]
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                          ELSE /\ IF ((value50).cmd) = (LogPop)
                                                                                                                                     THEN /\ plog' = [plog EXCEPT ![self] = SubSeq((plog)[self], 1, (Len((plog)[self])) - (1))]
                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                     ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                          /\ plog' = plog
                                                                                                             /\ UNCHANGED network
                                                                                                        ELSE /\ LET i == self IN
                                                                                                                  LET j == (m[self]).msource IN
                                                                                                                    LET respType == IF (((m[self]).mcmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse IN
                                                                                                                      LET value60 == [mtype |-> respType, msuccess |-> FALSE, mresponse |-> [idx |-> ((m[self]).mcmd).idx, key |-> ((m[self]).mcmd).key], mleaderHint |-> (leader)[i], msource |-> i, mdest |-> j] IN
                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                        /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value60), enabled |-> ((network)[j]).enabled]]
                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             /\ UNCHANGED << log, 
                                                                                                                             plog >>
                                                                                             ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                  /\ UNCHANGED << network, 
                                                                                                                  log, 
                                                                                                                  plog >>
                                                                                       /\ UNCHANGED << state, 
                                                                                                       currentTerm, 
                                                                                                       nextIndex, 
                                                                                                       matchIndex, 
                                                                                                       votedFor, 
                                                                                                       leader >>
                                                                            /\ UNCHANGED << commitIndex, 
                                                                                            sm, 
                                                                                            smDomain >>
                                                                 /\ UNCHANGED << votesResponded, 
                                                                                 votesGranted >>
                                      ELSE /\ IF ((m[self]).mtype) = (RequestVoteRequest)
                                                 THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                            THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                                 /\ state' = [state EXCEPT ![self] = Follower]
                                                                 /\ LET votedFor4 == [votedFor EXCEPT ![self] = Nil] IN
                                                                      /\ leader' = [leader EXCEPT ![self] = Nil]
                                                                      /\ LET i == self IN
                                                                           LET j == (m[self]).msource IN
                                                                             LET logOK == (((m[self]).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m[self]).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m[self]).mlastLogIndex) >= (Len((log)[i])))) IN
                                                                               LET grant == ((((m[self]).mterm) = ((currentTerm')[i])) /\ (logOK)) /\ (((votedFor4)[self]) \in ({Nil, j})) IN
                                                                                 /\ Assert(((m[self]).mterm) <= ((currentTerm')[i]), 
                                                                                           "Failure of assertion at line 3225, column 21.")
                                                                                 /\ IF grant
                                                                                       THEN /\ votedFor' = [votedFor4 EXCEPT ![i] = j]
                                                                                            /\ \/ /\ LET value04 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm')[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                                       /\ ((network)[j]).enabled
                                                                                                       /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value04), enabled |-> ((network)[j]).enabled]]
                                                                                                       /\ IF Debug
                                                                                                             THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                               \/ /\ LET yielded_fd20 == (fd)[j] IN
                                                                                                       /\ yielded_fd20
                                                                                                       /\ IF Debug
                                                                                                             THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                  /\ UNCHANGED network
                                                                                       ELSE /\ \/ /\ LET value05 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm')[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                                       /\ ((network)[j]).enabled
                                                                                                       /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value05), enabled |-> ((network)[j]).enabled]]
                                                                                                       /\ IF Debug
                                                                                                             THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                                  /\ votedFor' = votedFor4
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ votedFor' = votedFor4
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                               \/ /\ LET yielded_fd21 == (fd)[j] IN
                                                                                                       /\ yielded_fd21
                                                                                                       /\ IF Debug
                                                                                                             THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                                  /\ votedFor' = votedFor4
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ votedFor' = votedFor4
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                  /\ UNCHANGED network
                                                            ELSE /\ LET i == self IN
                                                                      LET j == (m[self]).msource IN
                                                                        LET logOK == (((m[self]).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m[self]).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m[self]).mlastLogIndex) >= (Len((log)[i])))) IN
                                                                          LET grant == ((((m[self]).mterm) = ((currentTerm)[i])) /\ (logOK)) /\ (((votedFor)[self]) \in ({Nil, j})) IN
                                                                            /\ Assert(((m[self]).mterm) <= ((currentTerm)[i]), 
                                                                                      "Failure of assertion at line 3289, column 19.")
                                                                            /\ IF grant
                                                                                  THEN /\ votedFor' = [votedFor EXCEPT ![i] = j]
                                                                                       /\ \/ /\ LET value06 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                                  /\ ((network)[j]).enabled
                                                                                                  /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value06), enabled |-> ((network)[j]).enabled]]
                                                                                                  /\ IF Debug
                                                                                                        THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                          \/ /\ LET yielded_fd22 == (fd)[j] IN
                                                                                                  /\ yielded_fd22
                                                                                                  /\ IF Debug
                                                                                                        THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                             /\ UNCHANGED network
                                                                                  ELSE /\ \/ /\ LET value07 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                                  /\ ((network)[j]).enabled
                                                                                                  /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value07), enabled |-> ((network)[j]).enabled]]
                                                                                                  /\ IF Debug
                                                                                                        THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                          \/ /\ LET yielded_fd23 == (fd)[j] IN
                                                                                                  /\ yielded_fd23
                                                                                                  /\ IF Debug
                                                                                                        THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                             /\ UNCHANGED network
                                                                                       /\ UNCHANGED votedFor
                                                                 /\ UNCHANGED << state, 
                                                                                 currentTerm, 
                                                                                 leader >>
                                                      /\ UNCHANGED << commitIndex, 
                                                                      nextIndex, 
                                                                      matchIndex, 
                                                                      log, 
                                                                      plog, 
                                                                      votesResponded, 
                                                                      votesGranted, 
                                                                      sm, 
                                                                      smDomain >>
                                                 ELSE /\ IF ((m[self]).mtype) = (RequestVoteResponse)
                                                            THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                                       THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                                            /\ state' = [state EXCEPT ![self] = Follower]
                                                                            /\ votedFor' = [votedFor EXCEPT ![self] = Nil]
                                                                            /\ leader' = [leader EXCEPT ![self] = Nil]
                                                                            /\ IF ((m[self]).mterm) < ((currentTerm')[self])
                                                                                  THEN /\ TRUE
                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                       /\ UNCHANGED << votesResponded, 
                                                                                                       votesGranted >>
                                                                                  ELSE /\ LET i == self IN
                                                                                            LET j == (m[self]).msource IN
                                                                                              /\ Assert(((m[self]).mterm) = ((currentTerm')[i]), 
                                                                                                        "Failure of assertion at line 3357, column 23.")
                                                                                              /\ votesResponded' = [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})]
                                                                                              /\ IF (m[self]).mvoteGranted
                                                                                                    THEN /\ votesGranted' = [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})]
                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                    ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                         /\ UNCHANGED votesGranted
                                                                       ELSE /\ IF ((m[self]).mterm) < ((currentTerm)[self])
                                                                                  THEN /\ TRUE
                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                       /\ UNCHANGED << votesResponded, 
                                                                                                       votesGranted >>
                                                                                  ELSE /\ LET i == self IN
                                                                                            LET j == (m[self]).msource IN
                                                                                              /\ Assert(((m[self]).mterm) = ((currentTerm)[i]), 
                                                                                                        "Failure of assertion at line 3376, column 23.")
                                                                                              /\ votesResponded' = [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})]
                                                                                              /\ IF (m[self]).mvoteGranted
                                                                                                    THEN /\ votesGranted' = [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})]
                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                    ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                         /\ UNCHANGED votesGranted
                                                                            /\ UNCHANGED << state, 
                                                                                            currentTerm, 
                                                                                            votedFor, 
                                                                                            leader >>
                                                                 /\ UNCHANGED << network, 
                                                                                 commitIndex, 
                                                                                 nextIndex, 
                                                                                 matchIndex, 
                                                                                 log, 
                                                                                 plog, 
                                                                                 sm, 
                                                                                 smDomain >>
                                                            ELSE /\ IF ((m[self]).mtype) = (AppendEntriesRequest)
                                                                       THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                                                  THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                                                       /\ LET state4 == [state EXCEPT ![self] = Follower] IN
                                                                                            /\ votedFor' = [votedFor EXCEPT ![self] = Nil]
                                                                                            /\ LET leader4 == [leader EXCEPT ![self] = Nil] IN
                                                                                                 /\ leader' = [leader4 EXCEPT ![self] = (m[self]).msource]
                                                                                                 /\ LET i == self IN
                                                                                                      LET j == (m[self]).msource IN
                                                                                                        LET logOK == (((m[self]).mprevLogIndex) = (0)) \/ (((((m[self]).mprevLogIndex) > (0)) /\ (((m[self]).mprevLogIndex) <= (Len((log)[i])))) /\ (((m[self]).mprevLogTerm) = ((((log)[i])[(m[self]).mprevLogIndex]).term))) IN
                                                                                                          /\ Assert(((m[self]).mterm) <= ((currentTerm')[i]), 
                                                                                                                    "Failure of assertion at line 3400, column 27.")
                                                                                                          /\ IF (((m[self]).mterm) = ((currentTerm')[i])) /\ (((state4)[i]) = (Candidate))
                                                                                                                THEN /\ state' = [state4 EXCEPT ![i] = Follower]
                                                                                                                     /\ IF (((m[self]).mterm) < ((currentTerm')[i])) \/ (((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state')[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                           THEN /\ \/ /\ LET value18 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                           /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value18), enabled |-> ((network)[j]).enabled]]
                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                   \/ /\ LET yielded_fd04 == (fd)[j] IN
                                                                                                                                           /\ yielded_fd04
                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                      /\ UNCHANGED network
                                                                                                                                /\ UNCHANGED << commitIndex, 
                                                                                                                                                log, 
                                                                                                                                                plog, 
                                                                                                                                                sm, 
                                                                                                                                                smDomain >>
                                                                                                                           ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state')[i]) = (Follower))) /\ (logOK), 
                                                                                                                                          "Failure of assertion at line 3418, column 31.")
                                                                                                                                /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                     IF ((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m[self]).mentries)[1]).term))
                                                                                                                                        THEN /\ LET log16 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))] IN
                                                                                                                                                  LET value24 == [cmd |-> LogPop] IN
                                                                                                                                                    IF ((value24).cmd) = (LogConcat)
                                                                                                                                                       THEN /\ LET plog20 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value24).entries)] IN
                                                                                                                                                                 IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log16)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                    THEN /\ log' = [log16 EXCEPT ![i] = ((log16)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                         /\ LET value316 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                              IF ((value316).cmd) = (LogConcat)
                                                                                                                                                                                 THEN /\ plog' = [plog20 EXCEPT ![i] = ((plog20)[i]) \o ((value316).entries)]
                                                                                                                                                                                      /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                            THEN /\ LET result112 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result112)[1]]
                                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result112)[2]]
                                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                      /\ \/ /\ LET value464 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                                 /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value464), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         \/ /\ LET yielded_fd165 == (fd)[j] IN
                                                                                                                                                                                                                 /\ yielded_fd165
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                                            ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                 /\ UNCHANGED << network, 
                                                                                                                                                                                                                 commitIndex, 
                                                                                                                                                                                                                 sm, 
                                                                                                                                                                                                                 smDomain >>
                                                                                                                                                                                 ELSE /\ IF ((value316).cmd) = (LogPop)
                                                                                                                                                                                            THEN /\ plog' = [plog20 EXCEPT ![i] = SubSeq((plog20)[i], 1, (Len((plog20)[i])) - (1))]
                                                                                                                                                                                                 /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                       THEN /\ LET result113 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result113)[1]]
                                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result113)[2]]
                                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                 /\ \/ /\ LET value465 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                                            /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value465), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                    \/ /\ LET yielded_fd166 == (fd)[j] IN
                                                                                                                                                                                                                            /\ yielded_fd166
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                                       ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED << network, 
                                                                                                                                                                                                                            commitIndex, 
                                                                                                                                                                                                                            sm, 
                                                                                                                                                                                                                            smDomain >>
                                                                                                                                                                                            ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                       THEN /\ LET result114 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result114)[1]]
                                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result114)[2]]
                                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                 /\ \/ /\ LET value466 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                                            /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value466), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                            /\ plog' = plog20
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                    \/ /\ LET yielded_fd167 == (fd)[j] IN
                                                                                                                                                                                                                            /\ yielded_fd167
                                                                                                                                                                                                                            /\ plog' = plog20
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                                       ELSE /\ plog' = plog20
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED << network, 
                                                                                                                                                                                                                            commitIndex, 
                                                                                                                                                                                                                            sm, 
                                                                                                                                                                                                                            smDomain >>
                                                                                                                                                                    ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log16)[i])) >= (index))) /\ (((((log16)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                               THEN /\ LET result115 == ApplyLog((log16)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result115)[1]]
                                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result115)[2]]
                                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                         /\ \/ /\ LET value467 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                                    /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value467), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                    /\ plog' = plog20
                                                                                                                                                                                                    /\ log' = log16
                                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            \/ /\ LET yielded_fd168 == (fd)[j] IN
                                                                                                                                                                                                    /\ yielded_fd168
                                                                                                                                                                                                    /\ plog' = plog20
                                                                                                                                                                                                    /\ log' = log16
                                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                                                               ELSE /\ plog' = plog20
                                                                                                                                                                                    /\ log' = log16
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                    /\ UNCHANGED << network, 
                                                                                                                                                                                                    commitIndex, 
                                                                                                                                                                                                    sm, 
                                                                                                                                                                                                    smDomain >>
                                                                                                                                                       ELSE /\ IF ((value24).cmd) = (LogPop)
                                                                                                                                                                  THEN /\ LET plog21 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))] IN
                                                                                                                                                                            IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log16)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                               THEN /\ log' = [log16 EXCEPT ![i] = ((log16)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                    /\ LET value317 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                                         IF ((value317).cmd) = (LogConcat)
                                                                                                                                                                                            THEN /\ plog' = [plog21 EXCEPT ![i] = ((plog21)[i]) \o ((value317).entries)]
                                                                                                                                                                                                 /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                       THEN /\ LET result116 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result116)[1]]
                                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result116)[2]]
                                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                 /\ \/ /\ LET value468 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                                            /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value468), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                    \/ /\ LET yielded_fd169 == (fd)[j] IN
                                                                                                                                                                                                                            /\ yielded_fd169
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                                       ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED << network, 
                                                                                                                                                                                                                            commitIndex, 
                                                                                                                                                                                                                            sm, 
                                                                                                                                                                                                                            smDomain >>
                                                                                                                                                                                            ELSE /\ IF ((value317).cmd) = (LogPop)
                                                                                                                                                                                                       THEN /\ plog' = [plog21 EXCEPT ![i] = SubSeq((plog21)[i], 1, (Len((plog21)[i])) - (1))]
                                                                                                                                                                                                            /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                                  THEN /\ LET result117 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result117)[1]]
                                                                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result117)[2]]
                                                                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                            /\ \/ /\ LET value469 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                                                                       /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value469), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                               \/ /\ LET yielded_fd170 == (fd)[j] IN
                                                                                                                                                                                                                                       /\ yielded_fd170
                                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                                                                                  ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                       /\ UNCHANGED << network, 
                                                                                                                                                                                                                                       commitIndex, 
                                                                                                                                                                                                                                       sm, 
                                                                                                                                                                                                                                       smDomain >>
                                                                                                                                                                                                       ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                                  THEN /\ LET result118 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result118)[1]]
                                                                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result118)[2]]
                                                                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                            /\ \/ /\ LET value470 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                                                                       /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value470), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                                       /\ plog' = plog21
                                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                               \/ /\ LET yielded_fd171 == (fd)[j] IN
                                                                                                                                                                                                                                       /\ yielded_fd171
                                                                                                                                                                                                                                       /\ plog' = plog21
                                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                                                                                  ELSE /\ plog' = plog21
                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                       /\ UNCHANGED << network, 
                                                                                                                                                                                                                                       commitIndex, 
                                                                                                                                                                                                                                       sm, 
                                                                                                                                                                                                                                       smDomain >>
                                                                                                                                                                               ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log16)[i])) >= (index))) /\ (((((log16)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                          THEN /\ LET result119 == ApplyLog((log16)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result119)[1]]
                                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result119)[2]]
                                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                    /\ \/ /\ LET value471 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                                               /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value471), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                               /\ plog' = plog21
                                                                                                                                                                                                               /\ log' = log16
                                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       \/ /\ LET yielded_fd172 == (fd)[j] IN
                                                                                                                                                                                                               /\ yielded_fd172
                                                                                                                                                                                                               /\ plog' = plog21
                                                                                                                                                                                                               /\ log' = log16
                                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                                                          ELSE /\ plog' = plog21
                                                                                                                                                                                               /\ log' = log16
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               /\ UNCHANGED << network, 
                                                                                                                                                                                                               commitIndex, 
                                                                                                                                                                                                               sm, 
                                                                                                                                                                                                               smDomain >>
                                                                                                                                                                  ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log16)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                             THEN /\ log' = [log16 EXCEPT ![i] = ((log16)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                  /\ LET value318 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                                       IF ((value318).cmd) = (LogConcat)
                                                                                                                                                                                          THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value318).entries)]
                                                                                                                                                                                               /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                     THEN /\ LET result120 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result120)[1]]
                                                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result120)[2]]
                                                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                               /\ \/ /\ LET value472 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                                                          /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value472), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                  \/ /\ LET yielded_fd173 == (fd)[j] IN
                                                                                                                                                                                                                          /\ yielded_fd173
                                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                                                     ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          /\ UNCHANGED << network, 
                                                                                                                                                                                                                          commitIndex, 
                                                                                                                                                                                                                          sm, 
                                                                                                                                                                                                                          smDomain >>
                                                                                                                                                                                          ELSE /\ IF ((value318).cmd) = (LogPop)
                                                                                                                                                                                                     THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                                                          /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                                THEN /\ LET result121 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result121)[1]]
                                                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result121)[2]]
                                                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                          /\ \/ /\ LET value473 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                                                     /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value473), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                             \/ /\ LET yielded_fd174 == (fd)[j] IN
                                                                                                                                                                                                                                     /\ yielded_fd174
                                                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                                                ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     /\ UNCHANGED << network, 
                                                                                                                                                                                                                                     commitIndex, 
                                                                                                                                                                                                                                     sm, 
                                                                                                                                                                                                                                     smDomain >>
                                                                                                                                                                                                     ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                                THEN /\ LET result122 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result122)[1]]
                                                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result122)[2]]
                                                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                          /\ \/ /\ LET value474 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                                                     /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value474), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                             \/ /\ LET yielded_fd175 == (fd)[j] IN
                                                                                                                                                                                                                                     /\ yielded_fd175
                                                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                                                ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     /\ UNCHANGED << network, 
                                                                                                                                                                                                                                     commitIndex, 
                                                                                                                                                                                                                                     sm, 
                                                                                                                                                                                                                                     smDomain >>
                                                                                                                                                                                                          /\ plog' = plog
                                                                                                                                                                             ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log16)[i])) >= (index))) /\ (((((log16)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                        THEN /\ LET result123 == ApplyLog((log16)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result123)[1]]
                                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result123)[2]]
                                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                  /\ \/ /\ LET value475 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                                             /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value475), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                             /\ log' = log16
                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                     \/ /\ LET yielded_fd176 == (fd)[j] IN
                                                                                                                                                                                                             /\ yielded_fd176
                                                                                                                                                                                                             /\ log' = log16
                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                                        ELSE /\ log' = log16
                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             /\ UNCHANGED << network, 
                                                                                                                                                                                                             commitIndex, 
                                                                                                                                                                                                             sm, 
                                                                                                                                                                                                             smDomain >>
                                                                                                                                                                                  /\ plog' = plog
                                                                                                                                        ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                   THEN /\ log' = [log EXCEPT ![i] = ((log)[i]) \o ((m[self]).mentries)]
                                                                                                                                                        /\ LET value319 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                             IF ((value319).cmd) = (LogConcat)
                                                                                                                                                                THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value319).entries)]
                                                                                                                                                                     /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                           THEN /\ LET result124 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                     /\ sm' = [sm EXCEPT ![i] = (result124)[1]]
                                                                                                                                                                                     /\ smDomain' = [smDomain EXCEPT ![i] = (result124)[2]]
                                                                                                                                                                                     /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                     /\ \/ /\ LET value476 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                /\ ((network)[j]).enabled
                                                                                                                                                                                                /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value476), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                        \/ /\ LET yielded_fd177 == (fd)[j] IN
                                                                                                                                                                                                /\ yielded_fd177
                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           /\ UNCHANGED network
                                                                                                                                                                           ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                /\ UNCHANGED << network, 
                                                                                                                                                                                                commitIndex, 
                                                                                                                                                                                                sm, 
                                                                                                                                                                                                smDomain >>
                                                                                                                                                                ELSE /\ IF ((value319).cmd) = (LogPop)
                                                                                                                                                                           THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                                /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                      THEN /\ LET result125 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result125)[1]]
                                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result125)[2]]
                                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                /\ \/ /\ LET value477 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                                           /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value477), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                   \/ /\ LET yielded_fd178 == (fd)[j] IN
                                                                                                                                                                                                           /\ yielded_fd178
                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                                                      ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           /\ UNCHANGED << network, 
                                                                                                                                                                                                           commitIndex, 
                                                                                                                                                                                                           sm, 
                                                                                                                                                                                                           smDomain >>
                                                                                                                                                                           ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                      THEN /\ LET result126 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result126)[1]]
                                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result126)[2]]
                                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                /\ \/ /\ LET value478 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                                           /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value478), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                   \/ /\ LET yielded_fd179 == (fd)[j] IN
                                                                                                                                                                                                           /\ yielded_fd179
                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                                                      ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           /\ UNCHANGED << network, 
                                                                                                                                                                                                           commitIndex, 
                                                                                                                                                                                                           sm, 
                                                                                                                                                                                                           smDomain >>
                                                                                                                                                                                /\ plog' = plog
                                                                                                                                                   ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                              THEN /\ LET result127 == ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result127)[1]]
                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result127)[2]]
                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                        /\ \/ /\ LET value479 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                   /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value479), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                           \/ /\ LET yielded_fd180 == (fd)[j] IN
                                                                                                                                                                                   /\ yielded_fd180
                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                              ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                   /\ UNCHANGED << network, 
                                                                                                                                                                                   commitIndex, 
                                                                                                                                                                                   sm, 
                                                                                                                                                                                   smDomain >>
                                                                                                                                                        /\ UNCHANGED << log, 
                                                                                                                                                                        plog >>
                                                                                                                ELSE /\ IF (((m[self]).mterm) < ((currentTerm')[i])) \/ (((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state4)[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                           THEN /\ \/ /\ LET value19 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                           /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value19), enabled |-> ((network)[j]).enabled]]
                                                                                                                                           /\ state' = state4
                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                   \/ /\ LET yielded_fd05 == (fd)[j] IN
                                                                                                                                           /\ yielded_fd05
                                                                                                                                           /\ state' = state4
                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                      /\ UNCHANGED network
                                                                                                                                /\ UNCHANGED << commitIndex, 
                                                                                                                                                log, 
                                                                                                                                                plog, 
                                                                                                                                                sm, 
                                                                                                                                                smDomain >>
                                                                                                                           ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state4)[i]) = (Follower))) /\ (logOK), 
                                                                                                                                          "Failure of assertion at line 3887, column 31.")
                                                                                                                                /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                     IF ((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m[self]).mentries)[1]).term))
                                                                                                                                        THEN /\ LET log17 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))] IN
                                                                                                                                                  LET value25 == [cmd |-> LogPop] IN
                                                                                                                                                    IF ((value25).cmd) = (LogConcat)
                                                                                                                                                       THEN /\ LET plog22 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value25).entries)] IN
                                                                                                                                                                 IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log17)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                    THEN /\ log' = [log17 EXCEPT ![i] = ((log17)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                         /\ LET value320 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                              IF ((value320).cmd) = (LogConcat)
                                                                                                                                                                                 THEN /\ plog' = [plog22 EXCEPT ![i] = ((plog22)[i]) \o ((value320).entries)]
                                                                                                                                                                                      /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                            THEN /\ LET result128 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result128)[1]]
                                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result128)[2]]
                                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                      /\ \/ /\ LET value480 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                                 /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value480), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                 /\ state' = state4
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         \/ /\ LET yielded_fd181 == (fd)[j] IN
                                                                                                                                                                                                                 /\ yielded_fd181
                                                                                                                                                                                                                 /\ state' = state4
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                                            ELSE /\ state' = state4
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                 /\ UNCHANGED << network, 
                                                                                                                                                                                                                 commitIndex, 
                                                                                                                                                                                                                 sm, 
                                                                                                                                                                                                                 smDomain >>
                                                                                                                                                                                 ELSE /\ IF ((value320).cmd) = (LogPop)
                                                                                                                                                                                            THEN /\ plog' = [plog22 EXCEPT ![i] = SubSeq((plog22)[i], 1, (Len((plog22)[i])) - (1))]
                                                                                                                                                                                                 /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                       THEN /\ LET result129 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result129)[1]]
                                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result129)[2]]
                                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                 /\ \/ /\ LET value481 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                                            /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value481), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                            /\ state' = state4
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                    \/ /\ LET yielded_fd182 == (fd)[j] IN
                                                                                                                                                                                                                            /\ yielded_fd182
                                                                                                                                                                                                                            /\ state' = state4
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                                       ELSE /\ state' = state4
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED << network, 
                                                                                                                                                                                                                            commitIndex, 
                                                                                                                                                                                                                            sm, 
                                                                                                                                                                                                                            smDomain >>
                                                                                                                                                                                            ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                       THEN /\ LET result130 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result130)[1]]
                                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result130)[2]]
                                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                 /\ \/ /\ LET value482 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                                            /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value482), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                            /\ plog' = plog22
                                                                                                                                                                                                                            /\ state' = state4
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                    \/ /\ LET yielded_fd183 == (fd)[j] IN
                                                                                                                                                                                                                            /\ yielded_fd183
                                                                                                                                                                                                                            /\ plog' = plog22
                                                                                                                                                                                                                            /\ state' = state4
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                                       ELSE /\ plog' = plog22
                                                                                                                                                                                                            /\ state' = state4
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED << network, 
                                                                                                                                                                                                                            commitIndex, 
                                                                                                                                                                                                                            sm, 
                                                                                                                                                                                                                            smDomain >>
                                                                                                                                                                    ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log17)[i])) >= (index))) /\ (((((log17)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                               THEN /\ LET result131 == ApplyLog((log17)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result131)[1]]
                                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result131)[2]]
                                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                         /\ \/ /\ LET value483 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                                    /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value483), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                    /\ plog' = plog22
                                                                                                                                                                                                    /\ log' = log17
                                                                                                                                                                                                    /\ state' = state4
                                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            \/ /\ LET yielded_fd184 == (fd)[j] IN
                                                                                                                                                                                                    /\ yielded_fd184
                                                                                                                                                                                                    /\ plog' = plog22
                                                                                                                                                                                                    /\ log' = log17
                                                                                                                                                                                                    /\ state' = state4
                                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                                                               ELSE /\ plog' = plog22
                                                                                                                                                                                    /\ log' = log17
                                                                                                                                                                                    /\ state' = state4
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                    /\ UNCHANGED << network, 
                                                                                                                                                                                                    commitIndex, 
                                                                                                                                                                                                    sm, 
                                                                                                                                                                                                    smDomain >>
                                                                                                                                                       ELSE /\ IF ((value25).cmd) = (LogPop)
                                                                                                                                                                  THEN /\ LET plog23 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))] IN
                                                                                                                                                                            IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log17)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                               THEN /\ log' = [log17 EXCEPT ![i] = ((log17)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                    /\ LET value321 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                                         IF ((value321).cmd) = (LogConcat)
                                                                                                                                                                                            THEN /\ plog' = [plog23 EXCEPT ![i] = ((plog23)[i]) \o ((value321).entries)]
                                                                                                                                                                                                 /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                       THEN /\ LET result132 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result132)[1]]
                                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result132)[2]]
                                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                 /\ \/ /\ LET value484 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                                            /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value484), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                            /\ state' = state4
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                    \/ /\ LET yielded_fd185 == (fd)[j] IN
                                                                                                                                                                                                                            /\ yielded_fd185
                                                                                                                                                                                                                            /\ state' = state4
                                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                                       ELSE /\ state' = state4
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED << network, 
                                                                                                                                                                                                                            commitIndex, 
                                                                                                                                                                                                                            sm, 
                                                                                                                                                                                                                            smDomain >>
                                                                                                                                                                                            ELSE /\ IF ((value321).cmd) = (LogPop)
                                                                                                                                                                                                       THEN /\ plog' = [plog23 EXCEPT ![i] = SubSeq((plog23)[i], 1, (Len((plog23)[i])) - (1))]
                                                                                                                                                                                                            /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                                  THEN /\ LET result133 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result133)[1]]
                                                                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result133)[2]]
                                                                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                            /\ \/ /\ LET value485 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                                                                       /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value485), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                                       /\ state' = state4
                                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                               \/ /\ LET yielded_fd186 == (fd)[j] IN
                                                                                                                                                                                                                                       /\ yielded_fd186
                                                                                                                                                                                                                                       /\ state' = state4
                                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                                                                                  ELSE /\ state' = state4
                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                       /\ UNCHANGED << network, 
                                                                                                                                                                                                                                       commitIndex, 
                                                                                                                                                                                                                                       sm, 
                                                                                                                                                                                                                                       smDomain >>
                                                                                                                                                                                                       ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                                  THEN /\ LET result134 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result134)[1]]
                                                                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result134)[2]]
                                                                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                            /\ \/ /\ LET value486 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                                                                       /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value486), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                                       /\ plog' = plog23
                                                                                                                                                                                                                                       /\ state' = state4
                                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                               \/ /\ LET yielded_fd187 == (fd)[j] IN
                                                                                                                                                                                                                                       /\ yielded_fd187
                                                                                                                                                                                                                                       /\ plog' = plog23
                                                                                                                                                                                                                                       /\ state' = state4
                                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                                                                                  ELSE /\ plog' = plog23
                                                                                                                                                                                                                       /\ state' = state4
                                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                       /\ UNCHANGED << network, 
                                                                                                                                                                                                                                       commitIndex, 
                                                                                                                                                                                                                                       sm, 
                                                                                                                                                                                                                                       smDomain >>
                                                                                                                                                                               ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log17)[i])) >= (index))) /\ (((((log17)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                          THEN /\ LET result135 == ApplyLog((log17)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result135)[1]]
                                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result135)[2]]
                                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                    /\ \/ /\ LET value487 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                                               /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value487), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                               /\ plog' = plog23
                                                                                                                                                                                                               /\ log' = log17
                                                                                                                                                                                                               /\ state' = state4
                                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       \/ /\ LET yielded_fd188 == (fd)[j] IN
                                                                                                                                                                                                               /\ yielded_fd188
                                                                                                                                                                                                               /\ plog' = plog23
                                                                                                                                                                                                               /\ log' = log17
                                                                                                                                                                                                               /\ state' = state4
                                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                                                          ELSE /\ plog' = plog23
                                                                                                                                                                                               /\ log' = log17
                                                                                                                                                                                               /\ state' = state4
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               /\ UNCHANGED << network, 
                                                                                                                                                                                                               commitIndex, 
                                                                                                                                                                                                               sm, 
                                                                                                                                                                                                               smDomain >>
                                                                                                                                                                  ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log17)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                             THEN /\ log' = [log17 EXCEPT ![i] = ((log17)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                  /\ LET value322 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                                       IF ((value322).cmd) = (LogConcat)
                                                                                                                                                                                          THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value322).entries)]
                                                                                                                                                                                               /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                     THEN /\ LET result136 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result136)[1]]
                                                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result136)[2]]
                                                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                               /\ \/ /\ LET value488 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                                                          /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value488), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                          /\ state' = state4
                                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                  \/ /\ LET yielded_fd189 == (fd)[j] IN
                                                                                                                                                                                                                          /\ yielded_fd189
                                                                                                                                                                                                                          /\ state' = state4
                                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                                                     ELSE /\ state' = state4
                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          /\ UNCHANGED << network, 
                                                                                                                                                                                                                          commitIndex, 
                                                                                                                                                                                                                          sm, 
                                                                                                                                                                                                                          smDomain >>
                                                                                                                                                                                          ELSE /\ IF ((value322).cmd) = (LogPop)
                                                                                                                                                                                                     THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                                                          /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                                THEN /\ LET result137 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result137)[1]]
                                                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result137)[2]]
                                                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                          /\ \/ /\ LET value489 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                                                     /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value489), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                                     /\ state' = state4
                                                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                             \/ /\ LET yielded_fd190 == (fd)[j] IN
                                                                                                                                                                                                                                     /\ yielded_fd190
                                                                                                                                                                                                                                     /\ state' = state4
                                                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                                                ELSE /\ state' = state4
                                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     /\ UNCHANGED << network, 
                                                                                                                                                                                                                                     commitIndex, 
                                                                                                                                                                                                                                     sm, 
                                                                                                                                                                                                                                     smDomain >>
                                                                                                                                                                                                     ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                                THEN /\ LET result138 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result138)[1]]
                                                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result138)[2]]
                                                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                          /\ \/ /\ LET value490 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                                                     /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value490), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                                     /\ state' = state4
                                                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                             \/ /\ LET yielded_fd191 == (fd)[j] IN
                                                                                                                                                                                                                                     /\ yielded_fd191
                                                                                                                                                                                                                                     /\ state' = state4
                                                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                                                ELSE /\ state' = state4
                                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     /\ UNCHANGED << network, 
                                                                                                                                                                                                                                     commitIndex, 
                                                                                                                                                                                                                                     sm, 
                                                                                                                                                                                                                                     smDomain >>
                                                                                                                                                                                                          /\ plog' = plog
                                                                                                                                                                             ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log17)[i])) >= (index))) /\ (((((log17)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                        THEN /\ LET result139 == ApplyLog((log17)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result139)[1]]
                                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result139)[2]]
                                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                  /\ \/ /\ LET value491 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                                             /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value491), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                             /\ log' = log17
                                                                                                                                                                                                             /\ state' = state4
                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                     \/ /\ LET yielded_fd192 == (fd)[j] IN
                                                                                                                                                                                                             /\ yielded_fd192
                                                                                                                                                                                                             /\ log' = log17
                                                                                                                                                                                                             /\ state' = state4
                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                                        ELSE /\ log' = log17
                                                                                                                                                                                             /\ state' = state4
                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             /\ UNCHANGED << network, 
                                                                                                                                                                                                             commitIndex, 
                                                                                                                                                                                                             sm, 
                                                                                                                                                                                                             smDomain >>
                                                                                                                                                                                  /\ plog' = plog
                                                                                                                                        ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                   THEN /\ log' = [log EXCEPT ![i] = ((log)[i]) \o ((m[self]).mentries)]
                                                                                                                                                        /\ LET value323 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                             IF ((value323).cmd) = (LogConcat)
                                                                                                                                                                THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value323).entries)]
                                                                                                                                                                     /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                           THEN /\ LET result140 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                     /\ sm' = [sm EXCEPT ![i] = (result140)[1]]
                                                                                                                                                                                     /\ smDomain' = [smDomain EXCEPT ![i] = (result140)[2]]
                                                                                                                                                                                     /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                     /\ \/ /\ LET value492 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                /\ ((network)[j]).enabled
                                                                                                                                                                                                /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value492), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                /\ state' = state4
                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                        \/ /\ LET yielded_fd193 == (fd)[j] IN
                                                                                                                                                                                                /\ yielded_fd193
                                                                                                                                                                                                /\ state' = state4
                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           /\ UNCHANGED network
                                                                                                                                                                           ELSE /\ state' = state4
                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                /\ UNCHANGED << network, 
                                                                                                                                                                                                commitIndex, 
                                                                                                                                                                                                sm, 
                                                                                                                                                                                                smDomain >>
                                                                                                                                                                ELSE /\ IF ((value323).cmd) = (LogPop)
                                                                                                                                                                           THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                                /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                      THEN /\ LET result141 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result141)[1]]
                                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result141)[2]]
                                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                /\ \/ /\ LET value493 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                                           /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value493), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                           /\ state' = state4
                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                   \/ /\ LET yielded_fd194 == (fd)[j] IN
                                                                                                                                                                                                           /\ yielded_fd194
                                                                                                                                                                                                           /\ state' = state4
                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                                                      ELSE /\ state' = state4
                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           /\ UNCHANGED << network, 
                                                                                                                                                                                                           commitIndex, 
                                                                                                                                                                                                           sm, 
                                                                                                                                                                                                           smDomain >>
                                                                                                                                                                           ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                      THEN /\ LET result142 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result142)[1]]
                                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result142)[2]]
                                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                /\ \/ /\ LET value494 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                                           /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value494), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                           /\ state' = state4
                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                   \/ /\ LET yielded_fd195 == (fd)[j] IN
                                                                                                                                                                                                           /\ yielded_fd195
                                                                                                                                                                                                           /\ state' = state4
                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                                                      ELSE /\ state' = state4
                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           /\ UNCHANGED << network, 
                                                                                                                                                                                                           commitIndex, 
                                                                                                                                                                                                           sm, 
                                                                                                                                                                                                           smDomain >>
                                                                                                                                                                                /\ plog' = plog
                                                                                                                                                   ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                              THEN /\ LET result143 == ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result143)[1]]
                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result143)[2]]
                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                        /\ \/ /\ LET value495 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                   /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value495), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                   /\ state' = state4
                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                           \/ /\ LET yielded_fd196 == (fd)[j] IN
                                                                                                                                                                                   /\ yielded_fd196
                                                                                                                                                                                   /\ state' = state4
                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                              ELSE /\ state' = state4
                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                   /\ UNCHANGED << network, 
                                                                                                                                                                                   commitIndex, 
                                                                                                                                                                                   sm, 
                                                                                                                                                                                   smDomain >>
                                                                                                                                                        /\ UNCHANGED << log, 
                                                                                                                                                                        plog >>
                                                                                  ELSE /\ leader' = [leader EXCEPT ![self] = (m[self]).msource]
                                                                                       /\ LET i == self IN
                                                                                            LET j == (m[self]).msource IN
                                                                                              LET logOK == (((m[self]).mprevLogIndex) = (0)) \/ (((((m[self]).mprevLogIndex) > (0)) /\ (((m[self]).mprevLogIndex) <= (Len((log)[i])))) /\ (((m[self]).mprevLogTerm) = ((((log)[i])[(m[self]).mprevLogIndex]).term))) IN
                                                                                                /\ Assert(((m[self]).mterm) <= ((currentTerm)[i]), 
                                                                                                          "Failure of assertion at line 4397, column 23.")
                                                                                                /\ IF (((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Candidate))
                                                                                                      THEN /\ state' = [state EXCEPT ![i] = Follower]
                                                                                                           /\ IF (((m[self]).mterm) < ((currentTerm)[i])) \/ (((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state')[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                 THEN /\ \/ /\ LET value110 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                 /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value110), enabled |-> ((network)[j]).enabled]]
                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                         \/ /\ LET yielded_fd06 == (fd)[j] IN
                                                                                                                                 /\ yielded_fd06
                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                            /\ UNCHANGED network
                                                                                                                      /\ UNCHANGED << commitIndex, 
                                                                                                                                      log, 
                                                                                                                                      plog, 
                                                                                                                                      sm, 
                                                                                                                                      smDomain >>
                                                                                                                 ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state')[i]) = (Follower))) /\ (logOK), 
                                                                                                                                "Failure of assertion at line 4415, column 27.")
                                                                                                                      /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                           IF ((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m[self]).mentries)[1]).term))
                                                                                                                              THEN /\ LET log18 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))] IN
                                                                                                                                        LET value26 == [cmd |-> LogPop] IN
                                                                                                                                          IF ((value26).cmd) = (LogConcat)
                                                                                                                                             THEN /\ LET plog24 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value26).entries)] IN
                                                                                                                                                       IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log18)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                          THEN /\ log' = [log18 EXCEPT ![i] = ((log18)[i]) \o ((m[self]).mentries)]
                                                                                                                                                               /\ LET value324 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                    IF ((value324).cmd) = (LogConcat)
                                                                                                                                                                       THEN /\ plog' = [plog24 EXCEPT ![i] = ((plog24)[i]) \o ((value324).entries)]
                                                                                                                                                                            /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                  THEN /\ LET result144 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result144)[1]]
                                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result144)[2]]
                                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                            /\ \/ /\ LET value496 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                                       /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value496), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               \/ /\ LET yielded_fd197 == (fd)[j] IN
                                                                                                                                                                                                       /\ yielded_fd197
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                                                  ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       /\ UNCHANGED << network, 
                                                                                                                                                                                                       commitIndex, 
                                                                                                                                                                                                       sm, 
                                                                                                                                                                                                       smDomain >>
                                                                                                                                                                       ELSE /\ IF ((value324).cmd) = (LogPop)
                                                                                                                                                                                  THEN /\ plog' = [plog24 EXCEPT ![i] = SubSeq((plog24)[i], 1, (Len((plog24)[i])) - (1))]
                                                                                                                                                                                       /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                             THEN /\ LET result145 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                       /\ sm' = [sm EXCEPT ![i] = (result145)[1]]
                                                                                                                                                                                                       /\ smDomain' = [smDomain EXCEPT ![i] = (result145)[2]]
                                                                                                                                                                                                       /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                       /\ \/ /\ LET value497 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                  /\ ((network)[j]).enabled
                                                                                                                                                                                                                  /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value497), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          \/ /\ LET yielded_fd198 == (fd)[j] IN
                                                                                                                                                                                                                  /\ yielded_fd198
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                             /\ UNCHANGED network
                                                                                                                                                                                             ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED << network, 
                                                                                                                                                                                                                  commitIndex, 
                                                                                                                                                                                                                  sm, 
                                                                                                                                                                                                                  smDomain >>
                                                                                                                                                                                  ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                             THEN /\ LET result146 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                       /\ sm' = [sm EXCEPT ![i] = (result146)[1]]
                                                                                                                                                                                                       /\ smDomain' = [smDomain EXCEPT ![i] = (result146)[2]]
                                                                                                                                                                                                       /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                       /\ \/ /\ LET value498 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                  /\ ((network)[j]).enabled
                                                                                                                                                                                                                  /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value498), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                  /\ plog' = plog24
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          \/ /\ LET yielded_fd199 == (fd)[j] IN
                                                                                                                                                                                                                  /\ yielded_fd199
                                                                                                                                                                                                                  /\ plog' = plog24
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                             /\ UNCHANGED network
                                                                                                                                                                                             ELSE /\ plog' = plog24
                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED << network, 
                                                                                                                                                                                                                  commitIndex, 
                                                                                                                                                                                                                  sm, 
                                                                                                                                                                                                                  smDomain >>
                                                                                                                                                          ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log18)[i])) >= (index))) /\ (((((log18)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                     THEN /\ LET result147 == ApplyLog((log18)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result147)[1]]
                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result147)[2]]
                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                               /\ \/ /\ LET value499 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                          /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value499), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                          /\ plog' = plog24
                                                                                                                                                                                          /\ log' = log18
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                  \/ /\ LET yielded_fd1100 == (fd)[j] IN
                                                                                                                                                                                          /\ yielded_fd1100
                                                                                                                                                                                          /\ plog' = plog24
                                                                                                                                                                                          /\ log' = log18
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                     ELSE /\ plog' = plog24
                                                                                                                                                                          /\ log' = log18
                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                          /\ UNCHANGED << network, 
                                                                                                                                                                                          commitIndex, 
                                                                                                                                                                                          sm, 
                                                                                                                                                                                          smDomain >>
                                                                                                                                             ELSE /\ IF ((value26).cmd) = (LogPop)
                                                                                                                                                        THEN /\ LET plog25 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))] IN
                                                                                                                                                                  IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log18)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                     THEN /\ log' = [log18 EXCEPT ![i] = ((log18)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                          /\ LET value325 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                               IF ((value325).cmd) = (LogConcat)
                                                                                                                                                                                  THEN /\ plog' = [plog25 EXCEPT ![i] = ((plog25)[i]) \o ((value325).entries)]
                                                                                                                                                                                       /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                             THEN /\ LET result148 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                       /\ sm' = [sm EXCEPT ![i] = (result148)[1]]
                                                                                                                                                                                                       /\ smDomain' = [smDomain EXCEPT ![i] = (result148)[2]]
                                                                                                                                                                                                       /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                       /\ \/ /\ LET value4100 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                  /\ ((network)[j]).enabled
                                                                                                                                                                                                                  /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4100), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          \/ /\ LET yielded_fd1101 == (fd)[j] IN
                                                                                                                                                                                                                  /\ yielded_fd1101
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                             /\ UNCHANGED network
                                                                                                                                                                                             ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED << network, 
                                                                                                                                                                                                                  commitIndex, 
                                                                                                                                                                                                                  sm, 
                                                                                                                                                                                                                  smDomain >>
                                                                                                                                                                                  ELSE /\ IF ((value325).cmd) = (LogPop)
                                                                                                                                                                                             THEN /\ plog' = [plog25 EXCEPT ![i] = SubSeq((plog25)[i], 1, (Len((plog25)[i])) - (1))]
                                                                                                                                                                                                  /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                        THEN /\ LET result149 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result149)[1]]
                                                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result149)[2]]
                                                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                  /\ \/ /\ LET value4101 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                                                             /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4101), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     \/ /\ LET yielded_fd1102 == (fd)[j] IN
                                                                                                                                                                                                                             /\ yielded_fd1102
                                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                             /\ UNCHANGED << network, 
                                                                                                                                                                                                                             commitIndex, 
                                                                                                                                                                                                                             sm, 
                                                                                                                                                                                                                             smDomain >>
                                                                                                                                                                                             ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                        THEN /\ LET result150 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result150)[1]]
                                                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result150)[2]]
                                                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                  /\ \/ /\ LET value4102 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                                                             /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4102), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                             /\ plog' = plog25
                                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     \/ /\ LET yielded_fd1103 == (fd)[j] IN
                                                                                                                                                                                                                             /\ yielded_fd1103
                                                                                                                                                                                                                             /\ plog' = plog25
                                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                                                        ELSE /\ plog' = plog25
                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                             /\ UNCHANGED << network, 
                                                                                                                                                                                                                             commitIndex, 
                                                                                                                                                                                                                             sm, 
                                                                                                                                                                                                                             smDomain >>
                                                                                                                                                                     ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log18)[i])) >= (index))) /\ (((((log18)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                THEN /\ LET result151 == ApplyLog((log18)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result151)[1]]
                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result151)[2]]
                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                          /\ \/ /\ LET value4103 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                     /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4103), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                     /\ plog' = plog25
                                                                                                                                                                                                     /\ log' = log18
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             \/ /\ LET yielded_fd1104 == (fd)[j] IN
                                                                                                                                                                                                     /\ yielded_fd1104
                                                                                                                                                                                                     /\ plog' = plog25
                                                                                                                                                                                                     /\ log' = log18
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                ELSE /\ plog' = plog25
                                                                                                                                                                                     /\ log' = log18
                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED << network, 
                                                                                                                                                                                                     commitIndex, 
                                                                                                                                                                                                     sm, 
                                                                                                                                                                                                     smDomain >>
                                                                                                                                                        ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log18)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                   THEN /\ log' = [log18 EXCEPT ![i] = ((log18)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                        /\ LET value326 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                             IF ((value326).cmd) = (LogConcat)
                                                                                                                                                                                THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value326).entries)]
                                                                                                                                                                                     /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                           THEN /\ LET result152 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                     /\ sm' = [sm EXCEPT ![i] = (result152)[1]]
                                                                                                                                                                                                     /\ smDomain' = [smDomain EXCEPT ![i] = (result152)[2]]
                                                                                                                                                                                                     /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                     /\ \/ /\ LET value4104 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                /\ ((network)[j]).enabled
                                                                                                                                                                                                                /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4104), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                        \/ /\ LET yielded_fd1105 == (fd)[j] IN
                                                                                                                                                                                                                /\ yielded_fd1105
                                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           /\ UNCHANGED network
                                                                                                                                                                                           ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED << network, 
                                                                                                                                                                                                                commitIndex, 
                                                                                                                                                                                                                sm, 
                                                                                                                                                                                                                smDomain >>
                                                                                                                                                                                ELSE /\ IF ((value326).cmd) = (LogPop)
                                                                                                                                                                                           THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                                                /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                      THEN /\ LET result153 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result153)[1]]
                                                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result153)[2]]
                                                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                /\ \/ /\ LET value4105 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                                                           /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4105), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                   \/ /\ LET yielded_fd1106 == (fd)[j] IN
                                                                                                                                                                                                                           /\ yielded_fd1106
                                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                                                                      ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           /\ UNCHANGED << network, 
                                                                                                                                                                                                                           commitIndex, 
                                                                                                                                                                                                                           sm, 
                                                                                                                                                                                                                           smDomain >>
                                                                                                                                                                                           ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                      THEN /\ LET result154 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result154)[1]]
                                                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result154)[2]]
                                                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                /\ \/ /\ LET value4106 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                                                           /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4106), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                   \/ /\ LET yielded_fd1107 == (fd)[j] IN
                                                                                                                                                                                                                           /\ yielded_fd1107
                                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                                                                      ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           /\ UNCHANGED << network, 
                                                                                                                                                                                                                           commitIndex, 
                                                                                                                                                                                                                           sm, 
                                                                                                                                                                                                                           smDomain >>
                                                                                                                                                                                                /\ plog' = plog
                                                                                                                                                                   ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log18)[i])) >= (index))) /\ (((((log18)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                              THEN /\ LET result155 == ApplyLog((log18)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result155)[1]]
                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result155)[2]]
                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                        /\ \/ /\ LET value4107 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                   /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4107), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                   /\ log' = log18
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           \/ /\ LET yielded_fd1108 == (fd)[j] IN
                                                                                                                                                                                                   /\ yielded_fd1108
                                                                                                                                                                                                   /\ log' = log18
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                              ELSE /\ log' = log18
                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   /\ UNCHANGED << network, 
                                                                                                                                                                                                   commitIndex, 
                                                                                                                                                                                                   sm, 
                                                                                                                                                                                                   smDomain >>
                                                                                                                                                                        /\ plog' = plog
                                                                                                                              ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                         THEN /\ log' = [log EXCEPT ![i] = ((log)[i]) \o ((m[self]).mentries)]
                                                                                                                                              /\ LET value327 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                   IF ((value327).cmd) = (LogConcat)
                                                                                                                                                      THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value327).entries)]
                                                                                                                                                           /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                 THEN /\ LET result156 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result156)[1]]
                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result156)[2]]
                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                           /\ \/ /\ LET value4108 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                      /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4108), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              \/ /\ LET yielded_fd1109 == (fd)[j] IN
                                                                                                                                                                                      /\ yielded_fd1109
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                                 ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                      /\ UNCHANGED << network, 
                                                                                                                                                                                      commitIndex, 
                                                                                                                                                                                      sm, 
                                                                                                                                                                                      smDomain >>
                                                                                                                                                      ELSE /\ IF ((value327).cmd) = (LogPop)
                                                                                                                                                                 THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                      /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                            THEN /\ LET result157 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result157)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result157)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value4109 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4109), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd1110 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd1110
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED << network, 
                                                                                                                                                                                                 commitIndex, 
                                                                                                                                                                                                 sm, 
                                                                                                                                                                                                 smDomain >>
                                                                                                                                                                 ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                            THEN /\ LET result158 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result158)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result158)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value4110 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4110), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd1111 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd1111
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED << network, 
                                                                                                                                                                                                 commitIndex, 
                                                                                                                                                                                                 sm, 
                                                                                                                                                                                                 smDomain >>
                                                                                                                                                                      /\ plog' = plog
                                                                                                                                         ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                    THEN /\ LET result159 == ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                              /\ sm' = [sm EXCEPT ![i] = (result159)[1]]
                                                                                                                                                              /\ smDomain' = [smDomain EXCEPT ![i] = (result159)[2]]
                                                                                                                                                              /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                              /\ \/ /\ LET value4111 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                         /\ ((network)[j]).enabled
                                                                                                                                                                         /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                         /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4111), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                 \/ /\ LET yielded_fd1112 == (fd)[j] IN
                                                                                                                                                                         /\ yielded_fd1112
                                                                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                    /\ UNCHANGED network
                                                                                                                                                    ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                         /\ UNCHANGED << network, 
                                                                                                                                                                         commitIndex, 
                                                                                                                                                                         sm, 
                                                                                                                                                                         smDomain >>
                                                                                                                                              /\ UNCHANGED << log, 
                                                                                                                                                              plog >>
                                                                                                      ELSE /\ IF (((m[self]).mterm) < ((currentTerm)[i])) \/ (((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                 THEN /\ \/ /\ LET value111 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                 /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value111), enabled |-> ((network)[j]).enabled]]
                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                         \/ /\ LET yielded_fd07 == (fd)[j] IN
                                                                                                                                 /\ yielded_fd07
                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                            /\ UNCHANGED network
                                                                                                                      /\ UNCHANGED << commitIndex, 
                                                                                                                                      log, 
                                                                                                                                      plog, 
                                                                                                                                      sm, 
                                                                                                                                      smDomain >>
                                                                                                                 ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK), 
                                                                                                                                "Failure of assertion at line 4882, column 27.")
                                                                                                                      /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                           IF ((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m[self]).mentries)[1]).term))
                                                                                                                              THEN /\ LET log19 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))] IN
                                                                                                                                        LET value27 == [cmd |-> LogPop] IN
                                                                                                                                          IF ((value27).cmd) = (LogConcat)
                                                                                                                                             THEN /\ LET plog26 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value27).entries)] IN
                                                                                                                                                       IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log19)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                          THEN /\ log' = [log19 EXCEPT ![i] = ((log19)[i]) \o ((m[self]).mentries)]
                                                                                                                                                               /\ LET value328 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                    IF ((value328).cmd) = (LogConcat)
                                                                                                                                                                       THEN /\ plog' = [plog26 EXCEPT ![i] = ((plog26)[i]) \o ((value328).entries)]
                                                                                                                                                                            /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                  THEN /\ LET result160 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result160)[1]]
                                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result160)[2]]
                                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                            /\ \/ /\ LET value4112 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                                       /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4112), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               \/ /\ LET yielded_fd1113 == (fd)[j] IN
                                                                                                                                                                                                       /\ yielded_fd1113
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                                                  ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       /\ UNCHANGED << network, 
                                                                                                                                                                                                       commitIndex, 
                                                                                                                                                                                                       sm, 
                                                                                                                                                                                                       smDomain >>
                                                                                                                                                                       ELSE /\ IF ((value328).cmd) = (LogPop)
                                                                                                                                                                                  THEN /\ plog' = [plog26 EXCEPT ![i] = SubSeq((plog26)[i], 1, (Len((plog26)[i])) - (1))]
                                                                                                                                                                                       /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                             THEN /\ LET result161 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                       /\ sm' = [sm EXCEPT ![i] = (result161)[1]]
                                                                                                                                                                                                       /\ smDomain' = [smDomain EXCEPT ![i] = (result161)[2]]
                                                                                                                                                                                                       /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                       /\ \/ /\ LET value4113 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                  /\ ((network)[j]).enabled
                                                                                                                                                                                                                  /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4113), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          \/ /\ LET yielded_fd1114 == (fd)[j] IN
                                                                                                                                                                                                                  /\ yielded_fd1114
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                             /\ UNCHANGED network
                                                                                                                                                                                             ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED << network, 
                                                                                                                                                                                                                  commitIndex, 
                                                                                                                                                                                                                  sm, 
                                                                                                                                                                                                                  smDomain >>
                                                                                                                                                                                  ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                             THEN /\ LET result162 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                       /\ sm' = [sm EXCEPT ![i] = (result162)[1]]
                                                                                                                                                                                                       /\ smDomain' = [smDomain EXCEPT ![i] = (result162)[2]]
                                                                                                                                                                                                       /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                       /\ \/ /\ LET value4114 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                  /\ ((network)[j]).enabled
                                                                                                                                                                                                                  /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4114), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                  /\ plog' = plog26
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          \/ /\ LET yielded_fd1115 == (fd)[j] IN
                                                                                                                                                                                                                  /\ yielded_fd1115
                                                                                                                                                                                                                  /\ plog' = plog26
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                             /\ UNCHANGED network
                                                                                                                                                                                             ELSE /\ plog' = plog26
                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED << network, 
                                                                                                                                                                                                                  commitIndex, 
                                                                                                                                                                                                                  sm, 
                                                                                                                                                                                                                  smDomain >>
                                                                                                                                                          ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log19)[i])) >= (index))) /\ (((((log19)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                     THEN /\ LET result163 == ApplyLog((log19)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result163)[1]]
                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result163)[2]]
                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                               /\ \/ /\ LET value4115 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                          /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4115), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                          /\ plog' = plog26
                                                                                                                                                                                          /\ log' = log19
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                  \/ /\ LET yielded_fd1116 == (fd)[j] IN
                                                                                                                                                                                          /\ yielded_fd1116
                                                                                                                                                                                          /\ plog' = plog26
                                                                                                                                                                                          /\ log' = log19
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                     ELSE /\ plog' = plog26
                                                                                                                                                                          /\ log' = log19
                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                          /\ UNCHANGED << network, 
                                                                                                                                                                                          commitIndex, 
                                                                                                                                                                                          sm, 
                                                                                                                                                                                          smDomain >>
                                                                                                                                             ELSE /\ IF ((value27).cmd) = (LogPop)
                                                                                                                                                        THEN /\ LET plog27 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))] IN
                                                                                                                                                                  IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log19)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                     THEN /\ log' = [log19 EXCEPT ![i] = ((log19)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                          /\ LET value329 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                               IF ((value329).cmd) = (LogConcat)
                                                                                                                                                                                  THEN /\ plog' = [plog27 EXCEPT ![i] = ((plog27)[i]) \o ((value329).entries)]
                                                                                                                                                                                       /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                             THEN /\ LET result164 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                       /\ sm' = [sm EXCEPT ![i] = (result164)[1]]
                                                                                                                                                                                                       /\ smDomain' = [smDomain EXCEPT ![i] = (result164)[2]]
                                                                                                                                                                                                       /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                       /\ \/ /\ LET value4116 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                  /\ ((network)[j]).enabled
                                                                                                                                                                                                                  /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4116), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          \/ /\ LET yielded_fd1117 == (fd)[j] IN
                                                                                                                                                                                                                  /\ yielded_fd1117
                                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                             /\ UNCHANGED network
                                                                                                                                                                                             ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED << network, 
                                                                                                                                                                                                                  commitIndex, 
                                                                                                                                                                                                                  sm, 
                                                                                                                                                                                                                  smDomain >>
                                                                                                                                                                                  ELSE /\ IF ((value329).cmd) = (LogPop)
                                                                                                                                                                                             THEN /\ plog' = [plog27 EXCEPT ![i] = SubSeq((plog27)[i], 1, (Len((plog27)[i])) - (1))]
                                                                                                                                                                                                  /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                        THEN /\ LET result165 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result165)[1]]
                                                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result165)[2]]
                                                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                  /\ \/ /\ LET value4117 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                                                             /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4117), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     \/ /\ LET yielded_fd1118 == (fd)[j] IN
                                                                                                                                                                                                                             /\ yielded_fd1118
                                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                             /\ UNCHANGED << network, 
                                                                                                                                                                                                                             commitIndex, 
                                                                                                                                                                                                                             sm, 
                                                                                                                                                                                                                             smDomain >>
                                                                                                                                                                                             ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                        THEN /\ LET result166 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result166)[1]]
                                                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result166)[2]]
                                                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                  /\ \/ /\ LET value4118 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                                                             /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4118), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                             /\ plog' = plog27
                                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     \/ /\ LET yielded_fd1119 == (fd)[j] IN
                                                                                                                                                                                                                             /\ yielded_fd1119
                                                                                                                                                                                                                             /\ plog' = plog27
                                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                                                        ELSE /\ plog' = plog27
                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                             /\ UNCHANGED << network, 
                                                                                                                                                                                                                             commitIndex, 
                                                                                                                                                                                                                             sm, 
                                                                                                                                                                                                                             smDomain >>
                                                                                                                                                                     ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log19)[i])) >= (index))) /\ (((((log19)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                THEN /\ LET result167 == ApplyLog((log19)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result167)[1]]
                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result167)[2]]
                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                          /\ \/ /\ LET value4119 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                     /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4119), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                     /\ plog' = plog27
                                                                                                                                                                                                     /\ log' = log19
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             \/ /\ LET yielded_fd1120 == (fd)[j] IN
                                                                                                                                                                                                     /\ yielded_fd1120
                                                                                                                                                                                                     /\ plog' = plog27
                                                                                                                                                                                                     /\ log' = log19
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                ELSE /\ plog' = plog27
                                                                                                                                                                                     /\ log' = log19
                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED << network, 
                                                                                                                                                                                                     commitIndex, 
                                                                                                                                                                                                     sm, 
                                                                                                                                                                                                     smDomain >>
                                                                                                                                                        ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log19)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                   THEN /\ log' = [log19 EXCEPT ![i] = ((log19)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                        /\ LET value330 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                             IF ((value330).cmd) = (LogConcat)
                                                                                                                                                                                THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value330).entries)]
                                                                                                                                                                                     /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                           THEN /\ LET result168 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                     /\ sm' = [sm EXCEPT ![i] = (result168)[1]]
                                                                                                                                                                                                     /\ smDomain' = [smDomain EXCEPT ![i] = (result168)[2]]
                                                                                                                                                                                                     /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                     /\ \/ /\ LET value4120 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                /\ ((network)[j]).enabled
                                                                                                                                                                                                                /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4120), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                        \/ /\ LET yielded_fd1121 == (fd)[j] IN
                                                                                                                                                                                                                /\ yielded_fd1121
                                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           /\ UNCHANGED network
                                                                                                                                                                                           ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED << network, 
                                                                                                                                                                                                                commitIndex, 
                                                                                                                                                                                                                sm, 
                                                                                                                                                                                                                smDomain >>
                                                                                                                                                                                ELSE /\ IF ((value330).cmd) = (LogPop)
                                                                                                                                                                                           THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                                                /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                      THEN /\ LET result169 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result169)[1]]
                                                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result169)[2]]
                                                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                /\ \/ /\ LET value4121 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                                                           /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4121), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                   \/ /\ LET yielded_fd1122 == (fd)[j] IN
                                                                                                                                                                                                                           /\ yielded_fd1122
                                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                                                                      ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           /\ UNCHANGED << network, 
                                                                                                                                                                                                                           commitIndex, 
                                                                                                                                                                                                                           sm, 
                                                                                                                                                                                                                           smDomain >>
                                                                                                                                                                                           ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                      THEN /\ LET result170 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result170)[1]]
                                                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result170)[2]]
                                                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                                /\ \/ /\ LET value4122 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                                                           /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4122), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                   \/ /\ LET yielded_fd1123 == (fd)[j] IN
                                                                                                                                                                                                                           /\ yielded_fd1123
                                                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                                                                      ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           /\ UNCHANGED << network, 
                                                                                                                                                                                                                           commitIndex, 
                                                                                                                                                                                                                           sm, 
                                                                                                                                                                                                                           smDomain >>
                                                                                                                                                                                                /\ plog' = plog
                                                                                                                                                                   ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log19)[i])) >= (index))) /\ (((((log19)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                              THEN /\ LET result171 == ApplyLog((log19)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result171)[1]]
                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result171)[2]]
                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                        /\ \/ /\ LET value4123 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                   /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4123), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                   /\ log' = log19
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           \/ /\ LET yielded_fd1124 == (fd)[j] IN
                                                                                                                                                                                                   /\ yielded_fd1124
                                                                                                                                                                                                   /\ log' = log19
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                              ELSE /\ log' = log19
                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   /\ UNCHANGED << network, 
                                                                                                                                                                                                   commitIndex, 
                                                                                                                                                                                                   sm, 
                                                                                                                                                                                                   smDomain >>
                                                                                                                                                                        /\ plog' = plog
                                                                                                                              ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                         THEN /\ log' = [log EXCEPT ![i] = ((log)[i]) \o ((m[self]).mentries)]
                                                                                                                                              /\ LET value331 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                   IF ((value331).cmd) = (LogConcat)
                                                                                                                                                      THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value331).entries)]
                                                                                                                                                           /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                 THEN /\ LET result172 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result172)[1]]
                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result172)[2]]
                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                           /\ \/ /\ LET value4124 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                      /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4124), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              \/ /\ LET yielded_fd1125 == (fd)[j] IN
                                                                                                                                                                                      /\ yielded_fd1125
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                                 ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                      /\ UNCHANGED << network, 
                                                                                                                                                                                      commitIndex, 
                                                                                                                                                                                      sm, 
                                                                                                                                                                                      smDomain >>
                                                                                                                                                      ELSE /\ IF ((value331).cmd) = (LogPop)
                                                                                                                                                                 THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                      /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                            THEN /\ LET result173 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result173)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result173)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value4125 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4125), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd1126 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd1126
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED << network, 
                                                                                                                                                                                                 commitIndex, 
                                                                                                                                                                                                 sm, 
                                                                                                                                                                                                 smDomain >>
                                                                                                                                                                 ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                            THEN /\ LET result174 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result174)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result174)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value4126 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4126), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd1127 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd1127
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED << network, 
                                                                                                                                                                                                 commitIndex, 
                                                                                                                                                                                                 sm, 
                                                                                                                                                                                                 smDomain >>
                                                                                                                                                                      /\ plog' = plog
                                                                                                                                         ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                    THEN /\ LET result175 == ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                              /\ sm' = [sm EXCEPT ![i] = (result175)[1]]
                                                                                                                                                              /\ smDomain' = [smDomain EXCEPT ![i] = (result175)[2]]
                                                                                                                                                              /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                              /\ \/ /\ LET value4127 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                         /\ ((network)[j]).enabled
                                                                                                                                                                         /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                         /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4127), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                 \/ /\ LET yielded_fd1128 == (fd)[j] IN
                                                                                                                                                                         /\ yielded_fd1128
                                                                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                    /\ UNCHANGED network
                                                                                                                                                    ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                         /\ UNCHANGED << network, 
                                                                                                                                                                         commitIndex, 
                                                                                                                                                                         sm, 
                                                                                                                                                                         smDomain >>
                                                                                                                                              /\ UNCHANGED << log, 
                                                                                                                                                              plog >>
                                                                                                           /\ state' = state
                                                                                       /\ UNCHANGED << currentTerm, 
                                                                                                       votedFor >>
                                                                            /\ UNCHANGED << nextIndex, 
                                                                                            matchIndex >>
                                                                       ELSE /\ IF ((m[self]).mtype) = (AppendEntriesResponse)
                                                                                  THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                                                             THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                                                                  /\ state' = [state EXCEPT ![self] = Follower]
                                                                                                  /\ votedFor' = [votedFor EXCEPT ![self] = Nil]
                                                                                                  /\ leader' = [leader EXCEPT ![self] = Nil]
                                                                                                  /\ IF ((m[self]).mterm) < ((currentTerm')[self])
                                                                                                        THEN /\ TRUE
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             /\ UNCHANGED << nextIndex, 
                                                                                                                             matchIndex >>
                                                                                                        ELSE /\ LET i == self IN
                                                                                                                  LET j == (m[self]).msource IN
                                                                                                                    /\ Assert(((m[self]).mterm) = ((currentTerm')[i]), 
                                                                                                                              "Failure of assertion at line 5351, column 27.")
                                                                                                                    /\ IF (m[self]).msuccess
                                                                                                                          THEN /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m[self]).mmatchIndex) + (1)]]
                                                                                                                               /\ matchIndex' = [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m[self]).mmatchIndex]]
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                          ELSE /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]]
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                               /\ UNCHANGED matchIndex
                                                                                             ELSE /\ IF ((m[self]).mterm) < ((currentTerm)[self])
                                                                                                        THEN /\ TRUE
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             /\ UNCHANGED << nextIndex, 
                                                                                                                             matchIndex >>
                                                                                                        ELSE /\ LET i == self IN
                                                                                                                  LET j == (m[self]).msource IN
                                                                                                                    /\ Assert(((m[self]).mterm) = ((currentTerm)[i]), 
                                                                                                                              "Failure of assertion at line 5371, column 27.")
                                                                                                                    /\ IF (m[self]).msuccess
                                                                                                                          THEN /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m[self]).mmatchIndex) + (1)]]
                                                                                                                               /\ matchIndex' = [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m[self]).mmatchIndex]]
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                          ELSE /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]]
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                               /\ UNCHANGED matchIndex
                                                                                                  /\ UNCHANGED << state, 
                                                                                                                  currentTerm, 
                                                                                                                  votedFor, 
                                                                                                                  leader >>
                                                                                       /\ UNCHANGED << network, 
                                                                                                       log, 
                                                                                                       plog >>
                                                                                  ELSE /\ IF (((m[self]).mtype) = (ClientPutRequest)) \/ (((m[self]).mtype) = (ClientGetRequest))
                                                                                             THEN /\ IF ((state)[self]) = (Leader)
                                                                                                        THEN /\ LET entry == [term |-> (currentTerm)[self], cmd |-> (m[self]).mcmd, client |-> (m[self]).msource] IN
                                                                                                                  /\ log' = [log EXCEPT ![self] = Append((log)[self], entry)]
                                                                                                                  /\ LET value51 == [cmd |-> LogConcat, entries |-> <<entry>>] IN
                                                                                                                       IF ((value51).cmd) = (LogConcat)
                                                                                                                          THEN /\ plog' = [plog EXCEPT ![self] = ((plog)[self]) \o ((value51).entries)]
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                          ELSE /\ IF ((value51).cmd) = (LogPop)
                                                                                                                                     THEN /\ plog' = [plog EXCEPT ![self] = SubSeq((plog)[self], 1, (Len((plog)[self])) - (1))]
                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                     ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                          /\ plog' = plog
                                                                                                             /\ UNCHANGED network
                                                                                                        ELSE /\ LET i == self IN
                                                                                                                  LET j == (m[self]).msource IN
                                                                                                                    LET respType == IF (((m[self]).mcmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse IN
                                                                                                                      LET value61 == [mtype |-> respType, msuccess |-> FALSE, mresponse |-> [idx |-> ((m[self]).mcmd).idx, key |-> ((m[self]).mcmd).key], mleaderHint |-> (leader)[i], msource |-> i, mdest |-> j] IN
                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                        /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value61), enabled |-> ((network)[j]).enabled]]
                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             /\ UNCHANGED << log, 
                                                                                                                             plog >>
                                                                                             ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                  /\ UNCHANGED << network, 
                                                                                                                  log, 
                                                                                                                  plog >>
                                                                                       /\ UNCHANGED << state, 
                                                                                                       currentTerm, 
                                                                                                       nextIndex, 
                                                                                                       matchIndex, 
                                                                                                       votedFor, 
                                                                                                       leader >>
                                                                            /\ UNCHANGED << commitIndex, 
                                                                                            sm, 
                                                                                            smDomain >>
                                                                 /\ UNCHANGED << votesResponded, 
                                                                                 votesGranted >>
                         ELSE /\ IF ((m[self]).mtype) = (RequestVoteRequest)
                                    THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                               THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                    /\ state' = [state EXCEPT ![self] = Follower]
                                                    /\ LET votedFor5 == [votedFor EXCEPT ![self] = Nil] IN
                                                         /\ leader' = [leader EXCEPT ![self] = Nil]
                                                         /\ LET i == self IN
                                                              LET j == (m[self]).msource IN
                                                                LET logOK == (((m[self]).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m[self]).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m[self]).mlastLogIndex) >= (Len((log)[i])))) IN
                                                                  LET grant == ((((m[self]).mterm) = ((currentTerm')[i])) /\ (logOK)) /\ (((votedFor5)[self]) \in ({Nil, j})) IN
                                                                    /\ Assert(((m[self]).mterm) <= ((currentTerm')[i]), 
                                                                              "Failure of assertion at line 5437, column 17.")
                                                                    /\ IF grant
                                                                          THEN /\ votedFor' = [votedFor5 EXCEPT ![i] = j]
                                                                               /\ \/ /\ LET value08 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm')[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                          /\ ((network)[j]).enabled
                                                                                          /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value08), enabled |-> ((network)[j]).enabled]]
                                                                                          /\ IF Debug
                                                                                                THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                  \/ /\ LET yielded_fd24 == (fd)[j] IN
                                                                                          /\ yielded_fd24
                                                                                          /\ IF Debug
                                                                                                THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                     /\ UNCHANGED network
                                                                          ELSE /\ \/ /\ LET value09 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm')[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                          /\ ((network)[j]).enabled
                                                                                          /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value09), enabled |-> ((network)[j]).enabled]]
                                                                                          /\ IF Debug
                                                                                                THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                     /\ votedFor' = votedFor5
                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                ELSE /\ votedFor' = votedFor5
                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                  \/ /\ LET yielded_fd25 == (fd)[j] IN
                                                                                          /\ yielded_fd25
                                                                                          /\ IF Debug
                                                                                                THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                     /\ votedFor' = votedFor5
                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                ELSE /\ votedFor' = votedFor5
                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                     /\ UNCHANGED network
                                               ELSE /\ LET i == self IN
                                                         LET j == (m[self]).msource IN
                                                           LET logOK == (((m[self]).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m[self]).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m[self]).mlastLogIndex) >= (Len((log)[i])))) IN
                                                             LET grant == ((((m[self]).mterm) = ((currentTerm)[i])) /\ (logOK)) /\ (((votedFor)[self]) \in ({Nil, j})) IN
                                                               /\ Assert(((m[self]).mterm) <= ((currentTerm)[i]), 
                                                                         "Failure of assertion at line 5501, column 15.")
                                                               /\ IF grant
                                                                     THEN /\ votedFor' = [votedFor EXCEPT ![i] = j]
                                                                          /\ \/ /\ LET value010 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                     /\ ((network)[j]).enabled
                                                                                     /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value010), enabled |-> ((network)[j]).enabled]]
                                                                                     /\ IF Debug
                                                                                           THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                           ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                             \/ /\ LET yielded_fd26 == (fd)[j] IN
                                                                                     /\ yielded_fd26
                                                                                     /\ IF Debug
                                                                                           THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                           ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                /\ UNCHANGED network
                                                                     ELSE /\ \/ /\ LET value011 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                     /\ ((network)[j]).enabled
                                                                                     /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value011), enabled |-> ((network)[j]).enabled]]
                                                                                     /\ IF Debug
                                                                                           THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                           ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                             \/ /\ LET yielded_fd27 == (fd)[j] IN
                                                                                     /\ yielded_fd27
                                                                                     /\ IF Debug
                                                                                           THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                           ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                /\ UNCHANGED network
                                                                          /\ UNCHANGED votedFor
                                                    /\ UNCHANGED << state, 
                                                                    currentTerm, 
                                                                    leader >>
                                         /\ UNCHANGED << commitIndex, 
                                                         nextIndex, matchIndex, 
                                                         log, plog, 
                                                         votesResponded, 
                                                         votesGranted, sm, 
                                                         smDomain >>
                                    ELSE /\ IF ((m[self]).mtype) = (RequestVoteResponse)
                                               THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                          THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                               /\ state' = [state EXCEPT ![self] = Follower]
                                                               /\ votedFor' = [votedFor EXCEPT ![self] = Nil]
                                                               /\ leader' = [leader EXCEPT ![self] = Nil]
                                                               /\ IF ((m[self]).mterm) < ((currentTerm')[self])
                                                                     THEN /\ TRUE
                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                          /\ UNCHANGED << votesResponded, 
                                                                                          votesGranted >>
                                                                     ELSE /\ LET i == self IN
                                                                               LET j == (m[self]).msource IN
                                                                                 /\ Assert(((m[self]).mterm) = ((currentTerm')[i]), 
                                                                                           "Failure of assertion at line 5569, column 19.")
                                                                                 /\ votesResponded' = [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})]
                                                                                 /\ IF (m[self]).mvoteGranted
                                                                                       THEN /\ votesGranted' = [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})]
                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                       ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                            /\ UNCHANGED votesGranted
                                                          ELSE /\ IF ((m[self]).mterm) < ((currentTerm)[self])
                                                                     THEN /\ TRUE
                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                          /\ UNCHANGED << votesResponded, 
                                                                                          votesGranted >>
                                                                     ELSE /\ LET i == self IN
                                                                               LET j == (m[self]).msource IN
                                                                                 /\ Assert(((m[self]).mterm) = ((currentTerm)[i]), 
                                                                                           "Failure of assertion at line 5588, column 19.")
                                                                                 /\ votesResponded' = [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})]
                                                                                 /\ IF (m[self]).mvoteGranted
                                                                                       THEN /\ votesGranted' = [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})]
                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                       ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                            /\ UNCHANGED votesGranted
                                                               /\ UNCHANGED << state, 
                                                                               currentTerm, 
                                                                               votedFor, 
                                                                               leader >>
                                                    /\ UNCHANGED << network, 
                                                                    commitIndex, 
                                                                    nextIndex, 
                                                                    matchIndex, 
                                                                    log, plog, 
                                                                    sm, 
                                                                    smDomain >>
                                               ELSE /\ IF ((m[self]).mtype) = (AppendEntriesRequest)
                                                          THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                                     THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                                          /\ LET state5 == [state EXCEPT ![self] = Follower] IN
                                                                               /\ votedFor' = [votedFor EXCEPT ![self] = Nil]
                                                                               /\ LET leader5 == [leader EXCEPT ![self] = Nil] IN
                                                                                    /\ leader' = [leader5 EXCEPT ![self] = (m[self]).msource]
                                                                                    /\ LET i == self IN
                                                                                         LET j == (m[self]).msource IN
                                                                                           LET logOK == (((m[self]).mprevLogIndex) = (0)) \/ (((((m[self]).mprevLogIndex) > (0)) /\ (((m[self]).mprevLogIndex) <= (Len((log)[i])))) /\ (((m[self]).mprevLogTerm) = ((((log)[i])[(m[self]).mprevLogIndex]).term))) IN
                                                                                             /\ Assert(((m[self]).mterm) <= ((currentTerm')[i]), 
                                                                                                       "Failure of assertion at line 5612, column 23.")
                                                                                             /\ IF (((m[self]).mterm) = ((currentTerm')[i])) /\ (((state5)[i]) = (Candidate))
                                                                                                   THEN /\ state' = [state5 EXCEPT ![i] = Follower]
                                                                                                        /\ IF (((m[self]).mterm) < ((currentTerm')[i])) \/ (((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state')[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                              THEN /\ \/ /\ LET value112 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                              /\ ((network)[j]).enabled
                                                                                                                              /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                              /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value112), enabled |-> ((network)[j]).enabled]]
                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                      \/ /\ LET yielded_fd08 == (fd)[j] IN
                                                                                                                              /\ yielded_fd08
                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                         /\ UNCHANGED network
                                                                                                                   /\ UNCHANGED << commitIndex, 
                                                                                                                                   log, 
                                                                                                                                   plog, 
                                                                                                                                   sm, 
                                                                                                                                   smDomain >>
                                                                                                              ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state')[i]) = (Follower))) /\ (logOK), 
                                                                                                                             "Failure of assertion at line 5630, column 27.")
                                                                                                                   /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                        IF ((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m[self]).mentries)[1]).term))
                                                                                                                           THEN /\ LET log20 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))] IN
                                                                                                                                     LET value28 == [cmd |-> LogPop] IN
                                                                                                                                       IF ((value28).cmd) = (LogConcat)
                                                                                                                                          THEN /\ LET plog28 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value28).entries)] IN
                                                                                                                                                    IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log20)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                       THEN /\ log' = [log20 EXCEPT ![i] = ((log20)[i]) \o ((m[self]).mentries)]
                                                                                                                                                            /\ LET value332 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                 IF ((value332).cmd) = (LogConcat)
                                                                                                                                                                    THEN /\ plog' = [plog28 EXCEPT ![i] = ((plog28)[i]) \o ((value332).entries)]
                                                                                                                                                                         /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                               THEN /\ LET result176 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result176)[1]]
                                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result176)[2]]
                                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                         /\ \/ /\ LET value4128 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                                    /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4128), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            \/ /\ LET yielded_fd1129 == (fd)[j] IN
                                                                                                                                                                                                    /\ yielded_fd1129
                                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                                                               ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                    /\ UNCHANGED << network, 
                                                                                                                                                                                                    commitIndex, 
                                                                                                                                                                                                    sm, 
                                                                                                                                                                                                    smDomain >>
                                                                                                                                                                    ELSE /\ IF ((value332).cmd) = (LogPop)
                                                                                                                                                                               THEN /\ plog' = [plog28 EXCEPT ![i] = SubSeq((plog28)[i], 1, (Len((plog28)[i])) - (1))]
                                                                                                                                                                                    /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                          THEN /\ LET result177 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result177)[1]]
                                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result177)[2]]
                                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                    /\ \/ /\ LET value4129 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                                               /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4129), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       \/ /\ LET yielded_fd1130 == (fd)[j] IN
                                                                                                                                                                                                               /\ yielded_fd1130
                                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                                                          ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               /\ UNCHANGED << network, 
                                                                                                                                                                                                               commitIndex, 
                                                                                                                                                                                                               sm, 
                                                                                                                                                                                                               smDomain >>
                                                                                                                                                                               ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                          THEN /\ LET result178 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result178)[1]]
                                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result178)[2]]
                                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                    /\ \/ /\ LET value4130 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                                               /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4130), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                               /\ plog' = plog28
                                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       \/ /\ LET yielded_fd1131 == (fd)[j] IN
                                                                                                                                                                                                               /\ yielded_fd1131
                                                                                                                                                                                                               /\ plog' = plog28
                                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                                                          ELSE /\ plog' = plog28
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               /\ UNCHANGED << network, 
                                                                                                                                                                                                               commitIndex, 
                                                                                                                                                                                                               sm, 
                                                                                                                                                                                                               smDomain >>
                                                                                                                                                       ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log20)[i])) >= (index))) /\ (((((log20)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                  THEN /\ LET result179 == ApplyLog((log20)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result179)[1]]
                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result179)[2]]
                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                            /\ \/ /\ LET value4131 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                       /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4131), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                       /\ plog' = plog28
                                                                                                                                                                                       /\ log' = log20
                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                               \/ /\ LET yielded_fd1132 == (fd)[j] IN
                                                                                                                                                                                       /\ yielded_fd1132
                                                                                                                                                                                       /\ plog' = plog28
                                                                                                                                                                                       /\ log' = log20
                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                                  ELSE /\ plog' = plog28
                                                                                                                                                                       /\ log' = log20
                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                       /\ UNCHANGED << network, 
                                                                                                                                                                                       commitIndex, 
                                                                                                                                                                                       sm, 
                                                                                                                                                                                       smDomain >>
                                                                                                                                          ELSE /\ IF ((value28).cmd) = (LogPop)
                                                                                                                                                     THEN /\ LET plog29 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))] IN
                                                                                                                                                               IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log20)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                  THEN /\ log' = [log20 EXCEPT ![i] = ((log20)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                       /\ LET value333 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                            IF ((value333).cmd) = (LogConcat)
                                                                                                                                                                               THEN /\ plog' = [plog29 EXCEPT ![i] = ((plog29)[i]) \o ((value333).entries)]
                                                                                                                                                                                    /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                          THEN /\ LET result180 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result180)[1]]
                                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result180)[2]]
                                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                    /\ \/ /\ LET value4132 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                                               /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4132), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       \/ /\ LET yielded_fd1133 == (fd)[j] IN
                                                                                                                                                                                                               /\ yielded_fd1133
                                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                                                          ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               /\ UNCHANGED << network, 
                                                                                                                                                                                                               commitIndex, 
                                                                                                                                                                                                               sm, 
                                                                                                                                                                                                               smDomain >>
                                                                                                                                                                               ELSE /\ IF ((value333).cmd) = (LogPop)
                                                                                                                                                                                          THEN /\ plog' = [plog29 EXCEPT ![i] = SubSeq((plog29)[i], 1, (Len((plog29)[i])) - (1))]
                                                                                                                                                                                               /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                     THEN /\ LET result181 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result181)[1]]
                                                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result181)[2]]
                                                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                               /\ \/ /\ LET value4133 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                                                          /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4133), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                  \/ /\ LET yielded_fd1134 == (fd)[j] IN
                                                                                                                                                                                                                          /\ yielded_fd1134
                                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                                                     ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          /\ UNCHANGED << network, 
                                                                                                                                                                                                                          commitIndex, 
                                                                                                                                                                                                                          sm, 
                                                                                                                                                                                                                          smDomain >>
                                                                                                                                                                                          ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                     THEN /\ LET result182 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result182)[1]]
                                                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result182)[2]]
                                                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                               /\ \/ /\ LET value4134 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                                                          /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4134), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                          /\ plog' = plog29
                                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                  \/ /\ LET yielded_fd1135 == (fd)[j] IN
                                                                                                                                                                                                                          /\ yielded_fd1135
                                                                                                                                                                                                                          /\ plog' = plog29
                                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                                                     ELSE /\ plog' = plog29
                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          /\ UNCHANGED << network, 
                                                                                                                                                                                                                          commitIndex, 
                                                                                                                                                                                                                          sm, 
                                                                                                                                                                                                                          smDomain >>
                                                                                                                                                                  ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log20)[i])) >= (index))) /\ (((((log20)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                             THEN /\ LET result183 == ApplyLog((log20)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                       /\ sm' = [sm EXCEPT ![i] = (result183)[1]]
                                                                                                                                                                                       /\ smDomain' = [smDomain EXCEPT ![i] = (result183)[2]]
                                                                                                                                                                                       /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                       /\ \/ /\ LET value4135 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                  /\ ((network)[j]).enabled
                                                                                                                                                                                                  /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4135), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                  /\ plog' = plog29
                                                                                                                                                                                                  /\ log' = log20
                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                          \/ /\ LET yielded_fd1136 == (fd)[j] IN
                                                                                                                                                                                                  /\ yielded_fd1136
                                                                                                                                                                                                  /\ plog' = plog29
                                                                                                                                                                                                  /\ log' = log20
                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             /\ UNCHANGED network
                                                                                                                                                                             ELSE /\ plog' = plog29
                                                                                                                                                                                  /\ log' = log20
                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                  /\ UNCHANGED << network, 
                                                                                                                                                                                                  commitIndex, 
                                                                                                                                                                                                  sm, 
                                                                                                                                                                                                  smDomain >>
                                                                                                                                                     ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log20)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                THEN /\ log' = [log20 EXCEPT ![i] = ((log20)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                     /\ LET value334 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                          IF ((value334).cmd) = (LogConcat)
                                                                                                                                                                             THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value334).entries)]
                                                                                                                                                                                  /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                        THEN /\ LET result184 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result184)[1]]
                                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result184)[2]]
                                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                  /\ \/ /\ LET value4136 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                                             /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4136), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                     \/ /\ LET yielded_fd1137 == (fd)[j] IN
                                                                                                                                                                                                             /\ yielded_fd1137
                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             /\ UNCHANGED << network, 
                                                                                                                                                                                                             commitIndex, 
                                                                                                                                                                                                             sm, 
                                                                                                                                                                                                             smDomain >>
                                                                                                                                                                             ELSE /\ IF ((value334).cmd) = (LogPop)
                                                                                                                                                                                        THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                                             /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                   THEN /\ LET result185 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result185)[1]]
                                                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result185)[2]]
                                                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                             /\ \/ /\ LET value4137 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                                                        /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4137), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                \/ /\ LET yielded_fd1138 == (fd)[j] IN
                                                                                                                                                                                                                        /\ yielded_fd1138
                                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                                                   ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                        /\ UNCHANGED << network, 
                                                                                                                                                                                                                        commitIndex, 
                                                                                                                                                                                                                        sm, 
                                                                                                                                                                                                                        smDomain >>
                                                                                                                                                                                        ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                   THEN /\ LET result186 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result186)[1]]
                                                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result186)[2]]
                                                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                             /\ \/ /\ LET value4138 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                                                        /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4138), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                \/ /\ LET yielded_fd1139 == (fd)[j] IN
                                                                                                                                                                                                                        /\ yielded_fd1139
                                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                                                   ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                        /\ UNCHANGED << network, 
                                                                                                                                                                                                                        commitIndex, 
                                                                                                                                                                                                                        sm, 
                                                                                                                                                                                                                        smDomain >>
                                                                                                                                                                                             /\ plog' = plog
                                                                                                                                                                ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log20)[i])) >= (index))) /\ (((((log20)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                           THEN /\ LET result187 == ApplyLog((log20)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                     /\ sm' = [sm EXCEPT ![i] = (result187)[1]]
                                                                                                                                                                                     /\ smDomain' = [smDomain EXCEPT ![i] = (result187)[2]]
                                                                                                                                                                                     /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                     /\ \/ /\ LET value4139 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                /\ ((network)[j]).enabled
                                                                                                                                                                                                /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4139), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                /\ log' = log20
                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                        \/ /\ LET yielded_fd1140 == (fd)[j] IN
                                                                                                                                                                                                /\ yielded_fd1140
                                                                                                                                                                                                /\ log' = log20
                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           /\ UNCHANGED network
                                                                                                                                                                           ELSE /\ log' = log20
                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                /\ UNCHANGED << network, 
                                                                                                                                                                                                commitIndex, 
                                                                                                                                                                                                sm, 
                                                                                                                                                                                                smDomain >>
                                                                                                                                                                     /\ plog' = plog
                                                                                                                           ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                      THEN /\ log' = [log EXCEPT ![i] = ((log)[i]) \o ((m[self]).mentries)]
                                                                                                                                           /\ LET value335 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                IF ((value335).cmd) = (LogConcat)
                                                                                                                                                   THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value335).entries)]
                                                                                                                                                        /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                              THEN /\ LET result188 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result188)[1]]
                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result188)[2]]
                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                        /\ \/ /\ LET value4140 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                   /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4140), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                           \/ /\ LET yielded_fd1141 == (fd)[j] IN
                                                                                                                                                                                   /\ yielded_fd1141
                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                              ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                   /\ UNCHANGED << network, 
                                                                                                                                                                                   commitIndex, 
                                                                                                                                                                                   sm, 
                                                                                                                                                                                   smDomain >>
                                                                                                                                                   ELSE /\ IF ((value335).cmd) = (LogPop)
                                                                                                                                                              THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                   /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                         THEN /\ LET result189 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                   /\ sm' = [sm EXCEPT ![i] = (result189)[1]]
                                                                                                                                                                                   /\ smDomain' = [smDomain EXCEPT ![i] = (result189)[2]]
                                                                                                                                                                                   /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                   /\ \/ /\ LET value4141 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                              /\ ((network)[j]).enabled
                                                                                                                                                                                              /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                              /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4141), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                      \/ /\ LET yielded_fd1142 == (fd)[j] IN
                                                                                                                                                                                              /\ yielded_fd1142
                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         /\ UNCHANGED network
                                                                                                                                                                         ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              /\ UNCHANGED << network, 
                                                                                                                                                                                              commitIndex, 
                                                                                                                                                                                              sm, 
                                                                                                                                                                                              smDomain >>
                                                                                                                                                              ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                         THEN /\ LET result190 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                   /\ sm' = [sm EXCEPT ![i] = (result190)[1]]
                                                                                                                                                                                   /\ smDomain' = [smDomain EXCEPT ![i] = (result190)[2]]
                                                                                                                                                                                   /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                   /\ \/ /\ LET value4142 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                              /\ ((network)[j]).enabled
                                                                                                                                                                                              /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                              /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4142), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                      \/ /\ LET yielded_fd1143 == (fd)[j] IN
                                                                                                                                                                                              /\ yielded_fd1143
                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         /\ UNCHANGED network
                                                                                                                                                                         ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              /\ UNCHANGED << network, 
                                                                                                                                                                                              commitIndex, 
                                                                                                                                                                                              sm, 
                                                                                                                                                                                              smDomain >>
                                                                                                                                                                   /\ plog' = plog
                                                                                                                                      ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                 THEN /\ LET result191 == ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result191)[1]]
                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result191)[2]]
                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                           /\ \/ /\ LET value4143 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                      /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4143), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                              \/ /\ LET yielded_fd1144 == (fd)[j] IN
                                                                                                                                                                      /\ yielded_fd1144
                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                 ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                      /\ UNCHANGED << network, 
                                                                                                                                                                      commitIndex, 
                                                                                                                                                                      sm, 
                                                                                                                                                                      smDomain >>
                                                                                                                                           /\ UNCHANGED << log, 
                                                                                                                                                           plog >>
                                                                                                   ELSE /\ IF (((m[self]).mterm) < ((currentTerm')[i])) \/ (((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state5)[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                              THEN /\ \/ /\ LET value113 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                              /\ ((network)[j]).enabled
                                                                                                                              /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                              /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value113), enabled |-> ((network)[j]).enabled]]
                                                                                                                              /\ state' = state5
                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                      \/ /\ LET yielded_fd09 == (fd)[j] IN
                                                                                                                              /\ yielded_fd09
                                                                                                                              /\ state' = state5
                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                         /\ UNCHANGED network
                                                                                                                   /\ UNCHANGED << commitIndex, 
                                                                                                                                   log, 
                                                                                                                                   plog, 
                                                                                                                                   sm, 
                                                                                                                                   smDomain >>
                                                                                                              ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state5)[i]) = (Follower))) /\ (logOK), 
                                                                                                                             "Failure of assertion at line 6099, column 27.")
                                                                                                                   /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                        IF ((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m[self]).mentries)[1]).term))
                                                                                                                           THEN /\ LET log21 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))] IN
                                                                                                                                     LET value29 == [cmd |-> LogPop] IN
                                                                                                                                       IF ((value29).cmd) = (LogConcat)
                                                                                                                                          THEN /\ LET plog30 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value29).entries)] IN
                                                                                                                                                    IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log21)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                       THEN /\ log' = [log21 EXCEPT ![i] = ((log21)[i]) \o ((m[self]).mentries)]
                                                                                                                                                            /\ LET value336 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                 IF ((value336).cmd) = (LogConcat)
                                                                                                                                                                    THEN /\ plog' = [plog30 EXCEPT ![i] = ((plog30)[i]) \o ((value336).entries)]
                                                                                                                                                                         /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                               THEN /\ LET result192 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result192)[1]]
                                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result192)[2]]
                                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                         /\ \/ /\ LET value4144 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                                    /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4144), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                    /\ state' = state5
                                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            \/ /\ LET yielded_fd1145 == (fd)[j] IN
                                                                                                                                                                                                    /\ yielded_fd1145
                                                                                                                                                                                                    /\ state' = state5
                                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                                                               ELSE /\ state' = state5
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                    /\ UNCHANGED << network, 
                                                                                                                                                                                                    commitIndex, 
                                                                                                                                                                                                    sm, 
                                                                                                                                                                                                    smDomain >>
                                                                                                                                                                    ELSE /\ IF ((value336).cmd) = (LogPop)
                                                                                                                                                                               THEN /\ plog' = [plog30 EXCEPT ![i] = SubSeq((plog30)[i], 1, (Len((plog30)[i])) - (1))]
                                                                                                                                                                                    /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                          THEN /\ LET result193 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result193)[1]]
                                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result193)[2]]
                                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                    /\ \/ /\ LET value4145 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                                               /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4145), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                               /\ state' = state5
                                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       \/ /\ LET yielded_fd1146 == (fd)[j] IN
                                                                                                                                                                                                               /\ yielded_fd1146
                                                                                                                                                                                                               /\ state' = state5
                                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                                                          ELSE /\ state' = state5
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               /\ UNCHANGED << network, 
                                                                                                                                                                                                               commitIndex, 
                                                                                                                                                                                                               sm, 
                                                                                                                                                                                                               smDomain >>
                                                                                                                                                                               ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                          THEN /\ LET result194 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result194)[1]]
                                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result194)[2]]
                                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                    /\ \/ /\ LET value4146 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                                               /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4146), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                               /\ plog' = plog30
                                                                                                                                                                                                               /\ state' = state5
                                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       \/ /\ LET yielded_fd1147 == (fd)[j] IN
                                                                                                                                                                                                               /\ yielded_fd1147
                                                                                                                                                                                                               /\ plog' = plog30
                                                                                                                                                                                                               /\ state' = state5
                                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                                                          ELSE /\ plog' = plog30
                                                                                                                                                                                               /\ state' = state5
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               /\ UNCHANGED << network, 
                                                                                                                                                                                                               commitIndex, 
                                                                                                                                                                                                               sm, 
                                                                                                                                                                                                               smDomain >>
                                                                                                                                                       ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log21)[i])) >= (index))) /\ (((((log21)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                  THEN /\ LET result195 == ApplyLog((log21)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result195)[1]]
                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result195)[2]]
                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                            /\ \/ /\ LET value4147 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                       /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4147), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                       /\ plog' = plog30
                                                                                                                                                                                       /\ log' = log21
                                                                                                                                                                                       /\ state' = state5
                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                               \/ /\ LET yielded_fd1148 == (fd)[j] IN
                                                                                                                                                                                       /\ yielded_fd1148
                                                                                                                                                                                       /\ plog' = plog30
                                                                                                                                                                                       /\ log' = log21
                                                                                                                                                                                       /\ state' = state5
                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                                  ELSE /\ plog' = plog30
                                                                                                                                                                       /\ log' = log21
                                                                                                                                                                       /\ state' = state5
                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                       /\ UNCHANGED << network, 
                                                                                                                                                                                       commitIndex, 
                                                                                                                                                                                       sm, 
                                                                                                                                                                                       smDomain >>
                                                                                                                                          ELSE /\ IF ((value29).cmd) = (LogPop)
                                                                                                                                                     THEN /\ LET plog31 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))] IN
                                                                                                                                                               IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log21)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                  THEN /\ log' = [log21 EXCEPT ![i] = ((log21)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                       /\ LET value337 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                            IF ((value337).cmd) = (LogConcat)
                                                                                                                                                                               THEN /\ plog' = [plog31 EXCEPT ![i] = ((plog31)[i]) \o ((value337).entries)]
                                                                                                                                                                                    /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                          THEN /\ LET result196 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result196)[1]]
                                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result196)[2]]
                                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                    /\ \/ /\ LET value4148 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                                               /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4148), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                               /\ state' = state5
                                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       \/ /\ LET yielded_fd1149 == (fd)[j] IN
                                                                                                                                                                                                               /\ yielded_fd1149
                                                                                                                                                                                                               /\ state' = state5
                                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                                                          ELSE /\ state' = state5
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               /\ UNCHANGED << network, 
                                                                                                                                                                                                               commitIndex, 
                                                                                                                                                                                                               sm, 
                                                                                                                                                                                                               smDomain >>
                                                                                                                                                                               ELSE /\ IF ((value337).cmd) = (LogPop)
                                                                                                                                                                                          THEN /\ plog' = [plog31 EXCEPT ![i] = SubSeq((plog31)[i], 1, (Len((plog31)[i])) - (1))]
                                                                                                                                                                                               /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                     THEN /\ LET result197 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result197)[1]]
                                                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result197)[2]]
                                                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                               /\ \/ /\ LET value4149 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                                                          /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4149), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                          /\ state' = state5
                                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                  \/ /\ LET yielded_fd1150 == (fd)[j] IN
                                                                                                                                                                                                                          /\ yielded_fd1150
                                                                                                                                                                                                                          /\ state' = state5
                                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                                                     ELSE /\ state' = state5
                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          /\ UNCHANGED << network, 
                                                                                                                                                                                                                          commitIndex, 
                                                                                                                                                                                                                          sm, 
                                                                                                                                                                                                                          smDomain >>
                                                                                                                                                                                          ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                     THEN /\ LET result198 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result198)[1]]
                                                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result198)[2]]
                                                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                               /\ \/ /\ LET value4150 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                                                          /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4150), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                          /\ plog' = plog31
                                                                                                                                                                                                                          /\ state' = state5
                                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                  \/ /\ LET yielded_fd1151 == (fd)[j] IN
                                                                                                                                                                                                                          /\ yielded_fd1151
                                                                                                                                                                                                                          /\ plog' = plog31
                                                                                                                                                                                                                          /\ state' = state5
                                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                                                     ELSE /\ plog' = plog31
                                                                                                                                                                                                          /\ state' = state5
                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                          /\ UNCHANGED << network, 
                                                                                                                                                                                                                          commitIndex, 
                                                                                                                                                                                                                          sm, 
                                                                                                                                                                                                                          smDomain >>
                                                                                                                                                                  ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log21)[i])) >= (index))) /\ (((((log21)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                             THEN /\ LET result199 == ApplyLog((log21)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                       /\ sm' = [sm EXCEPT ![i] = (result199)[1]]
                                                                                                                                                                                       /\ smDomain' = [smDomain EXCEPT ![i] = (result199)[2]]
                                                                                                                                                                                       /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                       /\ \/ /\ LET value4151 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                  /\ ((network)[j]).enabled
                                                                                                                                                                                                  /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4151), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                  /\ plog' = plog31
                                                                                                                                                                                                  /\ log' = log21
                                                                                                                                                                                                  /\ state' = state5
                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                          \/ /\ LET yielded_fd1152 == (fd)[j] IN
                                                                                                                                                                                                  /\ yielded_fd1152
                                                                                                                                                                                                  /\ plog' = plog31
                                                                                                                                                                                                  /\ log' = log21
                                                                                                                                                                                                  /\ state' = state5
                                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             /\ UNCHANGED network
                                                                                                                                                                             ELSE /\ plog' = plog31
                                                                                                                                                                                  /\ log' = log21
                                                                                                                                                                                  /\ state' = state5
                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                  /\ UNCHANGED << network, 
                                                                                                                                                                                                  commitIndex, 
                                                                                                                                                                                                  sm, 
                                                                                                                                                                                                  smDomain >>
                                                                                                                                                     ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log21)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                                THEN /\ log' = [log21 EXCEPT ![i] = ((log21)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                     /\ LET value338 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                          IF ((value338).cmd) = (LogConcat)
                                                                                                                                                                             THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value338).entries)]
                                                                                                                                                                                  /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                        THEN /\ LET result200 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result200)[1]]
                                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result200)[2]]
                                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                  /\ \/ /\ LET value4152 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                                             /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4152), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                             /\ state' = state5
                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                     \/ /\ LET yielded_fd1153 == (fd)[j] IN
                                                                                                                                                                                                             /\ yielded_fd1153
                                                                                                                                                                                                             /\ state' = state5
                                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                                        ELSE /\ state' = state5
                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             /\ UNCHANGED << network, 
                                                                                                                                                                                                             commitIndex, 
                                                                                                                                                                                                             sm, 
                                                                                                                                                                                                             smDomain >>
                                                                                                                                                                             ELSE /\ IF ((value338).cmd) = (LogPop)
                                                                                                                                                                                        THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                                             /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                   THEN /\ LET result201 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result201)[1]]
                                                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result201)[2]]
                                                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                             /\ \/ /\ LET value4153 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                                                        /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4153), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                        /\ state' = state5
                                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                \/ /\ LET yielded_fd1154 == (fd)[j] IN
                                                                                                                                                                                                                        /\ yielded_fd1154
                                                                                                                                                                                                                        /\ state' = state5
                                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                                                   ELSE /\ state' = state5
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                        /\ UNCHANGED << network, 
                                                                                                                                                                                                                        commitIndex, 
                                                                                                                                                                                                                        sm, 
                                                                                                                                                                                                                        smDomain >>
                                                                                                                                                                                        ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                                   THEN /\ LET result202 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result202)[1]]
                                                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result202)[2]]
                                                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                             /\ \/ /\ LET value4154 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                                                        /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4154), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                        /\ state' = state5
                                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                \/ /\ LET yielded_fd1155 == (fd)[j] IN
                                                                                                                                                                                                                        /\ yielded_fd1155
                                                                                                                                                                                                                        /\ state' = state5
                                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                                                   ELSE /\ state' = state5
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                        /\ UNCHANGED << network, 
                                                                                                                                                                                                                        commitIndex, 
                                                                                                                                                                                                                        sm, 
                                                                                                                                                                                                                        smDomain >>
                                                                                                                                                                                             /\ plog' = plog
                                                                                                                                                                ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log21)[i])) >= (index))) /\ (((((log21)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                           THEN /\ LET result203 == ApplyLog((log21)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                     /\ sm' = [sm EXCEPT ![i] = (result203)[1]]
                                                                                                                                                                                     /\ smDomain' = [smDomain EXCEPT ![i] = (result203)[2]]
                                                                                                                                                                                     /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                     /\ \/ /\ LET value4155 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                /\ ((network)[j]).enabled
                                                                                                                                                                                                /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4155), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                /\ log' = log21
                                                                                                                                                                                                /\ state' = state5
                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                        \/ /\ LET yielded_fd1156 == (fd)[j] IN
                                                                                                                                                                                                /\ yielded_fd1156
                                                                                                                                                                                                /\ log' = log21
                                                                                                                                                                                                /\ state' = state5
                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           /\ UNCHANGED network
                                                                                                                                                                           ELSE /\ log' = log21
                                                                                                                                                                                /\ state' = state5
                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                /\ UNCHANGED << network, 
                                                                                                                                                                                                commitIndex, 
                                                                                                                                                                                                sm, 
                                                                                                                                                                                                smDomain >>
                                                                                                                                                                     /\ plog' = plog
                                                                                                                           ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                      THEN /\ log' = [log EXCEPT ![i] = ((log)[i]) \o ((m[self]).mentries)]
                                                                                                                                           /\ LET value339 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                IF ((value339).cmd) = (LogConcat)
                                                                                                                                                   THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value339).entries)]
                                                                                                                                                        /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                              THEN /\ LET result204 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result204)[1]]
                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result204)[2]]
                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                        /\ \/ /\ LET value4156 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                   /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4156), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                   /\ state' = state5
                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                           \/ /\ LET yielded_fd1157 == (fd)[j] IN
                                                                                                                                                                                   /\ yielded_fd1157
                                                                                                                                                                                   /\ state' = state5
                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                              ELSE /\ state' = state5
                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                   /\ UNCHANGED << network, 
                                                                                                                                                                                   commitIndex, 
                                                                                                                                                                                   sm, 
                                                                                                                                                                                   smDomain >>
                                                                                                                                                   ELSE /\ IF ((value339).cmd) = (LogPop)
                                                                                                                                                              THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                   /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                         THEN /\ LET result205 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                   /\ sm' = [sm EXCEPT ![i] = (result205)[1]]
                                                                                                                                                                                   /\ smDomain' = [smDomain EXCEPT ![i] = (result205)[2]]
                                                                                                                                                                                   /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                   /\ \/ /\ LET value4157 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                              /\ ((network)[j]).enabled
                                                                                                                                                                                              /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                              /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4157), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                              /\ state' = state5
                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                      \/ /\ LET yielded_fd1158 == (fd)[j] IN
                                                                                                                                                                                              /\ yielded_fd1158
                                                                                                                                                                                              /\ state' = state5
                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         /\ UNCHANGED network
                                                                                                                                                                         ELSE /\ state' = state5
                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              /\ UNCHANGED << network, 
                                                                                                                                                                                              commitIndex, 
                                                                                                                                                                                              sm, 
                                                                                                                                                                                              smDomain >>
                                                                                                                                                              ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                         THEN /\ LET result206 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                   /\ sm' = [sm EXCEPT ![i] = (result206)[1]]
                                                                                                                                                                                   /\ smDomain' = [smDomain EXCEPT ![i] = (result206)[2]]
                                                                                                                                                                                   /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                   /\ \/ /\ LET value4158 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                              /\ ((network)[j]).enabled
                                                                                                                                                                                              /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                              /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4158), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                              /\ state' = state5
                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                      \/ /\ LET yielded_fd1159 == (fd)[j] IN
                                                                                                                                                                                              /\ yielded_fd1159
                                                                                                                                                                                              /\ state' = state5
                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         /\ UNCHANGED network
                                                                                                                                                                         ELSE /\ state' = state5
                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              /\ UNCHANGED << network, 
                                                                                                                                                                                              commitIndex, 
                                                                                                                                                                                              sm, 
                                                                                                                                                                                              smDomain >>
                                                                                                                                                                   /\ plog' = plog
                                                                                                                                      ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                 THEN /\ LET result207 == ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result207)[1]]
                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result207)[2]]
                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                           /\ \/ /\ LET value4159 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                      /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4159), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                      /\ state' = state5
                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                              \/ /\ LET yielded_fd1160 == (fd)[j] IN
                                                                                                                                                                      /\ yielded_fd1160
                                                                                                                                                                      /\ state' = state5
                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                 ELSE /\ state' = state5
                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                      /\ UNCHANGED << network, 
                                                                                                                                                                      commitIndex, 
                                                                                                                                                                      sm, 
                                                                                                                                                                      smDomain >>
                                                                                                                                           /\ UNCHANGED << log, 
                                                                                                                                                           plog >>
                                                                     ELSE /\ leader' = [leader EXCEPT ![self] = (m[self]).msource]
                                                                          /\ LET i == self IN
                                                                               LET j == (m[self]).msource IN
                                                                                 LET logOK == (((m[self]).mprevLogIndex) = (0)) \/ (((((m[self]).mprevLogIndex) > (0)) /\ (((m[self]).mprevLogIndex) <= (Len((log)[i])))) /\ (((m[self]).mprevLogTerm) = ((((log)[i])[(m[self]).mprevLogIndex]).term))) IN
                                                                                   /\ Assert(((m[self]).mterm) <= ((currentTerm)[i]), 
                                                                                             "Failure of assertion at line 6609, column 19.")
                                                                                   /\ IF (((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Candidate))
                                                                                         THEN /\ state' = [state EXCEPT ![i] = Follower]
                                                                                              /\ IF (((m[self]).mterm) < ((currentTerm)[i])) \/ (((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state')[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                    THEN /\ \/ /\ LET value114 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                    /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value114), enabled |-> ((network)[j]).enabled]]
                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                            \/ /\ LET yielded_fd010 == (fd)[j] IN
                                                                                                                    /\ yielded_fd010
                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                               /\ UNCHANGED network
                                                                                                         /\ UNCHANGED << commitIndex, 
                                                                                                                         log, 
                                                                                                                         plog, 
                                                                                                                         sm, 
                                                                                                                         smDomain >>
                                                                                                    ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state')[i]) = (Follower))) /\ (logOK), 
                                                                                                                   "Failure of assertion at line 6627, column 23.")
                                                                                                         /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                              IF ((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m[self]).mentries)[1]).term))
                                                                                                                 THEN /\ LET log22 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))] IN
                                                                                                                           LET value210 == [cmd |-> LogPop] IN
                                                                                                                             IF ((value210).cmd) = (LogConcat)
                                                                                                                                THEN /\ LET plog32 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value210).entries)] IN
                                                                                                                                          IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log22)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                             THEN /\ log' = [log22 EXCEPT ![i] = ((log22)[i]) \o ((m[self]).mentries)]
                                                                                                                                                  /\ LET value340 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                       IF ((value340).cmd) = (LogConcat)
                                                                                                                                                          THEN /\ plog' = [plog32 EXCEPT ![i] = ((plog32)[i]) \o ((value340).entries)]
                                                                                                                                                               /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                     THEN /\ LET result208 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result208)[1]]
                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result208)[2]]
                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                               /\ \/ /\ LET value4160 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                          /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4160), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                  \/ /\ LET yielded_fd1161 == (fd)[j] IN
                                                                                                                                                                                          /\ yielded_fd1161
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                     ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                          /\ UNCHANGED << network, 
                                                                                                                                                                                          commitIndex, 
                                                                                                                                                                                          sm, 
                                                                                                                                                                                          smDomain >>
                                                                                                                                                          ELSE /\ IF ((value340).cmd) = (LogPop)
                                                                                                                                                                     THEN /\ plog' = [plog32 EXCEPT ![i] = SubSeq((plog32)[i], 1, (Len((plog32)[i])) - (1))]
                                                                                                                                                                          /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                THEN /\ LET result209 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result209)[1]]
                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result209)[2]]
                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                          /\ \/ /\ LET value4161 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                     /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4161), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             \/ /\ LET yielded_fd1162 == (fd)[j] IN
                                                                                                                                                                                                     /\ yielded_fd1162
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED << network, 
                                                                                                                                                                                                     commitIndex, 
                                                                                                                                                                                                     sm, 
                                                                                                                                                                                                     smDomain >>
                                                                                                                                                                     ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                THEN /\ LET result210 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result210)[1]]
                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result210)[2]]
                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                          /\ \/ /\ LET value4162 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                     /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4162), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                     /\ plog' = plog32
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             \/ /\ LET yielded_fd1163 == (fd)[j] IN
                                                                                                                                                                                                     /\ yielded_fd1163
                                                                                                                                                                                                     /\ plog' = plog32
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                ELSE /\ plog' = plog32
                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED << network, 
                                                                                                                                                                                                     commitIndex, 
                                                                                                                                                                                                     sm, 
                                                                                                                                                                                                     smDomain >>
                                                                                                                                             ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log22)[i])) >= (index))) /\ (((((log22)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                        THEN /\ LET result211 == ApplyLog((log22)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result211)[1]]
                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result211)[2]]
                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                  /\ \/ /\ LET value4163 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                             /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4163), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                             /\ plog' = plog32
                                                                                                                                                                             /\ log' = log22
                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                     \/ /\ LET yielded_fd1164 == (fd)[j] IN
                                                                                                                                                                             /\ yielded_fd1164
                                                                                                                                                                             /\ plog' = plog32
                                                                                                                                                                             /\ log' = log22
                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                        ELSE /\ plog' = plog32
                                                                                                                                                             /\ log' = log22
                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                             /\ UNCHANGED << network, 
                                                                                                                                                                             commitIndex, 
                                                                                                                                                                             sm, 
                                                                                                                                                                             smDomain >>
                                                                                                                                ELSE /\ IF ((value210).cmd) = (LogPop)
                                                                                                                                           THEN /\ LET plog33 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))] IN
                                                                                                                                                     IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log22)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                        THEN /\ log' = [log22 EXCEPT ![i] = ((log22)[i]) \o ((m[self]).mentries)]
                                                                                                                                                             /\ LET value341 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                  IF ((value341).cmd) = (LogConcat)
                                                                                                                                                                     THEN /\ plog' = [plog33 EXCEPT ![i] = ((plog33)[i]) \o ((value341).entries)]
                                                                                                                                                                          /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                THEN /\ LET result212 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result212)[1]]
                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result212)[2]]
                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                          /\ \/ /\ LET value4164 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                     /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4164), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             \/ /\ LET yielded_fd1165 == (fd)[j] IN
                                                                                                                                                                                                     /\ yielded_fd1165
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED << network, 
                                                                                                                                                                                                     commitIndex, 
                                                                                                                                                                                                     sm, 
                                                                                                                                                                                                     smDomain >>
                                                                                                                                                                     ELSE /\ IF ((value341).cmd) = (LogPop)
                                                                                                                                                                                THEN /\ plog' = [plog33 EXCEPT ![i] = SubSeq((plog33)[i], 1, (Len((plog33)[i])) - (1))]
                                                                                                                                                                                     /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                           THEN /\ LET result213 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                     /\ sm' = [sm EXCEPT ![i] = (result213)[1]]
                                                                                                                                                                                                     /\ smDomain' = [smDomain EXCEPT ![i] = (result213)[2]]
                                                                                                                                                                                                     /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                     /\ \/ /\ LET value4165 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                /\ ((network)[j]).enabled
                                                                                                                                                                                                                /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4165), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                        \/ /\ LET yielded_fd1166 == (fd)[j] IN
                                                                                                                                                                                                                /\ yielded_fd1166
                                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           /\ UNCHANGED network
                                                                                                                                                                                           ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED << network, 
                                                                                                                                                                                                                commitIndex, 
                                                                                                                                                                                                                sm, 
                                                                                                                                                                                                                smDomain >>
                                                                                                                                                                                ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                           THEN /\ LET result214 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                     /\ sm' = [sm EXCEPT ![i] = (result214)[1]]
                                                                                                                                                                                                     /\ smDomain' = [smDomain EXCEPT ![i] = (result214)[2]]
                                                                                                                                                                                                     /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                     /\ \/ /\ LET value4166 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                /\ ((network)[j]).enabled
                                                                                                                                                                                                                /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4166), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                /\ plog' = plog33
                                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                        \/ /\ LET yielded_fd1167 == (fd)[j] IN
                                                                                                                                                                                                                /\ yielded_fd1167
                                                                                                                                                                                                                /\ plog' = plog33
                                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           /\ UNCHANGED network
                                                                                                                                                                                           ELSE /\ plog' = plog33
                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED << network, 
                                                                                                                                                                                                                commitIndex, 
                                                                                                                                                                                                                sm, 
                                                                                                                                                                                                                smDomain >>
                                                                                                                                                        ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log22)[i])) >= (index))) /\ (((((log22)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                   THEN /\ LET result215 == ApplyLog((log22)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result215)[1]]
                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result215)[2]]
                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                             /\ \/ /\ LET value4167 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                        /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4167), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                        /\ plog' = plog33
                                                                                                                                                                                        /\ log' = log22
                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                \/ /\ LET yielded_fd1168 == (fd)[j] IN
                                                                                                                                                                                        /\ yielded_fd1168
                                                                                                                                                                                        /\ plog' = plog33
                                                                                                                                                                                        /\ log' = log22
                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                   ELSE /\ plog' = plog33
                                                                                                                                                                        /\ log' = log22
                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                        /\ UNCHANGED << network, 
                                                                                                                                                                                        commitIndex, 
                                                                                                                                                                                        sm, 
                                                                                                                                                                                        smDomain >>
                                                                                                                                           ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log22)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                      THEN /\ log' = [log22 EXCEPT ![i] = ((log22)[i]) \o ((m[self]).mentries)]
                                                                                                                                                           /\ LET value342 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                IF ((value342).cmd) = (LogConcat)
                                                                                                                                                                   THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value342).entries)]
                                                                                                                                                                        /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                              THEN /\ LET result216 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result216)[1]]
                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result216)[2]]
                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                        /\ \/ /\ LET value4168 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                   /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4168), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           \/ /\ LET yielded_fd1169 == (fd)[j] IN
                                                                                                                                                                                                   /\ yielded_fd1169
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                              ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   /\ UNCHANGED << network, 
                                                                                                                                                                                                   commitIndex, 
                                                                                                                                                                                                   sm, 
                                                                                                                                                                                                   smDomain >>
                                                                                                                                                                   ELSE /\ IF ((value342).cmd) = (LogPop)
                                                                                                                                                                              THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                                   /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                         THEN /\ LET result217 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                   /\ sm' = [sm EXCEPT ![i] = (result217)[1]]
                                                                                                                                                                                                   /\ smDomain' = [smDomain EXCEPT ![i] = (result217)[2]]
                                                                                                                                                                                                   /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                   /\ \/ /\ LET value4169 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                              /\ ((network)[j]).enabled
                                                                                                                                                                                                              /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                              /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4169), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                      \/ /\ LET yielded_fd1170 == (fd)[j] IN
                                                                                                                                                                                                              /\ yielded_fd1170
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         /\ UNCHANGED network
                                                                                                                                                                                         ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED << network, 
                                                                                                                                                                                                              commitIndex, 
                                                                                                                                                                                                              sm, 
                                                                                                                                                                                                              smDomain >>
                                                                                                                                                                              ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                         THEN /\ LET result218 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                   /\ sm' = [sm EXCEPT ![i] = (result218)[1]]
                                                                                                                                                                                                   /\ smDomain' = [smDomain EXCEPT ![i] = (result218)[2]]
                                                                                                                                                                                                   /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                   /\ \/ /\ LET value4170 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                              /\ ((network)[j]).enabled
                                                                                                                                                                                                              /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                              /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4170), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                      \/ /\ LET yielded_fd1171 == (fd)[j] IN
                                                                                                                                                                                                              /\ yielded_fd1171
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         /\ UNCHANGED network
                                                                                                                                                                                         ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED << network, 
                                                                                                                                                                                                              commitIndex, 
                                                                                                                                                                                                              sm, 
                                                                                                                                                                                                              smDomain >>
                                                                                                                                                                                   /\ plog' = plog
                                                                                                                                                      ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log22)[i])) >= (index))) /\ (((((log22)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                 THEN /\ LET result219 == ApplyLog((log22)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result219)[1]]
                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result219)[2]]
                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                           /\ \/ /\ LET value4171 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                      /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4171), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                      /\ log' = log22
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              \/ /\ LET yielded_fd1172 == (fd)[j] IN
                                                                                                                                                                                      /\ yielded_fd1172
                                                                                                                                                                                      /\ log' = log22
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                                 ELSE /\ log' = log22
                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                      /\ UNCHANGED << network, 
                                                                                                                                                                                      commitIndex, 
                                                                                                                                                                                      sm, 
                                                                                                                                                                                      smDomain >>
                                                                                                                                                           /\ plog' = plog
                                                                                                                 ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                            THEN /\ log' = [log EXCEPT ![i] = ((log)[i]) \o ((m[self]).mentries)]
                                                                                                                                 /\ LET value343 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                      IF ((value343).cmd) = (LogConcat)
                                                                                                                                         THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value343).entries)]
                                                                                                                                              /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                    THEN /\ LET result220 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                              /\ sm' = [sm EXCEPT ![i] = (result220)[1]]
                                                                                                                                                              /\ smDomain' = [smDomain EXCEPT ![i] = (result220)[2]]
                                                                                                                                                              /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                              /\ \/ /\ LET value4172 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                         /\ ((network)[j]).enabled
                                                                                                                                                                         /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                         /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4172), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                 \/ /\ LET yielded_fd1173 == (fd)[j] IN
                                                                                                                                                                         /\ yielded_fd1173
                                                                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                    /\ UNCHANGED network
                                                                                                                                                    ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                         /\ UNCHANGED << network, 
                                                                                                                                                                         commitIndex, 
                                                                                                                                                                         sm, 
                                                                                                                                                                         smDomain >>
                                                                                                                                         ELSE /\ IF ((value343).cmd) = (LogPop)
                                                                                                                                                    THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                         /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                               THEN /\ LET result221 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result221)[1]]
                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result221)[2]]
                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                         /\ \/ /\ LET value4173 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                    /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4173), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                            \/ /\ LET yielded_fd1174 == (fd)[j] IN
                                                                                                                                                                                    /\ yielded_fd1174
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                                               ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                    /\ UNCHANGED << network, 
                                                                                                                                                                                    commitIndex, 
                                                                                                                                                                                    sm, 
                                                                                                                                                                                    smDomain >>
                                                                                                                                                    ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                               THEN /\ LET result222 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result222)[1]]
                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result222)[2]]
                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                         /\ \/ /\ LET value4174 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                    /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4174), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                            \/ /\ LET yielded_fd1175 == (fd)[j] IN
                                                                                                                                                                                    /\ yielded_fd1175
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                                               ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                    /\ UNCHANGED << network, 
                                                                                                                                                                                    commitIndex, 
                                                                                                                                                                                    sm, 
                                                                                                                                                                                    smDomain >>
                                                                                                                                                         /\ plog' = plog
                                                                                                                            ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                       THEN /\ LET result223 == ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result223)[1]]
                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result223)[2]]
                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                 /\ \/ /\ LET value4175 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                            /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4175), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                    \/ /\ LET yielded_fd1176 == (fd)[j] IN
                                                                                                                                                            /\ yielded_fd1176
                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                       ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                            /\ UNCHANGED << network, 
                                                                                                                                                            commitIndex, 
                                                                                                                                                            sm, 
                                                                                                                                                            smDomain >>
                                                                                                                                 /\ UNCHANGED << log, 
                                                                                                                                                 plog >>
                                                                                         ELSE /\ IF (((m[self]).mterm) < ((currentTerm)[i])) \/ (((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                    THEN /\ \/ /\ LET value115 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                    /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value115), enabled |-> ((network)[j]).enabled]]
                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                            \/ /\ LET yielded_fd011 == (fd)[j] IN
                                                                                                                    /\ yielded_fd011
                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                               /\ UNCHANGED network
                                                                                                         /\ UNCHANGED << commitIndex, 
                                                                                                                         log, 
                                                                                                                         plog, 
                                                                                                                         sm, 
                                                                                                                         smDomain >>
                                                                                                    ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK), 
                                                                                                                   "Failure of assertion at line 7094, column 23.")
                                                                                                         /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                              IF ((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) # ((((m[self]).mentries)[1]).term))
                                                                                                                 THEN /\ LET log23 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (Len((log)[i])) - (1))] IN
                                                                                                                           LET value211 == [cmd |-> LogPop] IN
                                                                                                                             IF ((value211).cmd) = (LogConcat)
                                                                                                                                THEN /\ LET plog34 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value211).entries)] IN
                                                                                                                                          IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log23)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                             THEN /\ log' = [log23 EXCEPT ![i] = ((log23)[i]) \o ((m[self]).mentries)]
                                                                                                                                                  /\ LET value344 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                       IF ((value344).cmd) = (LogConcat)
                                                                                                                                                          THEN /\ plog' = [plog34 EXCEPT ![i] = ((plog34)[i]) \o ((value344).entries)]
                                                                                                                                                               /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                     THEN /\ LET result224 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result224)[1]]
                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result224)[2]]
                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                               /\ \/ /\ LET value4176 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                          /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4176), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                  \/ /\ LET yielded_fd1177 == (fd)[j] IN
                                                                                                                                                                                          /\ yielded_fd1177
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                     ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                          /\ UNCHANGED << network, 
                                                                                                                                                                                          commitIndex, 
                                                                                                                                                                                          sm, 
                                                                                                                                                                                          smDomain >>
                                                                                                                                                          ELSE /\ IF ((value344).cmd) = (LogPop)
                                                                                                                                                                     THEN /\ plog' = [plog34 EXCEPT ![i] = SubSeq((plog34)[i], 1, (Len((plog34)[i])) - (1))]
                                                                                                                                                                          /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                THEN /\ LET result225 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result225)[1]]
                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result225)[2]]
                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                          /\ \/ /\ LET value4177 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                     /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4177), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             \/ /\ LET yielded_fd1178 == (fd)[j] IN
                                                                                                                                                                                                     /\ yielded_fd1178
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED << network, 
                                                                                                                                                                                                     commitIndex, 
                                                                                                                                                                                                     sm, 
                                                                                                                                                                                                     smDomain >>
                                                                                                                                                                     ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                THEN /\ LET result226 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result226)[1]]
                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result226)[2]]
                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                          /\ \/ /\ LET value4178 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                     /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4178), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                     /\ plog' = plog34
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             \/ /\ LET yielded_fd1179 == (fd)[j] IN
                                                                                                                                                                                                     /\ yielded_fd1179
                                                                                                                                                                                                     /\ plog' = plog34
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                ELSE /\ plog' = plog34
                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED << network, 
                                                                                                                                                                                                     commitIndex, 
                                                                                                                                                                                                     sm, 
                                                                                                                                                                                                     smDomain >>
                                                                                                                                             ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log23)[i])) >= (index))) /\ (((((log23)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                        THEN /\ LET result227 == ApplyLog((log23)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result227)[1]]
                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result227)[2]]
                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                  /\ \/ /\ LET value4179 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                             /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4179), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                             /\ plog' = plog34
                                                                                                                                                                             /\ log' = log23
                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                     \/ /\ LET yielded_fd1180 == (fd)[j] IN
                                                                                                                                                                             /\ yielded_fd1180
                                                                                                                                                                             /\ plog' = plog34
                                                                                                                                                                             /\ log' = log23
                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                        ELSE /\ plog' = plog34
                                                                                                                                                             /\ log' = log23
                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                             /\ UNCHANGED << network, 
                                                                                                                                                                             commitIndex, 
                                                                                                                                                                             sm, 
                                                                                                                                                                             smDomain >>
                                                                                                                                ELSE /\ IF ((value211).cmd) = (LogPop)
                                                                                                                                           THEN /\ LET plog35 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))] IN
                                                                                                                                                     IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log23)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                        THEN /\ log' = [log23 EXCEPT ![i] = ((log23)[i]) \o ((m[self]).mentries)]
                                                                                                                                                             /\ LET value345 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                  IF ((value345).cmd) = (LogConcat)
                                                                                                                                                                     THEN /\ plog' = [plog35 EXCEPT ![i] = ((plog35)[i]) \o ((value345).entries)]
                                                                                                                                                                          /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                THEN /\ LET result228 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result228)[1]]
                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result228)[2]]
                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                          /\ \/ /\ LET value4180 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                     /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4180), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             \/ /\ LET yielded_fd1181 == (fd)[j] IN
                                                                                                                                                                                                     /\ yielded_fd1181
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED << network, 
                                                                                                                                                                                                     commitIndex, 
                                                                                                                                                                                                     sm, 
                                                                                                                                                                                                     smDomain >>
                                                                                                                                                                     ELSE /\ IF ((value345).cmd) = (LogPop)
                                                                                                                                                                                THEN /\ plog' = [plog35 EXCEPT ![i] = SubSeq((plog35)[i], 1, (Len((plog35)[i])) - (1))]
                                                                                                                                                                                     /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                           THEN /\ LET result229 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                     /\ sm' = [sm EXCEPT ![i] = (result229)[1]]
                                                                                                                                                                                                     /\ smDomain' = [smDomain EXCEPT ![i] = (result229)[2]]
                                                                                                                                                                                                     /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                     /\ \/ /\ LET value4181 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                /\ ((network)[j]).enabled
                                                                                                                                                                                                                /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4181), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                        \/ /\ LET yielded_fd1182 == (fd)[j] IN
                                                                                                                                                                                                                /\ yielded_fd1182
                                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           /\ UNCHANGED network
                                                                                                                                                                                           ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED << network, 
                                                                                                                                                                                                                commitIndex, 
                                                                                                                                                                                                                sm, 
                                                                                                                                                                                                                smDomain >>
                                                                                                                                                                                ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                           THEN /\ LET result230 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                     /\ sm' = [sm EXCEPT ![i] = (result230)[1]]
                                                                                                                                                                                                     /\ smDomain' = [smDomain EXCEPT ![i] = (result230)[2]]
                                                                                                                                                                                                     /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                     /\ \/ /\ LET value4182 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                /\ ((network)[j]).enabled
                                                                                                                                                                                                                /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4182), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                /\ plog' = plog35
                                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                        \/ /\ LET yielded_fd1183 == (fd)[j] IN
                                                                                                                                                                                                                /\ yielded_fd1183
                                                                                                                                                                                                                /\ plog' = plog35
                                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           /\ UNCHANGED network
                                                                                                                                                                                           ELSE /\ plog' = plog35
                                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED << network, 
                                                                                                                                                                                                                commitIndex, 
                                                                                                                                                                                                                sm, 
                                                                                                                                                                                                                smDomain >>
                                                                                                                                                        ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log23)[i])) >= (index))) /\ (((((log23)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                   THEN /\ LET result231 == ApplyLog((log23)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result231)[1]]
                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result231)[2]]
                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                             /\ \/ /\ LET value4183 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                        /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4183), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                        /\ plog' = plog35
                                                                                                                                                                                        /\ log' = log23
                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                \/ /\ LET yielded_fd1184 == (fd)[j] IN
                                                                                                                                                                                        /\ yielded_fd1184
                                                                                                                                                                                        /\ plog' = plog35
                                                                                                                                                                                        /\ log' = log23
                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                   ELSE /\ plog' = plog35
                                                                                                                                                                        /\ log' = log23
                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                        /\ UNCHANGED << network, 
                                                                                                                                                                                        commitIndex, 
                                                                                                                                                                                        sm, 
                                                                                                                                                                                        smDomain >>
                                                                                                                                           ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log23)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                                                      THEN /\ log' = [log23 EXCEPT ![i] = ((log23)[i]) \o ((m[self]).mentries)]
                                                                                                                                                           /\ LET value346 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                IF ((value346).cmd) = (LogConcat)
                                                                                                                                                                   THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value346).entries)]
                                                                                                                                                                        /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                              THEN /\ LET result232 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result232)[1]]
                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result232)[2]]
                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                        /\ \/ /\ LET value4184 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                   /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4184), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           \/ /\ LET yielded_fd1185 == (fd)[j] IN
                                                                                                                                                                                                   /\ yielded_fd1185
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                              ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   /\ UNCHANGED << network, 
                                                                                                                                                                                                   commitIndex, 
                                                                                                                                                                                                   sm, 
                                                                                                                                                                                                   smDomain >>
                                                                                                                                                                   ELSE /\ IF ((value346).cmd) = (LogPop)
                                                                                                                                                                              THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                                                   /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                         THEN /\ LET result233 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                   /\ sm' = [sm EXCEPT ![i] = (result233)[1]]
                                                                                                                                                                                                   /\ smDomain' = [smDomain EXCEPT ![i] = (result233)[2]]
                                                                                                                                                                                                   /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                   /\ \/ /\ LET value4185 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                              /\ ((network)[j]).enabled
                                                                                                                                                                                                              /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                              /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4185), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                      \/ /\ LET yielded_fd1186 == (fd)[j] IN
                                                                                                                                                                                                              /\ yielded_fd1186
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         /\ UNCHANGED network
                                                                                                                                                                                         ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED << network, 
                                                                                                                                                                                                              commitIndex, 
                                                                                                                                                                                                              sm, 
                                                                                                                                                                                                              smDomain >>
                                                                                                                                                                              ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                                         THEN /\ LET result234 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                   /\ sm' = [sm EXCEPT ![i] = (result234)[1]]
                                                                                                                                                                                                   /\ smDomain' = [smDomain EXCEPT ![i] = (result234)[2]]
                                                                                                                                                                                                   /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                   /\ \/ /\ LET value4186 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                              /\ ((network)[j]).enabled
                                                                                                                                                                                                              /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                              /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4186), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                      \/ /\ LET yielded_fd1187 == (fd)[j] IN
                                                                                                                                                                                                              /\ yielded_fd1187
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         /\ UNCHANGED network
                                                                                                                                                                                         ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED << network, 
                                                                                                                                                                                                              commitIndex, 
                                                                                                                                                                                                              sm, 
                                                                                                                                                                                                              smDomain >>
                                                                                                                                                                                   /\ plog' = plog
                                                                                                                                                      ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log23)[i])) >= (index))) /\ (((((log23)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                                 THEN /\ LET result235 == ApplyLog((log23)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result235)[1]]
                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result235)[2]]
                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                           /\ \/ /\ LET value4187 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                      /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4187), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                      /\ log' = log23
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              \/ /\ LET yielded_fd1188 == (fd)[j] IN
                                                                                                                                                                                      /\ yielded_fd1188
                                                                                                                                                                                      /\ log' = log23
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                                 ELSE /\ log' = log23
                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                      /\ UNCHANGED << network, 
                                                                                                                                                                                      commitIndex, 
                                                                                                                                                                                      sm, 
                                                                                                                                                                                      smDomain >>
                                                                                                                                                           /\ plog' = plog
                                                                                                                 ELSE /\ IF (((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) = ((m[self]).mprevLogIndex))
                                                                                                                            THEN /\ log' = [log EXCEPT ![i] = ((log)[i]) \o ((m[self]).mentries)]
                                                                                                                                 /\ LET value347 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                      IF ((value347).cmd) = (LogConcat)
                                                                                                                                         THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value347).entries)]
                                                                                                                                              /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                    THEN /\ LET result236 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                              /\ sm' = [sm EXCEPT ![i] = (result236)[1]]
                                                                                                                                                              /\ smDomain' = [smDomain EXCEPT ![i] = (result236)[2]]
                                                                                                                                                              /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                              /\ \/ /\ LET value4188 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                         /\ ((network)[j]).enabled
                                                                                                                                                                         /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                         /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4188), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                 \/ /\ LET yielded_fd1189 == (fd)[j] IN
                                                                                                                                                                         /\ yielded_fd1189
                                                                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                    /\ UNCHANGED network
                                                                                                                                                    ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                         /\ UNCHANGED << network, 
                                                                                                                                                                         commitIndex, 
                                                                                                                                                                         sm, 
                                                                                                                                                                         smDomain >>
                                                                                                                                         ELSE /\ IF ((value347).cmd) = (LogPop)
                                                                                                                                                    THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - (1))]
                                                                                                                                                         /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                               THEN /\ LET result237 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result237)[1]]
                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result237)[2]]
                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                         /\ \/ /\ LET value4189 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                    /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4189), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                            \/ /\ LET yielded_fd1190 == (fd)[j] IN
                                                                                                                                                                                    /\ yielded_fd1190
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                                               ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                    /\ UNCHANGED << network, 
                                                                                                                                                                                    commitIndex, 
                                                                                                                                                                                    sm, 
                                                                                                                                                                                    smDomain >>
                                                                                                                                                    ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log')[i])) >= (index))) /\ (((((log')[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                                               THEN /\ LET result238 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result238)[1]]
                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result238)[2]]
                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                         /\ \/ /\ LET value4190 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                    /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4190), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                            \/ /\ LET yielded_fd1191 == (fd)[j] IN
                                                                                                                                                                                    /\ yielded_fd1191
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                                               ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                    /\ UNCHANGED << network, 
                                                                                                                                                                                    commitIndex, 
                                                                                                                                                                                    sm, 
                                                                                                                                                                                    smDomain >>
                                                                                                                                                         /\ plog' = plog
                                                                                                                            ELSE /\ IF (((m[self]).mentries) = (<<>>)) \/ (((((m[self]).mentries) # (<<>>)) /\ ((Len((log)[i])) >= (index))) /\ (((((log)[i])[index]).term) = ((((m[self]).mentries)[1]).term)))
                                                                                                                                       THEN /\ LET result239 == ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result239)[1]]
                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result239)[2]]
                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                 /\ \/ /\ LET value4191 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                            /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value4191), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                    \/ /\ LET yielded_fd1192 == (fd)[j] IN
                                                                                                                                                            /\ yielded_fd1192
                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                       ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                            /\ UNCHANGED << network, 
                                                                                                                                                            commitIndex, 
                                                                                                                                                            sm, 
                                                                                                                                                            smDomain >>
                                                                                                                                 /\ UNCHANGED << log, 
                                                                                                                                                 plog >>
                                                                                              /\ state' = state
                                                                          /\ UNCHANGED << currentTerm, 
                                                                                          votedFor >>
                                                               /\ UNCHANGED << nextIndex, 
                                                                               matchIndex >>
                                                          ELSE /\ IF ((m[self]).mtype) = (AppendEntriesResponse)
                                                                     THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                                                THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                                                     /\ state' = [state EXCEPT ![self] = Follower]
                                                                                     /\ votedFor' = [votedFor EXCEPT ![self] = Nil]
                                                                                     /\ leader' = [leader EXCEPT ![self] = Nil]
                                                                                     /\ IF ((m[self]).mterm) < ((currentTerm')[self])
                                                                                           THEN /\ TRUE
                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                /\ UNCHANGED << nextIndex, 
                                                                                                                matchIndex >>
                                                                                           ELSE /\ LET i == self IN
                                                                                                     LET j == (m[self]).msource IN
                                                                                                       /\ Assert(((m[self]).mterm) = ((currentTerm')[i]), 
                                                                                                                 "Failure of assertion at line 7563, column 23.")
                                                                                                       /\ IF (m[self]).msuccess
                                                                                                             THEN /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m[self]).mmatchIndex) + (1)]]
                                                                                                                  /\ matchIndex' = [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m[self]).mmatchIndex]]
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]]
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                  /\ UNCHANGED matchIndex
                                                                                ELSE /\ IF ((m[self]).mterm) < ((currentTerm)[self])
                                                                                           THEN /\ TRUE
                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                /\ UNCHANGED << nextIndex, 
                                                                                                                matchIndex >>
                                                                                           ELSE /\ LET i == self IN
                                                                                                     LET j == (m[self]).msource IN
                                                                                                       /\ Assert(((m[self]).mterm) = ((currentTerm)[i]), 
                                                                                                                 "Failure of assertion at line 7583, column 23.")
                                                                                                       /\ IF (m[self]).msuccess
                                                                                                             THEN /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m[self]).mmatchIndex) + (1)]]
                                                                                                                  /\ matchIndex' = [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m[self]).mmatchIndex]]
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]]
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                  /\ UNCHANGED matchIndex
                                                                                     /\ UNCHANGED << state, 
                                                                                                     currentTerm, 
                                                                                                     votedFor, 
                                                                                                     leader >>
                                                                          /\ UNCHANGED << network, 
                                                                                          log, 
                                                                                          plog >>
                                                                     ELSE /\ IF (((m[self]).mtype) = (ClientPutRequest)) \/ (((m[self]).mtype) = (ClientGetRequest))
                                                                                THEN /\ IF ((state)[self]) = (Leader)
                                                                                           THEN /\ LET entry == [term |-> (currentTerm)[self], cmd |-> (m[self]).mcmd, client |-> (m[self]).msource] IN
                                                                                                     /\ log' = [log EXCEPT ![self] = Append((log)[self], entry)]
                                                                                                     /\ LET value52 == [cmd |-> LogConcat, entries |-> <<entry>>] IN
                                                                                                          IF ((value52).cmd) = (LogConcat)
                                                                                                             THEN /\ plog' = [plog EXCEPT ![self] = ((plog)[self]) \o ((value52).entries)]
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ IF ((value52).cmd) = (LogPop)
                                                                                                                        THEN /\ plog' = [plog EXCEPT ![self] = SubSeq((plog)[self], 1, (Len((plog)[self])) - (1))]
                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                             /\ plog' = plog
                                                                                                /\ UNCHANGED network
                                                                                           ELSE /\ LET i == self IN
                                                                                                     LET j == (m[self]).msource IN
                                                                                                       LET respType == IF (((m[self]).mcmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse IN
                                                                                                         LET value62 == [mtype |-> respType, msuccess |-> FALSE, mresponse |-> [idx |-> ((m[self]).mcmd).idx, key |-> ((m[self]).mcmd).key], mleaderHint |-> (leader)[i], msource |-> i, mdest |-> j] IN
                                                                                                           /\ ((network)[j]).enabled
                                                                                                           /\ (Len(((network)[j]).queue)) < (BufferSize)
                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> Append(((network)[j]).queue, value62), enabled |-> ((network)[j]).enabled]]
                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                /\ UNCHANGED << log, 
                                                                                                                plog >>
                                                                                ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                     /\ UNCHANGED << network, 
                                                                                                     log, 
                                                                                                     plog >>
                                                                          /\ UNCHANGED << state, 
                                                                                          currentTerm, 
                                                                                          nextIndex, 
                                                                                          matchIndex, 
                                                                                          votedFor, 
                                                                                          leader >>
                                                               /\ UNCHANGED << commitIndex, 
                                                                               sm, 
                                                                               smDomain >>
                                                    /\ UNCHANGED << votesResponded, 
                                                                    votesGranted >>
                   /\ UNCHANGED << fd, leaderTimeout, appendEntriesCh, reqCh, 
                                   respCh, requestVoteSrvId, 
                                   appendEntriesSrvId, advanceCommitIndexSrvId, 
                                   becomeLeaderSrvId, crasherSrvId, idx, m, 
                                   srvId, idx0, srvId0, idx1, srvId1, 
                                   newCommitIndex, srvId2, srvId3, leader0, 
                                   req, resp, reqIdx, timeout, srvId4 >>

s0(self) == serverLoop(self) \/ handleMsg(self)

serverRequestVoteLoop(self) == /\ pc[self] = "serverRequestVoteLoop"
                               /\ IF TRUE
                                     THEN /\ IF ExploreFail
                                                THEN /\ LET yielded_network20 == ((network)[srvId0[self]]).enabled IN
                                                          IF ~ (yielded_network20)
                                                             THEN /\ FALSE
                                                                  /\ ((state)[srvId0[self]]) \in ({Follower, Candidate})
                                                                  /\ LET yielded_network30 == Len(((network)[srvId0[self]]).queue) IN
                                                                       /\ ((yielded_network30) = (0)) /\ (leaderTimeout)
                                                                       /\ LET i3 == srvId0[self] IN
                                                                            /\ state' = [state EXCEPT ![i3] = Candidate]
                                                                            /\ currentTerm' = [currentTerm EXCEPT ![i3] = ((currentTerm)[i3]) + (1)]
                                                                            /\ votedFor' = [votedFor EXCEPT ![i3] = i3]
                                                                            /\ votesResponded' = [votesResponded EXCEPT ![i3] = {i3}]
                                                                            /\ votesGranted' = [votesGranted EXCEPT ![i3] = {i3}]
                                                                            /\ leader' = [leader EXCEPT ![i3] = Nil]
                                                                            /\ IF Debug
                                                                                  THEN /\ PrintT(<<"ServerTimeout", i3, (currentTerm')[i3]>>)
                                                                                       /\ idx0' = [idx0 EXCEPT ![self] = 1]
                                                                                       /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                                  ELSE /\ idx0' = [idx0 EXCEPT ![self] = 1]
                                                                                       /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                             ELSE /\ ((state)[srvId0[self]]) \in ({Follower, Candidate})
                                                                  /\ LET yielded_network31 == Len(((network)[srvId0[self]]).queue) IN
                                                                       /\ ((yielded_network31) = (0)) /\ (leaderTimeout)
                                                                       /\ LET i4 == srvId0[self] IN
                                                                            /\ state' = [state EXCEPT ![i4] = Candidate]
                                                                            /\ currentTerm' = [currentTerm EXCEPT ![i4] = ((currentTerm)[i4]) + (1)]
                                                                            /\ votedFor' = [votedFor EXCEPT ![i4] = i4]
                                                                            /\ votesResponded' = [votesResponded EXCEPT ![i4] = {i4}]
                                                                            /\ votesGranted' = [votesGranted EXCEPT ![i4] = {i4}]
                                                                            /\ leader' = [leader EXCEPT ![i4] = Nil]
                                                                            /\ IF Debug
                                                                                  THEN /\ PrintT(<<"ServerTimeout", i4, (currentTerm')[i4]>>)
                                                                                       /\ idx0' = [idx0 EXCEPT ![self] = 1]
                                                                                       /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                                  ELSE /\ idx0' = [idx0 EXCEPT ![self] = 1]
                                                                                       /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                ELSE /\ ((state)[srvId0[self]]) \in ({Follower, Candidate})
                                                     /\ LET yielded_network32 == Len(((network)[srvId0[self]]).queue) IN
                                                          /\ ((yielded_network32) = (0)) /\ (leaderTimeout)
                                                          /\ LET i5 == srvId0[self] IN
                                                               /\ state' = [state EXCEPT ![i5] = Candidate]
                                                               /\ currentTerm' = [currentTerm EXCEPT ![i5] = ((currentTerm)[i5]) + (1)]
                                                               /\ votedFor' = [votedFor EXCEPT ![i5] = i5]
                                                               /\ votesResponded' = [votesResponded EXCEPT ![i5] = {i5}]
                                                               /\ votesGranted' = [votesGranted EXCEPT ![i5] = {i5}]
                                                               /\ leader' = [leader EXCEPT ![i5] = Nil]
                                                               /\ IF Debug
                                                                     THEN /\ PrintT(<<"ServerTimeout", i5, (currentTerm')[i5]>>)
                                                                          /\ idx0' = [idx0 EXCEPT ![self] = 1]
                                                                          /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                     ELSE /\ idx0' = [idx0 EXCEPT ![self] = 1]
                                                                          /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                     ELSE /\ pc' = [pc EXCEPT ![self] = "Done"]
                                          /\ UNCHANGED << state, currentTerm, 
                                                          votedFor, 
                                                          votesResponded, 
                                                          votesGranted, leader, 
                                                          idx0 >>
                               /\ UNCHANGED << network, fd, commitIndex, 
                                               nextIndex, matchIndex, log, 
                                               plog, sm, smDomain, 
                                               leaderTimeout, appendEntriesCh, 
                                               reqCh, respCh, requestVoteSrvId, 
                                               appendEntriesSrvId, 
                                               advanceCommitIndexSrvId, 
                                               becomeLeaderSrvId, crasherSrvId, 
                                               idx, m, srvId, srvId0, idx1, 
                                               srvId1, newCommitIndex, srvId2, 
                                               srvId3, leader0, req, resp, 
                                               reqIdx, timeout, srvId4 >>

requestVoteLoop(self) == /\ pc[self] = "requestVoteLoop"
                         /\ IF (idx0[self]) <= (NumServers)
                               THEN /\ IF ExploreFail
                                          THEN /\ LET yielded_network40 == ((network)[srvId0[self]]).enabled IN
                                                    IF ~ (yielded_network40)
                                                       THEN /\ FALSE
                                                            /\ IF (idx0[self]) # (srvId0[self])
                                                                  THEN /\ \/ /\ LET value70 == [mtype |-> RequestVoteRequest, mterm |-> (currentTerm)[srvId0[self]], mlastLogTerm |-> LastTerm((log)[srvId0[self]]), mlastLogIndex |-> Len((log)[srvId0[self]]), msource |-> srvId0[self], mdest |-> idx0[self]] IN
                                                                                  /\ ((network)[idx0[self]]).enabled
                                                                                  /\ (Len(((network)[idx0[self]]).queue)) < (BufferSize)
                                                                                  /\ network' = [network EXCEPT ![idx0[self]] = [queue |-> Append(((network)[idx0[self]]).queue, value70), enabled |-> ((network)[idx0[self]]).enabled]]
                                                                                  /\ idx0' = [idx0 EXCEPT ![self] = (idx0[self]) + (1)]
                                                                                  /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                          \/ /\ LET yielded_fd28 == (fd)[idx0[self]] IN
                                                                                  /\ yielded_fd28
                                                                                  /\ idx0' = [idx0 EXCEPT ![self] = (idx0[self]) + (1)]
                                                                                  /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                             /\ UNCHANGED network
                                                                  ELSE /\ idx0' = [idx0 EXCEPT ![self] = (idx0[self]) + (1)]
                                                                       /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                       /\ UNCHANGED network
                                                       ELSE /\ IF (idx0[self]) # (srvId0[self])
                                                                  THEN /\ \/ /\ LET value71 == [mtype |-> RequestVoteRequest, mterm |-> (currentTerm)[srvId0[self]], mlastLogTerm |-> LastTerm((log)[srvId0[self]]), mlastLogIndex |-> Len((log)[srvId0[self]]), msource |-> srvId0[self], mdest |-> idx0[self]] IN
                                                                                  /\ ((network)[idx0[self]]).enabled
                                                                                  /\ (Len(((network)[idx0[self]]).queue)) < (BufferSize)
                                                                                  /\ network' = [network EXCEPT ![idx0[self]] = [queue |-> Append(((network)[idx0[self]]).queue, value71), enabled |-> ((network)[idx0[self]]).enabled]]
                                                                                  /\ idx0' = [idx0 EXCEPT ![self] = (idx0[self]) + (1)]
                                                                                  /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                          \/ /\ LET yielded_fd29 == (fd)[idx0[self]] IN
                                                                                  /\ yielded_fd29
                                                                                  /\ idx0' = [idx0 EXCEPT ![self] = (idx0[self]) + (1)]
                                                                                  /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                             /\ UNCHANGED network
                                                                  ELSE /\ idx0' = [idx0 EXCEPT ![self] = (idx0[self]) + (1)]
                                                                       /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                       /\ UNCHANGED network
                                          ELSE /\ IF (idx0[self]) # (srvId0[self])
                                                     THEN /\ \/ /\ LET value72 == [mtype |-> RequestVoteRequest, mterm |-> (currentTerm)[srvId0[self]], mlastLogTerm |-> LastTerm((log)[srvId0[self]]), mlastLogIndex |-> Len((log)[srvId0[self]]), msource |-> srvId0[self], mdest |-> idx0[self]] IN
                                                                     /\ ((network)[idx0[self]]).enabled
                                                                     /\ (Len(((network)[idx0[self]]).queue)) < (BufferSize)
                                                                     /\ network' = [network EXCEPT ![idx0[self]] = [queue |-> Append(((network)[idx0[self]]).queue, value72), enabled |-> ((network)[idx0[self]]).enabled]]
                                                                     /\ idx0' = [idx0 EXCEPT ![self] = (idx0[self]) + (1)]
                                                                     /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                             \/ /\ LET yielded_fd210 == (fd)[idx0[self]] IN
                                                                     /\ yielded_fd210
                                                                     /\ idx0' = [idx0 EXCEPT ![self] = (idx0[self]) + (1)]
                                                                     /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                /\ UNCHANGED network
                                                     ELSE /\ idx0' = [idx0 EXCEPT ![self] = (idx0[self]) + (1)]
                                                          /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                          /\ UNCHANGED network
                               ELSE /\ pc' = [pc EXCEPT ![self] = "serverRequestVoteLoop"]
                                    /\ UNCHANGED << network, idx0 >>
                         /\ UNCHANGED << fd, state, currentTerm, commitIndex, 
                                         nextIndex, matchIndex, log, plog, 
                                         votedFor, votesResponded, 
                                         votesGranted, leader, sm, smDomain, 
                                         leaderTimeout, appendEntriesCh, reqCh, 
                                         respCh, requestVoteSrvId, 
                                         appendEntriesSrvId, 
                                         advanceCommitIndexSrvId, 
                                         becomeLeaderSrvId, crasherSrvId, idx, 
                                         m, srvId, srvId0, idx1, srvId1, 
                                         newCommitIndex, srvId2, srvId3, 
                                         leader0, req, resp, reqIdx, timeout, 
                                         srvId4 >>

s1(self) == serverRequestVoteLoop(self) \/ requestVoteLoop(self)

serverAppendEntriesLoop(self) == /\ pc[self] = "serverAppendEntriesLoop"
                                 /\ IF appendEntriesCh
                                       THEN /\ IF ExploreFail
                                                  THEN /\ LET yielded_network50 == ((network)[srvId1[self]]).enabled IN
                                                            IF ~ (yielded_network50)
                                                               THEN /\ FALSE
                                                                    /\ ((state)[srvId1[self]]) = (Leader)
                                                                    /\ idx1' = [idx1 EXCEPT ![self] = 1]
                                                                    /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                               ELSE /\ ((state)[srvId1[self]]) = (Leader)
                                                                    /\ idx1' = [idx1 EXCEPT ![self] = 1]
                                                                    /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                  ELSE /\ ((state)[srvId1[self]]) = (Leader)
                                                       /\ idx1' = [idx1 EXCEPT ![self] = 1]
                                                       /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                       ELSE /\ pc' = [pc EXCEPT ![self] = "Done"]
                                            /\ idx1' = idx1
                                 /\ UNCHANGED << network, fd, state, 
                                                 currentTerm, commitIndex, 
                                                 nextIndex, matchIndex, log, 
                                                 plog, votedFor, 
                                                 votesResponded, votesGranted, 
                                                 leader, sm, smDomain, 
                                                 leaderTimeout, 
                                                 appendEntriesCh, reqCh, 
                                                 respCh, requestVoteSrvId, 
                                                 appendEntriesSrvId, 
                                                 advanceCommitIndexSrvId, 
                                                 becomeLeaderSrvId, 
                                                 crasherSrvId, idx, m, srvId, 
                                                 idx0, srvId0, srvId1, 
                                                 newCommitIndex, srvId2, 
                                                 srvId3, leader0, req, resp, 
                                                 reqIdx, timeout, srvId4 >>

appendEntriesLoop(self) == /\ pc[self] = "appendEntriesLoop"
                           /\ IF (((state)[srvId1[self]]) = (Leader)) /\ ((idx1[self]) <= (NumServers))
                                 THEN /\ IF ExploreFail
                                            THEN /\ LET yielded_network60 == ((network)[srvId1[self]]).enabled IN
                                                      IF ~ (yielded_network60)
                                                         THEN /\ FALSE
                                                              /\ IF (idx1[self]) # (srvId1[self])
                                                                    THEN /\ LET prevLogIndex3 == (((nextIndex)[srvId1[self]])[idx1[self]]) - (1) IN
                                                                              LET prevLogTerm3 == IF (prevLogIndex3) > (0) THEN (((log)[srvId1[self]])[prevLogIndex3]).term ELSE 0 IN
                                                                                LET lastEntry3 == Min({Len((log)[srvId1[self]]), ((nextIndex)[srvId1[self]])[idx1[self]]}) IN
                                                                                  LET entries3 == SubSeq((log)[srvId1[self]], ((nextIndex)[srvId1[self]])[idx1[self]], lastEntry3) IN
                                                                                    \/ /\ LET value80 == [mtype |-> AppendEntriesRequest, mterm |-> (currentTerm)[srvId1[self]], mprevLogIndex |-> prevLogIndex3, mprevLogTerm |-> prevLogTerm3, mentries |-> entries3, mcommitIndex |-> Min({(commitIndex)[srvId1[self]], lastEntry3}), msource |-> srvId1[self], mdest |-> idx1[self]] IN
                                                                                            /\ ((network)[idx1[self]]).enabled
                                                                                            /\ (Len(((network)[idx1[self]]).queue)) < (BufferSize)
                                                                                            /\ network' = [network EXCEPT ![idx1[self]] = [queue |-> Append(((network)[idx1[self]]).queue, value80), enabled |-> ((network)[idx1[self]]).enabled]]
                                                                                            /\ idx1' = [idx1 EXCEPT ![self] = (idx1[self]) + (1)]
                                                                                            /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                                                    \/ /\ LET yielded_fd30 == (fd)[idx1[self]] IN
                                                                                            /\ yielded_fd30
                                                                                            /\ idx1' = [idx1 EXCEPT ![self] = (idx1[self]) + (1)]
                                                                                            /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                                                       /\ UNCHANGED network
                                                                    ELSE /\ idx1' = [idx1 EXCEPT ![self] = (idx1[self]) + (1)]
                                                                         /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                                         /\ UNCHANGED network
                                                         ELSE /\ IF (idx1[self]) # (srvId1[self])
                                                                    THEN /\ LET prevLogIndex4 == (((nextIndex)[srvId1[self]])[idx1[self]]) - (1) IN
                                                                              LET prevLogTerm4 == IF (prevLogIndex4) > (0) THEN (((log)[srvId1[self]])[prevLogIndex4]).term ELSE 0 IN
                                                                                LET lastEntry4 == Min({Len((log)[srvId1[self]]), ((nextIndex)[srvId1[self]])[idx1[self]]}) IN
                                                                                  LET entries4 == SubSeq((log)[srvId1[self]], ((nextIndex)[srvId1[self]])[idx1[self]], lastEntry4) IN
                                                                                    \/ /\ LET value81 == [mtype |-> AppendEntriesRequest, mterm |-> (currentTerm)[srvId1[self]], mprevLogIndex |-> prevLogIndex4, mprevLogTerm |-> prevLogTerm4, mentries |-> entries4, mcommitIndex |-> Min({(commitIndex)[srvId1[self]], lastEntry4}), msource |-> srvId1[self], mdest |-> idx1[self]] IN
                                                                                            /\ ((network)[idx1[self]]).enabled
                                                                                            /\ (Len(((network)[idx1[self]]).queue)) < (BufferSize)
                                                                                            /\ network' = [network EXCEPT ![idx1[self]] = [queue |-> Append(((network)[idx1[self]]).queue, value81), enabled |-> ((network)[idx1[self]]).enabled]]
                                                                                            /\ idx1' = [idx1 EXCEPT ![self] = (idx1[self]) + (1)]
                                                                                            /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                                                    \/ /\ LET yielded_fd31 == (fd)[idx1[self]] IN
                                                                                            /\ yielded_fd31
                                                                                            /\ idx1' = [idx1 EXCEPT ![self] = (idx1[self]) + (1)]
                                                                                            /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                                                       /\ UNCHANGED network
                                                                    ELSE /\ idx1' = [idx1 EXCEPT ![self] = (idx1[self]) + (1)]
                                                                         /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                                         /\ UNCHANGED network
                                            ELSE /\ IF (idx1[self]) # (srvId1[self])
                                                       THEN /\ LET prevLogIndex5 == (((nextIndex)[srvId1[self]])[idx1[self]]) - (1) IN
                                                                 LET prevLogTerm5 == IF (prevLogIndex5) > (0) THEN (((log)[srvId1[self]])[prevLogIndex5]).term ELSE 0 IN
                                                                   LET lastEntry5 == Min({Len((log)[srvId1[self]]), ((nextIndex)[srvId1[self]])[idx1[self]]}) IN
                                                                     LET entries5 == SubSeq((log)[srvId1[self]], ((nextIndex)[srvId1[self]])[idx1[self]], lastEntry5) IN
                                                                       \/ /\ LET value82 == [mtype |-> AppendEntriesRequest, mterm |-> (currentTerm)[srvId1[self]], mprevLogIndex |-> prevLogIndex5, mprevLogTerm |-> prevLogTerm5, mentries |-> entries5, mcommitIndex |-> Min({(commitIndex)[srvId1[self]], lastEntry5}), msource |-> srvId1[self], mdest |-> idx1[self]] IN
                                                                               /\ ((network)[idx1[self]]).enabled
                                                                               /\ (Len(((network)[idx1[self]]).queue)) < (BufferSize)
                                                                               /\ network' = [network EXCEPT ![idx1[self]] = [queue |-> Append(((network)[idx1[self]]).queue, value82), enabled |-> ((network)[idx1[self]]).enabled]]
                                                                               /\ idx1' = [idx1 EXCEPT ![self] = (idx1[self]) + (1)]
                                                                               /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                                       \/ /\ LET yielded_fd32 == (fd)[idx1[self]] IN
                                                                               /\ yielded_fd32
                                                                               /\ idx1' = [idx1 EXCEPT ![self] = (idx1[self]) + (1)]
                                                                               /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                                          /\ UNCHANGED network
                                                       ELSE /\ idx1' = [idx1 EXCEPT ![self] = (idx1[self]) + (1)]
                                                            /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                            /\ UNCHANGED network
                                 ELSE /\ pc' = [pc EXCEPT ![self] = "serverAppendEntriesLoop"]
                                      /\ UNCHANGED << network, idx1 >>
                           /\ UNCHANGED << fd, state, currentTerm, commitIndex, 
                                           nextIndex, matchIndex, log, plog, 
                                           votedFor, votesResponded, 
                                           votesGranted, leader, sm, smDomain, 
                                           leaderTimeout, appendEntriesCh, 
                                           reqCh, respCh, requestVoteSrvId, 
                                           appendEntriesSrvId, 
                                           advanceCommitIndexSrvId, 
                                           becomeLeaderSrvId, crasherSrvId, 
                                           idx, m, srvId, idx0, srvId0, srvId1, 
                                           newCommitIndex, srvId2, srvId3, 
                                           leader0, req, resp, reqIdx, timeout, 
                                           srvId4 >>

s2(self) == serverAppendEntriesLoop(self) \/ appendEntriesLoop(self)

serverAdvanceCommitIndexLoop(self) == /\ pc[self] = "serverAdvanceCommitIndexLoop"
                                      /\ IF TRUE
                                            THEN /\ IF ExploreFail
                                                       THEN /\ LET yielded_network70 == ((network)[srvId2[self]]).enabled IN
                                                                 IF ~ (yielded_network70)
                                                                    THEN /\ FALSE
                                                                         /\ ((state)[srvId2[self]]) = (Leader)
                                                                         /\ LET i == srvId2[self] IN
                                                                              LET agreeIndexes == FindAgreeIndices((log)[i], i, (matchIndex)[i]) IN
                                                                                LET nCommitIndex == IF ((agreeIndexes) # ({})) /\ (((((log)[i])[Max(agreeIndexes)]).term) = ((currentTerm)[i])) THEN Max(agreeIndexes) ELSE (commitIndex)[i] IN
                                                                                  /\ newCommitIndex' = [newCommitIndex EXCEPT ![self] = nCommitIndex]
                                                                                  /\ Assert((newCommitIndex'[self]) >= ((commitIndex)[i]), 
                                                                                            "Failure of assertion at line 7929, column 17.")
                                                                                  /\ pc' = [pc EXCEPT ![self] = "applyLoop"]
                                                                    ELSE /\ ((state)[srvId2[self]]) = (Leader)
                                                                         /\ LET i == srvId2[self] IN
                                                                              LET agreeIndexes == FindAgreeIndices((log)[i], i, (matchIndex)[i]) IN
                                                                                LET nCommitIndex == IF ((agreeIndexes) # ({})) /\ (((((log)[i])[Max(agreeIndexes)]).term) = ((currentTerm)[i])) THEN Max(agreeIndexes) ELSE (commitIndex)[i] IN
                                                                                  /\ newCommitIndex' = [newCommitIndex EXCEPT ![self] = nCommitIndex]
                                                                                  /\ Assert((newCommitIndex'[self]) >= ((commitIndex)[i]), 
                                                                                            "Failure of assertion at line 7940, column 17.")
                                                                                  /\ pc' = [pc EXCEPT ![self] = "applyLoop"]
                                                       ELSE /\ ((state)[srvId2[self]]) = (Leader)
                                                            /\ LET i == srvId2[self] IN
                                                                 LET agreeIndexes == FindAgreeIndices((log)[i], i, (matchIndex)[i]) IN
                                                                   LET nCommitIndex == IF ((agreeIndexes) # ({})) /\ (((((log)[i])[Max(agreeIndexes)]).term) = ((currentTerm)[i])) THEN Max(agreeIndexes) ELSE (commitIndex)[i] IN
                                                                     /\ newCommitIndex' = [newCommitIndex EXCEPT ![self] = nCommitIndex]
                                                                     /\ Assert((newCommitIndex'[self]) >= ((commitIndex)[i]), 
                                                                               "Failure of assertion at line 7953, column 13.")
                                                                     /\ pc' = [pc EXCEPT ![self] = "applyLoop"]
                                            ELSE /\ pc' = [pc EXCEPT ![self] = "Done"]
                                                 /\ UNCHANGED newCommitIndex
                                      /\ UNCHANGED << network, fd, state, 
                                                      currentTerm, commitIndex, 
                                                      nextIndex, matchIndex, 
                                                      log, plog, votedFor, 
                                                      votesResponded, 
                                                      votesGranted, leader, sm, 
                                                      smDomain, leaderTimeout, 
                                                      appendEntriesCh, reqCh, 
                                                      respCh, requestVoteSrvId, 
                                                      appendEntriesSrvId, 
                                                      advanceCommitIndexSrvId, 
                                                      becomeLeaderSrvId, 
                                                      crasherSrvId, idx, m, 
                                                      srvId, idx0, srvId0, 
                                                      idx1, srvId1, srvId2, 
                                                      srvId3, leader0, req, 
                                                      resp, reqIdx, timeout, 
                                                      srvId4 >>

applyLoop(self) == /\ pc[self] = "applyLoop"
                   /\ IF ((commitIndex)[srvId2[self]]) < (newCommitIndex[self])
                         THEN /\ IF ExploreFail
                                    THEN /\ LET yielded_network80 == ((network)[srvId2[self]]).enabled IN
                                              IF ~ (yielded_network80)
                                                 THEN /\ FALSE
                                                      /\ commitIndex' = [commitIndex EXCEPT ![srvId2[self]] = ((commitIndex)[srvId2[self]]) + (1)]
                                                      /\ LET i == srvId2[self] IN
                                                           LET k == (commitIndex')[i] IN
                                                             LET entry == ((log)[i])[k] IN
                                                               LET cmd == (entry).cmd IN
                                                                 LET respType == IF ((cmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse IN
                                                                   IF ((cmd).type) = (Put)
                                                                      THEN /\ sm' = [sm EXCEPT ![i] = ((sm)[i]) @@ (((cmd).key) :> ((cmd).value))]
                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = ((smDomain)[i]) \union ({(cmd).key})]
                                                                           /\ LET reqOk == ((cmd).key) \in ((smDomain')[i]) IN
                                                                                LET value90 == [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm')[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client] IN
                                                                                  /\ ((network)[(entry).client]).enabled
                                                                                  /\ (Len(((network)[(entry).client]).queue)) < (BufferSize)
                                                                                  /\ network' = [network EXCEPT ![(entry).client] = [queue |-> Append(((network)[(entry).client]).queue, value90), enabled |-> ((network)[(entry).client]).enabled]]
                                                                                  /\ pc' = [pc EXCEPT ![self] = "applyLoop"]
                                                                      ELSE /\ LET reqOk == ((cmd).key) \in ((smDomain)[i]) IN
                                                                                LET value91 == [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm)[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client] IN
                                                                                  /\ ((network)[(entry).client]).enabled
                                                                                  /\ (Len(((network)[(entry).client]).queue)) < (BufferSize)
                                                                                  /\ network' = [network EXCEPT ![(entry).client] = [queue |-> Append(((network)[(entry).client]).queue, value91), enabled |-> ((network)[(entry).client]).enabled]]
                                                                                  /\ pc' = [pc EXCEPT ![self] = "applyLoop"]
                                                                           /\ UNCHANGED << sm, 
                                                                                           smDomain >>
                                                 ELSE /\ commitIndex' = [commitIndex EXCEPT ![srvId2[self]] = ((commitIndex)[srvId2[self]]) + (1)]
                                                      /\ LET i == srvId2[self] IN
                                                           LET k == (commitIndex')[i] IN
                                                             LET entry == ((log)[i])[k] IN
                                                               LET cmd == (entry).cmd IN
                                                                 LET respType == IF ((cmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse IN
                                                                   IF ((cmd).type) = (Put)
                                                                      THEN /\ sm' = [sm EXCEPT ![i] = ((sm)[i]) @@ (((cmd).key) :> ((cmd).value))]
                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = ((smDomain)[i]) \union ({(cmd).key})]
                                                                           /\ LET reqOk == ((cmd).key) \in ((smDomain')[i]) IN
                                                                                LET value92 == [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm')[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client] IN
                                                                                  /\ ((network)[(entry).client]).enabled
                                                                                  /\ (Len(((network)[(entry).client]).queue)) < (BufferSize)
                                                                                  /\ network' = [network EXCEPT ![(entry).client] = [queue |-> Append(((network)[(entry).client]).queue, value92), enabled |-> ((network)[(entry).client]).enabled]]
                                                                                  /\ pc' = [pc EXCEPT ![self] = "applyLoop"]
                                                                      ELSE /\ LET reqOk == ((cmd).key) \in ((smDomain)[i]) IN
                                                                                LET value93 == [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm)[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client] IN
                                                                                  /\ ((network)[(entry).client]).enabled
                                                                                  /\ (Len(((network)[(entry).client]).queue)) < (BufferSize)
                                                                                  /\ network' = [network EXCEPT ![(entry).client] = [queue |-> Append(((network)[(entry).client]).queue, value93), enabled |-> ((network)[(entry).client]).enabled]]
                                                                                  /\ pc' = [pc EXCEPT ![self] = "applyLoop"]
                                                                           /\ UNCHANGED << sm, 
                                                                                           smDomain >>
                                    ELSE /\ commitIndex' = [commitIndex EXCEPT ![srvId2[self]] = ((commitIndex)[srvId2[self]]) + (1)]
                                         /\ LET i == srvId2[self] IN
                                              LET k == (commitIndex')[i] IN
                                                LET entry == ((log)[i])[k] IN
                                                  LET cmd == (entry).cmd IN
                                                    LET respType == IF ((cmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse IN
                                                      IF ((cmd).type) = (Put)
                                                         THEN /\ sm' = [sm EXCEPT ![i] = ((sm)[i]) @@ (((cmd).key) :> ((cmd).value))]
                                                              /\ smDomain' = [smDomain EXCEPT ![i] = ((smDomain)[i]) \union ({(cmd).key})]
                                                              /\ LET reqOk == ((cmd).key) \in ((smDomain')[i]) IN
                                                                   LET value94 == [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm')[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client] IN
                                                                     /\ ((network)[(entry).client]).enabled
                                                                     /\ (Len(((network)[(entry).client]).queue)) < (BufferSize)
                                                                     /\ network' = [network EXCEPT ![(entry).client] = [queue |-> Append(((network)[(entry).client]).queue, value94), enabled |-> ((network)[(entry).client]).enabled]]
                                                                     /\ pc' = [pc EXCEPT ![self] = "applyLoop"]
                                                         ELSE /\ LET reqOk == ((cmd).key) \in ((smDomain)[i]) IN
                                                                   LET value95 == [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm)[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client] IN
                                                                     /\ ((network)[(entry).client]).enabled
                                                                     /\ (Len(((network)[(entry).client]).queue)) < (BufferSize)
                                                                     /\ network' = [network EXCEPT ![(entry).client] = [queue |-> Append(((network)[(entry).client]).queue, value95), enabled |-> ((network)[(entry).client]).enabled]]
                                                                     /\ pc' = [pc EXCEPT ![self] = "applyLoop"]
                                                              /\ UNCHANGED << sm, 
                                                                              smDomain >>
                         ELSE /\ pc' = [pc EXCEPT ![self] = "serverAdvanceCommitIndexLoop"]
                              /\ UNCHANGED << network, commitIndex, sm, 
                                              smDomain >>
                   /\ UNCHANGED << fd, state, currentTerm, nextIndex, 
                                   matchIndex, log, plog, votedFor, 
                                   votesResponded, votesGranted, leader, 
                                   leaderTimeout, appendEntriesCh, reqCh, 
                                   respCh, requestVoteSrvId, 
                                   appendEntriesSrvId, advanceCommitIndexSrvId, 
                                   becomeLeaderSrvId, crasherSrvId, idx, m, 
                                   srvId, idx0, srvId0, idx1, srvId1, 
                                   newCommitIndex, srvId2, srvId3, leader0, 
                                   req, resp, reqIdx, timeout, srvId4 >>

s3(self) == serverAdvanceCommitIndexLoop(self) \/ applyLoop(self)

serverBecomeLeaderLoop(self) == /\ pc[self] = "serverBecomeLeaderLoop"
                                /\ IF TRUE
                                      THEN /\ IF ExploreFail
                                                 THEN /\ LET yielded_network90 == ((network)[srvId3[self]]).enabled IN
                                                           IF ~ (yielded_network90)
                                                              THEN /\ FALSE
                                                                   /\ (((state)[srvId3[self]]) = (Candidate)) /\ (isQuorum((votesGranted)[srvId3[self]]))
                                                                   /\ LET i == srvId3[self] IN
                                                                        /\ state' = [state EXCEPT ![i] = Leader]
                                                                        /\ nextIndex' = [nextIndex EXCEPT ![i] = [j \in ServerSet |-> (Len((log)[i])) + (1)]]
                                                                        /\ matchIndex' = [matchIndex EXCEPT ![i] = [j \in ServerSet |-> 0]]
                                                                        /\ leader' = [leader EXCEPT ![i] = i]
                                                                        /\ appendEntriesCh' = TRUE
                                                                        /\ IF Debug
                                                                              THEN /\ PrintT(<<"BecomeLeader", i, (currentTerm)[i]>>)
                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverBecomeLeaderLoop"]
                                                                              ELSE /\ pc' = [pc EXCEPT ![self] = "serverBecomeLeaderLoop"]
                                                              ELSE /\ (((state)[srvId3[self]]) = (Candidate)) /\ (isQuorum((votesGranted)[srvId3[self]]))
                                                                   /\ LET i == srvId3[self] IN
                                                                        /\ state' = [state EXCEPT ![i] = Leader]
                                                                        /\ nextIndex' = [nextIndex EXCEPT ![i] = [j \in ServerSet |-> (Len((log)[i])) + (1)]]
                                                                        /\ matchIndex' = [matchIndex EXCEPT ![i] = [j \in ServerSet |-> 0]]
                                                                        /\ leader' = [leader EXCEPT ![i] = i]
                                                                        /\ appendEntriesCh' = TRUE
                                                                        /\ IF Debug
                                                                              THEN /\ PrintT(<<"BecomeLeader", i, (currentTerm)[i]>>)
                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverBecomeLeaderLoop"]
                                                                              ELSE /\ pc' = [pc EXCEPT ![self] = "serverBecomeLeaderLoop"]
                                                 ELSE /\ (((state)[srvId3[self]]) = (Candidate)) /\ (isQuorum((votesGranted)[srvId3[self]]))
                                                      /\ LET i == srvId3[self] IN
                                                           /\ state' = [state EXCEPT ![i] = Leader]
                                                           /\ nextIndex' = [nextIndex EXCEPT ![i] = [j \in ServerSet |-> (Len((log)[i])) + (1)]]
                                                           /\ matchIndex' = [matchIndex EXCEPT ![i] = [j \in ServerSet |-> 0]]
                                                           /\ leader' = [leader EXCEPT ![i] = i]
                                                           /\ appendEntriesCh' = TRUE
                                                           /\ IF Debug
                                                                 THEN /\ PrintT(<<"BecomeLeader", i, (currentTerm)[i]>>)
                                                                      /\ pc' = [pc EXCEPT ![self] = "serverBecomeLeaderLoop"]
                                                                 ELSE /\ pc' = [pc EXCEPT ![self] = "serverBecomeLeaderLoop"]
                                      ELSE /\ pc' = [pc EXCEPT ![self] = "Done"]
                                           /\ UNCHANGED << state, nextIndex, 
                                                           matchIndex, leader, 
                                                           appendEntriesCh >>
                                /\ UNCHANGED << network, fd, currentTerm, 
                                                commitIndex, log, plog, 
                                                votedFor, votesResponded, 
                                                votesGranted, sm, smDomain, 
                                                leaderTimeout, reqCh, respCh, 
                                                requestVoteSrvId, 
                                                appendEntriesSrvId, 
                                                advanceCommitIndexSrvId, 
                                                becomeLeaderSrvId, 
                                                crasherSrvId, idx, m, srvId, 
                                                idx0, srvId0, idx1, srvId1, 
                                                newCommitIndex, srvId2, srvId3, 
                                                leader0, req, resp, reqIdx, 
                                                timeout, srvId4 >>

s4(self) == serverBecomeLeaderLoop(self)

clientLoop(self) == /\ pc[self] = "clientLoop"
                    /\ IF TRUE
                          THEN /\ (Len(reqCh)) > (0)
                               /\ LET res00 == Head(reqCh) IN
                                    /\ reqCh' = Tail(reqCh)
                                    /\ LET yielded_reqCh0 == res00 IN
                                         /\ req' = [req EXCEPT ![self] = yielded_reqCh0]
                                         /\ reqIdx' = [reqIdx EXCEPT ![self] = (reqIdx[self]) + (1)]
                                         /\ pc' = [pc EXCEPT ![self] = "sndReq"]
                          ELSE /\ pc' = [pc EXCEPT ![self] = "Done"]
                               /\ UNCHANGED << reqCh, req, reqIdx >>
                    /\ UNCHANGED << network, fd, state, currentTerm, 
                                    commitIndex, nextIndex, matchIndex, log, 
                                    plog, votedFor, votesResponded, 
                                    votesGranted, leader, sm, smDomain, 
                                    leaderTimeout, appendEntriesCh, respCh, 
                                    requestVoteSrvId, appendEntriesSrvId, 
                                    advanceCommitIndexSrvId, becomeLeaderSrvId, 
                                    crasherSrvId, idx, m, srvId, idx0, srvId0, 
                                    idx1, srvId1, newCommitIndex, srvId2, 
                                    srvId3, leader0, resp, timeout, srvId4 >>

sndReq(self) == /\ pc[self] = "sndReq"
                /\ IF (leader0[self]) = (Nil)
                      THEN /\ \E srv1 \in ServerSet:
                                /\ leader0' = [leader0 EXCEPT ![self] = srv1]
                                /\ IF ((req[self]).type) = (Put)
                                      THEN /\ \/ /\ LET value100 == [mtype |-> ClientPutRequest, mcmd |-> [idx |-> reqIdx[self], type |-> Put, key |-> (req[self]).key, value |-> (req[self]).value], msource |-> self, mdest |-> leader0'[self]] IN
                                                      /\ ((network)[leader0'[self]]).enabled
                                                      /\ (Len(((network)[leader0'[self]]).queue)) < (BufferSize)
                                                      /\ network' = [network EXCEPT ![leader0'[self]] = [queue |-> Append(((network)[leader0'[self]]).queue, value100), enabled |-> ((network)[leader0'[self]]).enabled]]
                                                      /\ IF Debug
                                                            THEN /\ PrintT(<<"ClientSndReq", self, leader0'[self], reqIdx[self], req[self]>>)
                                                                 /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                            ELSE /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                              \/ /\ LET yielded_fd40 == (fd)[leader0'[self]] IN
                                                      /\ yielded_fd40
                                                      /\ IF Debug
                                                            THEN /\ PrintT(<<"ClientSndReq", self, leader0'[self], reqIdx[self], req[self]>>)
                                                                 /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                            ELSE /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                 /\ UNCHANGED network
                                      ELSE /\ IF ((req[self]).type) = (Get)
                                                 THEN /\ \/ /\ LET value116 == [mtype |-> ClientGetRequest, mcmd |-> [idx |-> reqIdx[self], type |-> Get, key |-> (req[self]).key], msource |-> self, mdest |-> leader0'[self]] IN
                                                                 /\ ((network)[leader0'[self]]).enabled
                                                                 /\ (Len(((network)[leader0'[self]]).queue)) < (BufferSize)
                                                                 /\ network' = [network EXCEPT ![leader0'[self]] = [queue |-> Append(((network)[leader0'[self]]).queue, value116), enabled |-> ((network)[leader0'[self]]).enabled]]
                                                                 /\ IF Debug
                                                                       THEN /\ PrintT(<<"ClientSndReq", self, leader0'[self], reqIdx[self], req[self]>>)
                                                                            /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                                       ELSE /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                         \/ /\ LET yielded_fd50 == (fd)[leader0'[self]] IN
                                                                 /\ yielded_fd50
                                                                 /\ IF Debug
                                                                       THEN /\ PrintT(<<"ClientSndReq", self, leader0'[self], reqIdx[self], req[self]>>)
                                                                            /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                                       ELSE /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                            /\ UNCHANGED network
                                                 ELSE /\ IF Debug
                                                            THEN /\ PrintT(<<"ClientSndReq", self, leader0'[self], reqIdx[self], req[self]>>)
                                                                 /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                            ELSE /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                      /\ UNCHANGED network
                      ELSE /\ IF ((req[self]).type) = (Put)
                                 THEN /\ \/ /\ LET value101 == [mtype |-> ClientPutRequest, mcmd |-> [idx |-> reqIdx[self], type |-> Put, key |-> (req[self]).key, value |-> (req[self]).value], msource |-> self, mdest |-> leader0[self]] IN
                                                 /\ ((network)[leader0[self]]).enabled
                                                 /\ (Len(((network)[leader0[self]]).queue)) < (BufferSize)
                                                 /\ network' = [network EXCEPT ![leader0[self]] = [queue |-> Append(((network)[leader0[self]]).queue, value101), enabled |-> ((network)[leader0[self]]).enabled]]
                                                 /\ IF Debug
                                                       THEN /\ PrintT(<<"ClientSndReq", self, leader0[self], reqIdx[self], req[self]>>)
                                                            /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                       ELSE /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                         \/ /\ LET yielded_fd41 == (fd)[leader0[self]] IN
                                                 /\ yielded_fd41
                                                 /\ IF Debug
                                                       THEN /\ PrintT(<<"ClientSndReq", self, leader0[self], reqIdx[self], req[self]>>)
                                                            /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                       ELSE /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                            /\ UNCHANGED network
                                 ELSE /\ IF ((req[self]).type) = (Get)
                                            THEN /\ \/ /\ LET value117 == [mtype |-> ClientGetRequest, mcmd |-> [idx |-> reqIdx[self], type |-> Get, key |-> (req[self]).key], msource |-> self, mdest |-> leader0[self]] IN
                                                            /\ ((network)[leader0[self]]).enabled
                                                            /\ (Len(((network)[leader0[self]]).queue)) < (BufferSize)
                                                            /\ network' = [network EXCEPT ![leader0[self]] = [queue |-> Append(((network)[leader0[self]]).queue, value117), enabled |-> ((network)[leader0[self]]).enabled]]
                                                            /\ IF Debug
                                                                  THEN /\ PrintT(<<"ClientSndReq", self, leader0[self], reqIdx[self], req[self]>>)
                                                                       /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                                  ELSE /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                    \/ /\ LET yielded_fd51 == (fd)[leader0[self]] IN
                                                            /\ yielded_fd51
                                                            /\ IF Debug
                                                                  THEN /\ PrintT(<<"ClientSndReq", self, leader0[self], reqIdx[self], req[self]>>)
                                                                       /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                                  ELSE /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                       /\ UNCHANGED network
                                            ELSE /\ IF Debug
                                                       THEN /\ PrintT(<<"ClientSndReq", self, leader0[self], reqIdx[self], req[self]>>)
                                                            /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                       ELSE /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                 /\ UNCHANGED network
                           /\ UNCHANGED leader0
                /\ UNCHANGED << fd, state, currentTerm, commitIndex, nextIndex, 
                                matchIndex, log, plog, votedFor, 
                                votesResponded, votesGranted, leader, sm, 
                                smDomain, leaderTimeout, appendEntriesCh, 
                                reqCh, respCh, requestVoteSrvId, 
                                appendEntriesSrvId, advanceCommitIndexSrvId, 
                                becomeLeaderSrvId, crasherSrvId, idx, m, srvId, 
                                idx0, srvId0, idx1, srvId1, newCommitIndex, 
                                srvId2, srvId3, req, resp, reqIdx, timeout, 
                                srvId4 >>

rcvResp(self) == /\ pc[self] = "rcvResp"
                 /\ \/ /\ Assert(((network)[self]).enabled, 
                                 "Failure of assertion at line 8275, column 9.")
                       /\ (Len(((network)[self]).queue)) > (0)
                       /\ LET readMsg10 == Head(((network)[self]).queue) IN
                            /\ network' = [network EXCEPT ![self] = [queue |-> Tail(((network)[self]).queue), enabled |-> ((network)[self]).enabled]]
                            /\ LET yielded_network100 == readMsg10 IN
                                 /\ resp' = [resp EXCEPT ![self] = yielded_network100]
                                 /\ IF Debug
                                       THEN /\ PrintT(<<"ClientRcvResp", self, leader0[self], reqIdx[self], resp'[self]>>)
                                            /\ Assert(((resp'[self]).mdest) = (self), 
                                                      "Failure of assertion at line 8283, column 15.")
                                            /\ IF (((resp'[self]).mresponse).idx) # (reqIdx[self])
                                                  THEN /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                       /\ UNCHANGED << respCh, 
                                                                       leader0 >>
                                                  ELSE /\ leader0' = [leader0 EXCEPT ![self] = (resp'[self]).mleaderHint]
                                                       /\ Assert(((((req[self]).type) = (Get)) => (((resp'[self]).mtype) = (ClientGetResponse))) /\ ((((req[self]).type) = (Put)) => (((resp'[self]).mtype) = (ClientPutResponse))), 
                                                                 "Failure of assertion at line 8288, column 17.")
                                                       /\ IF ~ ((resp'[self]).msuccess)
                                                             THEN /\ pc' = [pc EXCEPT ![self] = "sndReq"]
                                                                  /\ UNCHANGED respCh
                                                             ELSE /\ Assert(((((resp'[self]).mresponse).idx) = (reqIdx[self])) /\ ((((resp'[self]).mresponse).key) = ((req[self]).key)), 
                                                                            "Failure of assertion at line 8292, column 19.")
                                                                  /\ respCh' = resp'[self]
                                                                  /\ pc' = [pc EXCEPT ![self] = "clientLoop"]
                                       ELSE /\ Assert(((resp'[self]).mdest) = (self), 
                                                      "Failure of assertion at line 8298, column 15.")
                                            /\ IF (((resp'[self]).mresponse).idx) # (reqIdx[self])
                                                  THEN /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                       /\ UNCHANGED << respCh, 
                                                                       leader0 >>
                                                  ELSE /\ leader0' = [leader0 EXCEPT ![self] = (resp'[self]).mleaderHint]
                                                       /\ Assert(((((req[self]).type) = (Get)) => (((resp'[self]).mtype) = (ClientGetResponse))) /\ ((((req[self]).type) = (Put)) => (((resp'[self]).mtype) = (ClientPutResponse))), 
                                                                 "Failure of assertion at line 8303, column 17.")
                                                       /\ IF ~ ((resp'[self]).msuccess)
                                                             THEN /\ pc' = [pc EXCEPT ![self] = "sndReq"]
                                                                  /\ UNCHANGED respCh
                                                             ELSE /\ Assert(((((resp'[self]).mresponse).idx) = (reqIdx[self])) /\ ((((resp'[self]).mresponse).key) = ((req[self]).key)), 
                                                                            "Failure of assertion at line 8307, column 19.")
                                                                  /\ respCh' = resp'[self]
                                                                  /\ pc' = [pc EXCEPT ![self] = "clientLoop"]
                    \/ /\ LET yielded_fd60 == (fd)[leader0[self]] IN
                            LET yielded_network110 == Len(((network)[self]).queue) IN
                              /\ ((yielded_fd60) /\ ((yielded_network110) = (0))) \/ (timeout[self])
                              /\ leader0' = [leader0 EXCEPT ![self] = Nil]
                              /\ pc' = [pc EXCEPT ![self] = "sndReq"]
                       /\ UNCHANGED <<network, respCh, resp>>
                 /\ UNCHANGED << fd, state, currentTerm, commitIndex, 
                                 nextIndex, matchIndex, log, plog, votedFor, 
                                 votesResponded, votesGranted, leader, sm, 
                                 smDomain, leaderTimeout, appendEntriesCh, 
                                 reqCh, requestVoteSrvId, appendEntriesSrvId, 
                                 advanceCommitIndexSrvId, becomeLeaderSrvId, 
                                 crasherSrvId, idx, m, srvId, idx0, srvId0, 
                                 idx1, srvId1, newCommitIndex, srvId2, srvId3, 
                                 req, reqIdx, timeout, srvId4 >>

client(self) == clientLoop(self) \/ sndReq(self) \/ rcvResp(self)

serverCrash(self) == /\ pc[self] = "serverCrash"
                     /\ LET value120 == FALSE IN
                          /\ network' = [network EXCEPT ![srvId4[self]] = [queue |-> ((network)[srvId4[self]]).queue, enabled |-> value120]]
                          /\ pc' = [pc EXCEPT ![self] = "fdUpdate"]
                     /\ UNCHANGED << fd, state, currentTerm, commitIndex, 
                                     nextIndex, matchIndex, log, plog, 
                                     votedFor, votesResponded, votesGranted, 
                                     leader, sm, smDomain, leaderTimeout, 
                                     appendEntriesCh, reqCh, respCh, 
                                     requestVoteSrvId, appendEntriesSrvId, 
                                     advanceCommitIndexSrvId, 
                                     becomeLeaderSrvId, crasherSrvId, idx, m, 
                                     srvId, idx0, srvId0, idx1, srvId1, 
                                     newCommitIndex, srvId2, srvId3, leader0, 
                                     req, resp, reqIdx, timeout, srvId4 >>

fdUpdate(self) == /\ pc[self] = "fdUpdate"
                  /\ LET value130 == TRUE IN
                       /\ fd' = [fd EXCEPT ![srvId4[self]] = value130]
                       /\ pc' = [pc EXCEPT ![self] = "block"]
                  /\ UNCHANGED << network, state, currentTerm, commitIndex, 
                                  nextIndex, matchIndex, log, plog, votedFor, 
                                  votesResponded, votesGranted, leader, sm, 
                                  smDomain, leaderTimeout, appendEntriesCh, 
                                  reqCh, respCh, requestVoteSrvId, 
                                  appendEntriesSrvId, advanceCommitIndexSrvId, 
                                  becomeLeaderSrvId, crasherSrvId, idx, m, 
                                  srvId, idx0, srvId0, idx1, srvId1, 
                                  newCommitIndex, srvId2, srvId3, leader0, req, 
                                  resp, reqIdx, timeout, srvId4 >>

block(self) == /\ pc[self] = "block"
               /\ FALSE
               /\ pc' = [pc EXCEPT ![self] = "Done"]
               /\ UNCHANGED << network, fd, state, currentTerm, commitIndex, 
                               nextIndex, matchIndex, log, plog, votedFor, 
                               votesResponded, votesGranted, leader, sm, 
                               smDomain, leaderTimeout, appendEntriesCh, reqCh, 
                               respCh, requestVoteSrvId, appendEntriesSrvId, 
                               advanceCommitIndexSrvId, becomeLeaderSrvId, 
                               crasherSrvId, idx, m, srvId, idx0, srvId0, idx1, 
                               srvId1, newCommitIndex, srvId2, srvId3, leader0, 
                               req, resp, reqIdx, timeout, srvId4 >>

crasher(self) == serverCrash(self) \/ fdUpdate(self) \/ block(self)

(* Allow infinite stuttering to prevent deadlock on termination. *)
Terminating == /\ \A self \in ProcSet: pc[self] = "Done"
               /\ UNCHANGED vars

Next == (\E self \in ServerSet: s0(self))
           \/ (\E self \in ServerRequestVoteSet: s1(self))
           \/ (\E self \in ServerAppendEntriesSet: s2(self))
           \/ (\E self \in ServerAdvanceCommitIndexSet: s3(self))
           \/ (\E self \in ServerBecomeLeaderSet: s4(self))
           \/ (\E self \in ClientSet: client(self))
           \/ (\E self \in ServerCrasherSet: crasher(self))
           \/ Terminating

Spec == /\ Init /\ [][Next]_vars
        /\ \A self \in ServerSet : WF_vars(s0(self))
        /\ \A self \in ServerRequestVoteSet : WF_vars(s1(self))
        /\ \A self \in ServerAppendEntriesSet : WF_vars(s2(self))
        /\ \A self \in ServerAdvanceCommitIndexSet : WF_vars(s3(self))
        /\ \A self \in ServerBecomeLeaderSet : WF_vars(s4(self))
        /\ \A self \in ClientSet : WF_vars(client(self))
        /\ \A self \in ServerCrasherSet : WF_vars(crasher(self))

Termination == <>(\A self \in ProcSet: pc[self] = "Done")

\* END TRANSLATION  TLA-f157040c4fee3bde8856de68970be59d

\* Constraints

LimitTerm == \A i \in ServerSet: currentTerm[i] <= MaxTerm
LimitCommitIndex == \A i \in ServerSet: commitIndex[i] <= MaxCommitIndex

LimitNodeFailure == Cardinality({i \in ServerSet: \lnot network[i].enabled}) <= MaxNodeFail

\* Invariants

ElectionSafety == \lnot (\E i, j \in ServerSet:
                                        /\ i /= j
                                        /\ currentTerm[i] = currentTerm[j]
                                        /\ state[i] = Leader
                                        /\ state[j] = Leader)

LogMatching == \A i, j \in ServerSet:
                        \A k \in 1..Min({Len(log[i]), Len(log[j])}):
                            log[i][k].term = log[j][k].term
                                => SubSeq(log[i], 1, k) = SubSeq(log[j], 1, k)

LeaderCompleteness == \A i \in ServerSet:
                        \A logIdx \in DOMAIN log[i]:
                          logIdx <= commitIndex[i] =>
                            \A j \in ServerSet:
                              state[j] = Leader /\ currentTerm[j] >= log[i][logIdx].term =>
                                /\ logIdx \in DOMAIN log[j]
                                /\ log[i][logIdx] = log[j][logIdx]

StateMachineSafety == \A i, j \in ServerSet:
                            \A k \in 1..Min({commitIndex[i], commitIndex[j]}):
                                        log[i][k] = log[j][k]

ApplyLogOK == \A i, j \in ServerSet:
                    commitIndex[i] = commitIndex[j] => 
                        /\ sm[i] = sm[j]
                        /\ smDomain[i] = smDomain[j]

plogOK == \A i \in ServerSet: log[i] = plog[i]

\* Properties

LeaderAppendOnly == [][\A i \in ServerSet:
                        (state[i] = Leader /\ state'[i] = Leader)
                            => log[i] = SubSeq(log'[i], 1, Len(log[i]))]_vars

ClientRcvResp(i) == pc[i] = "rcvResp" ~> pc[i] = "clientLoop"
ClientsOK == (\E i \in ServerSet: state[i] = Leader) => \A i \in ClientSet: ClientRcvResp(i)

\* Expected this to be violated if NumServers > 1,
\* but TLC doesn't report violation in case of NumServers = 2 because 
\* of using temporal properties and state constraints at the same time. 
\* TLC reports violation when NumServers = 3.
ElectionLiveness == <>(\E i \in ServerSet: state[i] = Leader)

=============================================================================
